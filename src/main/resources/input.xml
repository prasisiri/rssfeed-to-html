<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
<channel>
<title>AWS Well-Architected Labs</title>
<link>https://wellarchitectedlabs.com/</link>
<description>Recent content on AWS Well-Architected Labs</description>
<generator>Hugo -- gohugo.io</generator>
<lastBuildDate>Mon, 20 Apr 2020 22:31:40 -0400</lastBuildDate>
<atom:link href="https://wellarchitectedlabs.com/index.xml" rel="self" type="application/rss+xml"/>
<item>
<title>Deploy lab environment and Scheduler solution</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_ec2_scheduling_at_scale/1_deploy_sample_instances_and_scheduler_solution/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_ec2_scheduling_at_scale/1_deploy_sample_instances_and_scheduler_solution/</guid>
<description>In this section, we will deploy the Instance Scheduler on AWS from the AWS Solutions Library. We will also deploy a small sample fleet of EC2 instances that will be our target for the Instance Scheduler solution. Architecture Overview Instance Scheduler solution overview The AWS CloudFormation template provided as part of the Instance Scheduler solution sets up an Amazon EventBridge schedule rule at a user-defined interval. This rule invokes the Instance Scheduler AWS Lambda function.</description>
</item>
<item>
<title>Deploy the lab environment</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/1_deploy_ssm_application_environment/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/1_deploy_ssm_application_environment/</guid>
<description>In this section, you will deploy the lab environment. Once the solution has been implemented, you will be able to embed AWS Health API insights into the test operational change process to automatically suspend operational changes whenever an AWS Health event is reported in a Region that you’re operating in. Architecture Overview The solution leverages the following AWS Services and features in your AWS Account: AWS Systems Manager Change Manager which is an enterprise change management framework for requesting, approving, implementing, and reporting on operational changes to your application configuration and infrastructure.</description>
</item>
<item>
<title>Deploy Dashboards</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/deploy_dashboards/</link>
<pubDate>Mon, 10 Oct 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/deploy_dashboards/</guid>
<description>Authors Yuriy Prykhodko, AWS Principal Technical Account Manager Iakov Gan, AWS Sr. Technical Account Manager Thomas Buatois, AWS Cloud Infrastructure Architect (ProServe) Contributors Aaron Edell, Global Head of Business and GTM - Customer Cloud Intelligence Setup We recommend deployment of CUDOS, KPI and Cost Intelligence Dashboard in a dedicated account, other than your Management (Payer) Account. This Lab provides a Cloud Formation template to move data from your Management Account to a dedicated one.</description>
</item>
<item>
<title>Enable VPC Flow Logs</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_vpc_flow_logs_analysis_dashboard/1_enable_vpc_flow_logs/</link>
<pubDate>Sat, 18 Sep 2021 06:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_vpc_flow_logs_analysis_dashboard/1_enable_vpc_flow_logs/</guid>
<description>Central AWS Account: AWS account which you want to designate for storing VPC Flow Logs centrally. This account will also contain Athena DB, table and QuickSight Dashboard. Additional Accounts: These are other accounts that you own and has VPCs that you wish to enable Flow Logs and have an ability to push it to Central AWS Account&rsquo;s S3 bucket. QuickSight: To manage VPC Flow Logs and QuickSight dashboard in central account please make sure you create resources for the central account in the region supported by QuickSight.</description>
</item>
<item>
<title>Deploy the Infrastructure and Application</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/1_deploy_infra/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/1_deploy_infra/</guid>
<description>You will create a multi-tier architecture using AWS and run a simple service on it. The service is a web server running on Amazon EC2 fronted by an Elastic Load Balancer reverse-proxy, with a data store on Amazon Relational Database Service (RDS). 1.1 Log into the AWS console If you are attending an in-person workshop and were provided with an AWS account by the instructor: Click here for instructions to access your assigned AWS account: Go to https://dashboard.</description>
</item>
<item>
<title>Deploy infrastructure</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_manage_workload_risks_with_opscenter/1_deploy_infrastructure/</link>
<pubDate>Tue, 31 Aug 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_manage_workload_risks_with_opscenter/1_deploy_infrastructure/</guid>
<description>The AWS WA Tool API provides programmatic access to the AWS WA Tool and can be used to manage workloads, retrieve risk information and improvement plans. AWS WA Tool API calls are made from a Lambda function that is invoked periodically using Amazon EventBridge. The API calls retrieve workload details such as number of High Risk Issues (HRIs) and Medium Risk Issues (MRIs), best practices missing, and improvement plans. Using this information, the Lambda function creates OpsItems within OpsCenter for best practices missing from all workloads in the AWS Region the solution is deployed in.</description>
</item>
<item>
<title>Create Stack</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_detective_controls/1_create_stack/</link>
<pubDate>Mon, 07 Jun 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_detective_controls/1_create_stack/</guid>
<description>Creating this CloudFormation stack will configure CloudTrail including a new trail, an S3 bucket, and a CloudWatch Logs group for CloudTrail logs. You can optionally configure AWS Config and Amazon GuardDuty by setting the CloudFormation parameter for each. Download the latest version of the CloudFormation template here: cloudtrail-config-guardduty-securityhub.yaml Go to the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation and click Create Stack &gt; With new resources Leave Prepare template setting as-is</description>
</item>
<item>
<title>Deploy The Blue Car Application</title>
<link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/1_deploy_blue_car_application/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/1_deploy_blue_car_application/</guid>
<description>You will start by deploying the example application which allows a customer to order medical assistance based on selecting a map location. The application consists of a public AWS API gateway which connects to a serverless application layer AWS Lambda, which uses Amazon DynamoDB . You will also deploy AWS Amplify to host the static website with CI/CD build-in and Amazon Cognito to manage users. Our deployed architecture should reflect the following diagram:</description>
</item>
<item>
<title>Deploy the lab base infrastructure</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/1_deploy_the_lab_base_infrastructure/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/1_deploy_the_lab_base_infrastructure/</guid>
<description>In this section we will build out our base lab infrastructure. This will consist of a public API gateway which connects to Lambda (application layer). The application layer will connect to RDS for MySQL (database layer) within a Virtual Private Cloud (VPC). The environment will be deployed to separate private subnets which will allow for segregation of application and network traffic across multiple Availability Zones. We will also deploy an Internet Gateway and NAT gateway along with appropriate routes from both public and private subnets.</description>
</item>
<item>
<title>Create a Tag Policy</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_8_tag_policies/1_tag_policy/</link>
<pubDate>Thu, 20 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_8_tag_policies/1_tag_policy/</guid>
<description>Tag policies are a type of policy that can help you standardize tags across resources in your Organization&rsquo;s accounts. In a tag policy, you specify tagging rules applicable to resources when they are tagged. For example, a tag policy can specify that when the CostCenter tag is attached to a resource, it must use the case treatment and tag values that the tag policy defines, in order to be considered compliant.</description>
</item>
<item>
<title>Configure Environment</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/exportimport_utility/1_configure_env/</link>
<pubDate>Wed, 19 May 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/exportimport_utility/1_configure_env/</guid>
<description>You must have the AWS SDK for Python (Boto3) installed to run this script. Here is more information about installing and configuring the SDK. Check Python SDK Version You must verify that you are running at least v1.16.38 of the AWS SDK for Python to have all of the components necessary to use the Well-Architected API. How to verify version $ pip3 show boto3 Name: boto3 Version: 1.17.27 Summary: The AWS SDK for Python Home-page: https://github.</description>
</item>
<item>
<title>Step 1 - Protect privileged credentials</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/1_protect_privileged_credentials/</link>
<pubDate>Tue, 11 May 2021 11:09:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/1_protect_privileged_credentials/</guid>
<description>In this exercise we will use AWS Identity &amp; Access Management (IAM) in the AWS Management Console to configure and enable a virtual multi factor authentication (MFA) device for the root. To manage MFA devices for the AWS account, you must be signed in to AWS using your root user credentials. You cannot manage MFA devices for the root user using other credentials. Use your AWS account email address and password to sign in as the AWS account root user to the IAM console at https://console.</description>
</item>
<item>
<title>Configure Environment</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/export_to_xlsx/1_configure_env/</link>
<pubDate>Tue, 04 May 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/export_to_xlsx/1_configure_env/</guid>
<description>You must have the AWS SDK for Python (Boto3) installed to run this script. Here is more information about installing and configuring the SDK. Check Python SDK Version You must verify that you are running at least v1.16.38 of the AWS SDK for Python to have all of the components necessary to use the Well-Architected API. How to verify version $ pip3 show boto3 Name: boto3 Version: 1.17.27 Summary: The AWS SDK for Python Home-page: https://github.</description>
</item>
<item>
<title>Configure Environment</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/copy_wa_review_between_accounts/1_configure_env/</link>
<pubDate>Sun, 18 Apr 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/copy_wa_review_between_accounts/1_configure_env/</guid>
<description>You must have the AWS SDK for Python (Boto3) installed to run this script. Here is more information about installing and configuring the SDK. Check Python SDK Version You must verify that you are running at least v1.16.38 of the AWS SDK for Python to have all of the components necessary to use the Well-Architected API. How to verify version $ pip3 show boto3 Name: boto3 Version: 1.17.27 Summary: The AWS SDK for Python Home-page: https://github.</description>
</item>
<item>
<title>Configure Environment</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/generate_custom_html_wafr_report/1_configure_env/</link>
<pubDate>Sun, 18 Apr 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/generate_custom_html_wafr_report/1_configure_env/</guid>
<description>You must have the AWS SDK for Python (Boto3) installed to run this script. Here is more information about installing and configuring the SDK. Check Python SDK Version You must verify that you are running at least v1.16.38 of the AWS SDK for Python to have all of the components necessary to use the Well-Architected API. How to verify version $ pip3 show boto3 Name: boto3 Version: 1.17.27 Summary: The AWS SDK for Python Home-page: https://github.</description>
</item>
<item>
<title>Deploying the infrastructure</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/1_deploy_cfn/</link>
<pubDate>Thu, 25 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/1_deploy_cfn/</guid>
<description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and AWS Lambda functions. If the account you are using does not have these capabilities, you will not be able to complete this lab. Deploy CloudFormation Template Download the DeployWACustomLambda.yaml CloudFormation template to your machine. For this lab, you will need to use us-east-2 Go to the AWS CloudFormation console at https://console.</description>
</item>
<item>
<title>Extract workload data</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/1_etl_wa_workload_data/</link>
<pubDate>Wed, 24 Mar 2021 15:16:08 +1000</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/1_etl_wa_workload_data/</guid>
<description>To extract the Well-Architected workload data, we&rsquo;ll create an AWS Lambda function to query the Well-Architected API. AWS Lambda makes three calls to the Well-Architected Tool API to obtain workload, lens, and milestone information. It performs some minor transformation of the data to normalize the JSON structure and stores the data in an S3 bucket. Create Lambda function Begin by navigating to the Lambda console and choosing the Create function Choose the option to Author from scratch and then fill in extract-war-reports as the function name, &ldquo;Python 3.</description>
</item>
<item>
<title>Adding Tags</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/1_addingtags/</link>
<pubDate>Thu, 18 Mar 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/1_addingtags/</guid>
<description>Last Updated March 2022 Introduction Now that you have your CID dashboards setup, you may want to view or group some of the visuals by tag. Common use cases include seeing spend by application, identifying opportunity by cost category, or building charge-back mechanisms to business units. If you have cost allocation tags or cost categories setup in your AWS account, you will see those tags in your CUR. They show up as their own column.</description>
</item>
<item>
<title>Configure Services</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_journey/1_configure_services/</link>
<pubDate>Mon, 01 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_journey/1_configure_services/</guid>
<description>Create S3 Bucket Create a single S3 bucket that will contain the journey files for all workloads in that account. Log into the console via SSO, go to the S3 service page Click Create bucket Enter a Bucket name starting with cost (we have used cost-wa-reports, you will need to use a unique bucket name) and click Create bucket: Upload the following object into the bucket.</description>
</item>
<item>
<title>Deploy the Infrastructure</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/1_prerequisite/</link>
<pubDate>Sun, 21 Feb 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/1_prerequisite/</guid>
<description>For many organizations, the data that they possess is one of the most valuable assets they have. Backing up data frequently is of vital importance for the long lasting success of any organization. However, a backup of data is only valuable if data can be recovered/restored from the backup. In the cloud, backing up data and testing the restore is easier compared to on-premises datacenters. Automating this process with appropriate notification systems will ensure that an organization&rsquo;s data is backed up frequently, the backups are tested to ensure expected recovery, and appropriate people are notified in case of failures.</description>
</item>
<item>
<title>Create Pricing Data Sources</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/1_pricing_sources/</link>
<pubDate>Sun, 07 Feb 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/1_pricing_sources/</guid>
<description>Option 1: Manual Deployment Click here to continue with the manual Setup Create S3 Bucket and Folders Create a single S3 bucket that contains two folders - od_pricedata and sp_pricedata, these will contain the on-demand pricing data and the Savings Plans pricing data. Log into the console via SSO, go to the S3 service page: Click Create bucket: Enter a Bucket name starting with cost (we have used cost-sptool-pricingfiles, you will need to use a unique bucket name) and click Create bucket: Click on the (bucket name): Click Create folder: Enter a folder name of od_pricedata, click Save: Click Create folder: Enter a folder name of sp_pricedata, click Save: You have now setup the S3 bucket with the two folders that will contain the OnDemand and Savings Plans pricing data.</description>
</item>
<item>
<title>Prerequisites</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/1_prerequisites/</link>
<pubDate>Fri, 15 Jan 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/1_prerequisites/</guid>
<description>Check if you can see data in AWS Compute Optimizer and AWS Trusted Advisor. If there is no data available, complete the following steps and wait until data is available. Opt in for AWS Compute Optimizer Opt in for AWS Compute Optimizer if you have not done so. Enable AWS Compute Optimizer at no additional cost. After AWS Compute Optimizer is enabled it may take up to 12 hours to fully analyze the AWS resources in your account.</description>
</item>
<item>
<title>Configure Environment</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/1_configure_env/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/1_configure_env/</guid>
<description>Install AWS CLI v2 The AWS Command Line Interface (AWS CLI) is a unified tool that provides a consistent interface for interacting with all parts of AWS. Linux This includes: AWS CloudShell All native Linux installs Windows Subsystem for Linux (WSL) Verify existing version: Run the following command aws --version If the version number is less than 2.1.12 or you get &ldquo;command not found&rdquo; You need to install or upgrade.</description>
</item>
<item>
<title>Deploy the workload</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/1_deploy_workload/</link>
<pubDate>Mon, 07 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/1_deploy_workload/</guid>
<description>Traditionally most workloads are designed to withstand infrastructure failure by deploying workload components across multiple Availability Zones/Regions, implementing self-healing capabilities such as AutoScaling, etc. While such techniques are effective in ensuring uptime of workload resources, they do not address issues introduced at the workload application level (i.e. a software bug). Leveraging techniques like sharding and shuffle sharding will provide additional reliability to workloads by limiting the blast radius of failures so that only a subset of users are impacted by such failures.</description>
</item>
<item>
<title>Deploying the infrastructure</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/1_deploy_vpc/</link>
<pubDate>Tue, 01 Dec 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/1_deploy_vpc/</guid>
<description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and IAM Instance Profiles. If the account you are using does not have these capabilities, you will not be able to complete this lab. Deploy VPC This step will create the VPC and all components using the example CloudFormation template. Download the latest version of the CloudFormation template here: vpc-alb-app-db.yaml Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.</description>
</item>
<item>
<title>Deploying the infrastructure</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/1_deploy_vpc/</link>
<pubDate>Thu, 19 Nov 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/1_deploy_vpc/</guid>
<description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and IAM Instance Profiles. If the account you are using does not have these capabilities, you will not be able to complete this lab. Deploy VPC This step will create the VPC and all components using the example CloudFormation template. Download the latest version of the CloudFormation template here: vpc-alb-app-db.yaml Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.</description>
</item>
<item>
<title>Grant permissions to your accounts in your AWS Organization</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/1_grant_permissions/</link>
<pubDate>Wed, 21 Oct 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/1_grant_permissions/</guid>
<description>Permissions To ensure Data Collection account can collect information across all accounts in the AWS Organization you must deploy 2 IAM roles for each Management account you wish to collect data from. (if you want to collect data from multiple payers, follow steps for each one) The rest of this page is broken into two sets of instructions: Role for Management Account - A Read Only Role WA-Lambda-Assume-Role-Management-Account must be deployed into any Management account you wish to collect data from.</description>
</item>
<item>
<title>Create S3 bucket</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_cloudfront_with_s3_bucket_origin/1_create_s3/</link>
<pubDate>Sat, 19 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_cloudfront_with_s3_bucket_origin/1_create_s3/</guid>
<description>Create an Amazon S3 bucket to host static content using the Amazon S3 console. For more information about Amazon S3, see Introduction to Amazon S3. Open the Amazon S3 console at https://console.aws.amazon.com/s3/. From the console dashboard, choose Create bucket. Enter a Bucket name for your bucket, type a unique DNS-compliant name for your new bucket. Follow these naming guidelines: The name must be unique across all existing bucket names in Amazon S3.</description>
</item>
<item>
<title>Account Settings & Root User Security</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_aws_account_and_root_user/1_intro/</link>
<pubDate>Wed, 16 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_aws_account_and_root_user/1_intro/</guid>
<description>When you first create an Amazon Web Services (AWS) account, you begin with a single sign-in identity that has complete access to all AWS services and resources in the account. This identity is called the AWS account root user and is accessed by signing in with the email address and password that you used to create the account. It is strongly recommended that you only use the root user by exception.</description>
</item>
<item>
<title>Enable AWS Security Hub</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_enable_security_hub/1_intro/</link>
<pubDate>Wed, 16 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_enable_security_hub/1_intro/</guid>
<description>Table of Contents Getting Started 1. Getting Started The AWS console provides a graphical user interface to search and work with the AWS services. We will use the AWS console to enable AWS Security Hub. 1.1 Enable AWS Config AWS Security Hub requires AWS Config to run within your account. If you have not enabled AWS Config, we&rsquo;ll need to enable that now. If it&rsquo;s already enabled in your account, you can skip to the next step.</description>
</item>
<item>
<title>Deploy the Infrastructure</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/1_deploy_infrastructure/</link>
<pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/1_deploy_infrastructure/</guid>
<description>Many workloads depend on external resources or services for data or additional capabilities such as 3rd party data providers or service providers, DNS providers, etc. Functionality or outcomes of the workload may be at risk when dependent resources or services become degraded or unreachable. Monitoring these dependencies will enable quick action to ensure business continuity is not affected. Setting up alerting and notifications will ensure that appropriate team members are aware of issues and can take action to address the situation.</description>
</item>
<item>
<title>Create Pricing Data Source</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_licensing/1_pricing_sources/</link>
<pubDate>Sun, 30 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_licensing/1_pricing_sources/</guid>
<description>If you have RHEL usage in your CUR you can skip this step, this step sets up a provided Cost and Usage report with RHEL usage for analysis. Create the pricing data source We will create a data source with approximately 24 hours of usage. This is a sample data source which contains multiple workloads, which is representative of running small web server applications. Create the pricing data Log into the console via SSO.</description>
</item>
<item>
<title>Analytics</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/analytics/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/analytics/</guid>
<description>These are queries for AWS Services under the Analytics product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run. For example, if your CUR table is called cur_table and is in a database called cur_db, you would replace ${table_name} with cur_db.</description>
</item>
<item>
<title>Create Cost Intelligence Dashboard</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/1_create_cost_intelligence/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/1_create_cost_intelligence/</guid>
<description>This Lab has moved under the Level 200 Cloud Intelligence Dashboards.Click this link to navigate to the updated Lab Authors Alee Whitman, Commercial Architect (AWS OPTICS) Contributors Arun Santhosh, Specialist SA (Amazon QuickSight) Kareem Syed-Mohammed, Senior Product Manager - Technical (Amazon QuickSight) Aaron Edell, Global Head of Business and GTM - EC2 Insights Timur Tulyaganov, AWS Technical Account Manager Yuriy Prykhodko, AWS Technical Account Manager FAQ The FAQ with the added Visual by Visual breakdown for this dashboard is here.</description>
</item>
<item>
<title>Prerequisites</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/compute-optimizer-dashboards/dashboards/1_prerequisites/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/compute-optimizer-dashboards/dashboards/1_prerequisites/</guid>
<description>1/4 Enable AWS Compute Optimizer To get right sizing recommendations you need to Enroll all accounts to Compute Optmizer. You can use free version that provides recommendations based on 14 days of look-back period. 2/4 Install Compute Optimizer Data Collection Before installing Dashboard please install Compute Optimizer module of Optimization Data Collection lab - this provides an automated way to collect Compute Optimizer recommendations for all accounts in your AWS Organizations and AWS Regions.</description>
</item>
<item>
<title>Prerequisites</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/trusted-advisor-dashboards/dashboards/1_prerequistes/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/trusted-advisor-dashboards/dashboards/1_prerequistes/</guid>
<description>Enable Trusted Advisor Data Collection There are 2 supported data collection methods: Trusted Advisor API with Optimization Data Collection lab (recommended) - provides an automated way to collect Trusted Advisor checks for all accounts in your AWS Organizations via deployment of required AWS resources from provided AWS CloudFormation templates. Supports automated data refresh. Trusted Advisor Organizational View - provides an easy way to collect Trusted Advisor checks for all accounts in your AWS Organizations without need to provision any additional resources.</description>
</item>
<item>
<title>Deploying the infrastructure</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_clock_source_performance/1_deploy/</link>
<pubDate>Tue, 09 Jun 2020 12:00:00 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_clock_source_performance/1_deploy/</guid>
<description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and IAM Instance Profiles. If the account you are using does not have these capabilities, you will not be able to complete this lab. Download the time_test.yaml CloudFormation template to your machine. This lab assumes you will be deploying to the default VPC within your AWS account. If you wish to deploy to a different VPC, just select the subnet that corresponds to your VPC.</description>
</item>
<item>
<title>AWS CloudFormation to Create Groups, Policies and Roles with MFA Enforced</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_iam_groups_and_roles/1_cfn_create_iam_groups_policies/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_iam_groups_and_roles/1_cfn_create_iam_groups_policies/</guid>
<description>Using AWS CloudFormation we are going to deploy a set of groups, roles, and managed policies that will help with your security &ldquo;baseline&rdquo; of your AWS account. 1.1 Create AWS CloudFormation Stack Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.aws.amazon.com/cloudformation/. Click Create stack. Enter the following Amazon S3 URL: https://s3-us-west-2.amazonaws.com/aws-well-architected-labs/Security/Code/baseline-iam.yaml and click Next. Enter the following details: Stack name: The name of this stack.</description>
</item>
<item>
<title>Configure AWS WAF</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_web_application_firewall/1_config_waf/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_web_application_firewall/1_config_waf/</guid>
<description>Using AWS CloudFormation, we are going to deploy a basic example AWS WAF configuration for use with CloudFront. Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.aws.amazon.com/cloudformation/. Note if your CloudFormation console does not look the same, you can enable the redesigned console by clicking New Console in the CloudFormation menu. Click Create stack. Enter the following Amazon S3 URL: https://s3-us-west-2.</description>
</item>
<item>
<title>Configure CloudFront - EC2 or Load Balancer</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_for_web_application/1_config_cloudfront/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_for_web_application/1_config_cloudfront/</guid>
<description>Using the AWS Management Console, we will create a CloudFront distribution, and link it to the AWS WAF ACL we previously created. Open the Amazon CloudFront console at https://console.aws.amazon.com/cloudfront/home. From the console dashboard, choose Create Distribution. Click Get Started in the Web section. Specify the following settings for the distribution: In Origin Domain Name enter the DNS or domain name from your elastic load balancer or EC2 instance.</description>
</item>
<item>
<title>Configure IAM access</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/1_iam_access/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/1_iam_access/</guid>
<description>NOTE: You will need to sign into the management account with root account credentials to perform this action. To allow access to your billing information without using the root credentials you need to enable IAM access. This allows other users (non-root) to access billing information in the management account. This approach provides individual sign-in information for each user, and you can grant each user only the permissions they need to work with your account.</description>
</item>
<item>
<title>Configure Lab Environment</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/1_configure_lab_environment/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/1_configure_lab_environment/</guid>
<description>Overview Any Company (a fictitious Enterprise organization) is running various projects on the AWS cloud in the us-east-1 region, which are owned by various departments within the organization for their respective teams. For example, the Digital department has implemented two critical 2-tier web applications Project1 and Project2 for two different teams called Alpha and Beta under two different cost centres CostCenter-1111 and CostCenter-2222 respectively. The CFO is highly concerned about the entire cost of cloud resources that are generated as part of the digital department and has asked the head of the digital department to share a consolidated cost report exclusive to the digital department, including cost for each service that Alpha and Beta teams are using for their respective projects.</description>
</item>
<item>
<title>Control Tower</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/1_control_tower/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/1_control_tower/</guid>
<description>Leverage AWS ControlTower to create a set of Core AWS accounts and setup additional accounts for shared services such as build tools and individual environments for your workload. If you currently only have one account, create a new AWS account for your Control Tower management account and invite your existing account to join as a legacy AWS account. You can then migrate your workload to new accounts over time. Control Tower applies a number of Service Control Policies to all accounts in your AWS Organization.</description>
</item>
<item>
<title>Create a data set</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_5_cost_visualization/1_create_dataset/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_5_cost_visualization/1_create_dataset/</guid>
<description>We will create a data set so that QuickSight can access our Athena data set, and visualize our CUR data. Log on to the console via SSO, go to the QuickSight service, Enter your email address and click Continue: Click Manage data in the top right: Click New data set: Click Athena: Enter a Data source name, and click Create data source: Select the costmaster database, and then the CUR table you created in Athena, and click Select: Select Directly query your data, and click Visualize: You have now configured a dataset to be able to create visualizations.</description>
</item>
<item>
<title>Create a group of users for testing</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/1_create_test_group/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/1_create_test_group/</guid>
<description>This lab requires you to develop a restrictive IAM policy, then apply the policies to a group of users, then login as a user in that group and verify the policy. We will create this test group. Go to the IAM service page: Click on Groups, click Create New Group: Set the group name to CostTest and click Next Step: Click Next Step: Click Create Group: Click Users: Click Add user: Configure the user as follows:</description>
</item>
<item>
<title>Create and implement an AWS Budget for monthly forecasted cost</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/1_budget_forecast/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/1_budget_forecast/</guid>
<description>Budgets allow you to manage cost and usage by providing notifications or restricting actions when a budget exceeds its threshold (actual or forecasted amounts). Budgets and notifications are updated when your billing data is updated, which is at least once per day. NOTE: You may not receive an alarm for a forecasted budget if your account is new. Forecasting requires existing usage within the account. Create a monthly cost budget for your account We will create a monthly cost budget which will notify if the forecasted amount exceeds the budget.</description>
</item>
<item>
<title>Create IAM policies</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/1_create_policies/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/1_create_policies/</guid>
<description>1.1 Create policy for permission boundary This policy will be used for the permission boundary when the developer role creates their own user role with their delegated permissions. In this lab using AWS IAM we are only going to allow the us-east-1 (North Virginia) and us-west-1 (North California) regions, optionally you can change these to your favourite regions and add / remove as many as you need. The only service actions we are going to allow in these regions are AWS EC2 and AWS Lambda, note that these services require additional supporting actions if you were to re-use this policy after this lab, depending on your requirements.</description>
</item>
<item>
<title>Create IAM policies</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/1_create_policies/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/1_create_policies/</guid>
<description>The policies are split into five different functions for demonstration purposes, you may like to modify and combine them to use after this lab to your exact requirements. In addition to enforcing tags, a region restriction only allow regions us-east-1 (North Virginia) and us-west-1 (North California). 1.1 Create policy named ec2-list-read This policy allows read only permissions with a region condition. The only service actions we are going to allow are EC2, note that you typically require additional supporting actions such as Elastic Load Balancing if you were to re-use this policy after this lab, depending on your requirements.</description>
</item>
<item>
<title>Create role for Lambda in account 2</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_iam_role_assumption/1_create_role_acct_2/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_iam_role_assumption/1_create_role_acct_2/</guid>
<description>Sign in to the AWS Management Console as an IAM user or role in your AWS account, and open the IAM console at https://console.aws.amazon.com/iam/. Click Roles on the left, then create role. Click Another AWS account, enter the account id for account 1 (the origin), then click Next: Permissions. Do not select any managed policies, click Next: Tags. Click Next: Review.</description>
</item>
<item>
<title>Create the CloudFormation Stack</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_updates_and_ingestion/1_cf_stack/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_updates_and_ingestion/1_cf_stack/</guid>
<description>This step is used when there is a single CUR being delivered, and have it automatically update Athena/Glue when there are new versions and new months data. We will follow the steps here: https://docs.aws.amazon.com/cur/latest/userguide/use-athena-cf.html to implement the CloudFormation template, which will automatically update existing CURs, and include new CURs when they are delivered. NOTE: IAM roles will be created, these are used to: Add event notification to existing S3 buckets</description>
</item>
<item>
<title>Create the Data Sources</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_workload_efficiency/1_data_sources/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_workload_efficiency/1_data_sources/</guid>
<description>We first need to create data sources containing the application logs, and the cost and usage reports. In this lab we provide sample files, it is recommended you use these files initially, then use your own files after you are familiar with the requirements and process. We place both logs into S3, crawl them with Glue and then use Athena to confirm a database is created that we can use.</description>
</item>
<item>
<title>Creating data bunker account in console</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_create_a_data_bunker/1_instructions/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_create_a_data_bunker/1_instructions/</guid>
<description>1. Create a logging account from the organizations management account Best practice is to have a separate logging account for your data bunker. This account should only be accessible by folks in your security group with a read only role. How you create this account will depend on your organization&rsquo;s policies, the instructions below are guidance on how to do this. If you do not currently have a landing zone setup see the quest Quick Steps to Security Success for a more in-depth discussion.</description>
</item>
<item>
<title>Deploy Infrastructure using a CloudFormation Stack</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/1_deploy_infra/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/1_deploy_infra/</guid>
<description>This lab illustrates best practices for reliability as described in the AWS Well-Architected Reliability pillar. How do you implement change? Best practice: Deploy changes with automation: Deployments and patching are automated to eliminate negative impact. Design principle: Manage change in automation: Changes to your infrastructure should be made using automation. The changes that need to be managed include changes to the automation, which then can be tracked and reviewed. When this lab is completed, you will have deployed and edited a CloudFormation template.</description>
</item>
<item>
<title>Deploy the CloudFormation Stack</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/1_deploy_cfn_stack/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/1_deploy_cfn_stack/</guid>
<description>This portion of the lab shows you how to deploy an EC2 instance using a CloudFormation template. The CloudFormation template will deploy the following: Lab VPC: The VPC used in this lab. This VPC contains a single public subnet, each with its own route table. An Internet Gateway and is used to route traffic to the public subnet. EC2 Instance: This is the EC2 instance that hosts the simple Apache web application.</description>
</item>
<item>
<title>Deploy the Infrastructure</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/1_deploy_infra/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/1_deploy_infra/</guid>
<description>You will create two Amazon S3 buckets in two different AWS regions. The Ohio region (also known as us-east-2) will be referred to throughout this lab as the east S3 bucket, and Oregon (also known as us-west-2) will be referred to as the west S3 bucket. 1.1 Log into the AWS console If you are attending an in-person workshop and were provided with an AWS account by the instructor: Click here for instructions to access your assigned AWS account: Go to https://dashboard.</description>
</item>
<item>
<title>Deploy the Infrastructure and Application</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_for_resiliency_of_ec2/1_prerequisite/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_for_resiliency_of_ec2/1_prerequisite/</guid>
<description>The first step of this lab is to deploy the static web application stack. If you have already run the following two labs (and have not torn down the resources) then you have already deployed the necessary infrastructure. Proceed to next step Configure Execution Environment Security: Level 200: Automated Deployment of VPC Security: Level 200: Automated Deployment of EC2 Web Application If you have not already deployed the necessary infrastructure, then follow these steps:</description>
</item>
<item>
<title>Deploy the Infrastructure and Application</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/1_deploy_app/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/1_deploy_app/</guid>
<description>You will create a multi-tier architecture using AWS and run a simple service on it. The service is a web server running on Amazon EC2. It has an Elastic Load Balancer reverse-proxy in front of it, and has a dependency on Amazon DynamoDB. Note: The concepts covered by this lab apply whether your service dependency is an AWS resource like Amazon DynamoDB, or an external service called via API. The DynamoDB dependency here acts as a mock for an external service called RecommendationService.</description>
</item>
<item>
<title>Deploy The Lab Base Infrastructure</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/1_deploy_the_lab_base_infrastructure/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/1_deploy_the_lab_base_infrastructure/</guid>
<description>In this section, we will build out a Virtual Public Cloud (VPC), together with public and private subnets across two Availability Zones, Internet Gateway and NAT gateway along with the necessary routes from both public and private subnets. This VPC will become the baseline network architecture within which the application will run. When we successfully complete our initial template deployment, our deployed workload should reflect the following diagram: To deploy the infrastructure template follow the appropriate steps:</description>
</item>
<item>
<title>Deploy The Lab Base Infrastructure</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/1_deploy_the_lab_base_infrastructure/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/1_deploy_the_lab_base_infrastructure/</guid>
<description>In this section, we will build out a Virtual Public Cloud (VPC), together with public and private subnets across two Availability Zones, Internet Gateway and NAT gateway along with the necessary routes from both public and private subnets. This VPC will become the baseline network architecture within which the application will run. When we successfully complete our initial stage template deployment, our deployed workload should reflect the following diagram: To deploy the template for the base infrastructure build follow the approptiate steps:</description>
</item>
<item>
<title>Deploy the sample application environment</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/1_deploy_base_application_environment/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/1_deploy_base_application_environment/</guid>
<description>In this section, you will prepare a sample application. The application is an API hosted inside a docker container, using Amazon Elastic Compute Service (ECS).. The container is accessed via an Application Load Balancer. The API is a private microservice within your Amazon Virtual Private Cloud (VPC). Communication to the API can only be done privately through routes within the VPC subnet. In our lab example, the business owner has agreed to run the API over HTTP protocol to simplify the implementation.</description>
</item>
<item>
<title>Deploy VPC using CloudFormation</title>
<link>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/1_deploy_vpc/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/1_deploy_vpc/</guid>
<description>1.1 Log into the AWS console If you are attending an in-person workshop and were provided with an AWS account by the instructor: Click here for instructions to access your assigned AWS account: Go to https://dashboard.eventengine.run/login Enter the 16 character hashcode you were provided and click &ldquo;Proceed&rdquo; Sign-in using either an Amazon.com retail account or a One-Time Password (OTP) that will be emailed to you.</description>
</item>
<item>
<title>Deploying IAM Lambda Cleanup with AWS SAM</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_iam_user_cleanup/1_lambda_iam_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_iam_user_cleanup/1_lambda_iam_cleanup/</guid>
<description>Download these two templates (or by cloning this repository): cloudformation-iam-user-cleanup.yaml lambda-iam-user-cleanup.py Create an Amazon S3 bucket if you don&rsquo;t already have one, it needs to be in the same AWS region being deployed into. Now that you have the S3 bucket created and the files downloaded to your machine. You can start to create your deployment package on the command line with AWS SAM.</description>
</item>
<item>
<title>Getting Started</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_with_aws_console_and_cli/1_getting_started/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_with_aws_console_and_cli/1_getting_started/</guid>
<description>1.1 Install the AWS CLI Although instructions in this lab are written for both AWS Management console and AWS CLI, its best to install the AWS CLI on the machine you will be using as you can modify the example commands to run different scenarios easily and across multiple AWS accounts. Install the AWS CLI on macOS Install the AWS CLI on Linux Install the AWS CLI on Windows You will also need jq to parse json from the CLI:</description>
</item>
<item>
<title>Getting to know Amazon Cloudwatch</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/1_cloudwatch_intro/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/1_cloudwatch_intro/</guid>
<description>Introduction In order to run this lab you will need to have at least one EC2 instance running and have AWS Computer Optimizer enabled at your account. As highlighted in the 100 level Rightsizing Recommendations lab, rightsizing should be an ongoing effort at your organization and one of the best practices is to measure utilization and test new resource configuration multiple times so you only need to modify it once.</description>
</item>
<item>
<title>Identify (or create) S3 bucket in account 2</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/1_create_bucket/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/1_create_bucket/</guid>
<description>This lab is best run using two AWS accounts Identify the AWS account number for account 1 (no dashes) Identify the AWS account number for account 2 (no dashes) If you only have one AWS account, then use the same AWS account number for both account1 and account2 In account 2 sign in to the S3 Management Console as an IAM user or role in your AWS account, and open the S3 console at https://console.</description>
</item>
<item>
<title>Install Python & AWS CLI</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_playbook_with_jupyter-aws_iam/1_prereq/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_playbook_with_jupyter-aws_iam/1_prereq/</guid>
<description>1.1 Install Python and Modules Python 3 and a number of Python modules are required. Python downloads Installing pip may be required also. After installing Python, install the following packages by executing the following command in your command line or terminal: pip install boto3 pandas jupyter 1.2 Install the AWS CLI AWS CLI is not directly used for this lab, however it makes configuration of the AWS IAM credentials easier, and is useful for testing and general use.</description>
</item>
<item>
<title>Intro</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/1_intro/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/1_intro/</guid>
<description>In the cloud, you can apply the same engineering discipline that you use for application code to your entire environment. You can define your entire workload (applications, infrastructure, etc.) as code and update it with code. You can script your operations procedures and automate their execution by triggering them in response to events. By performing operations as code, you limit human error and enable consistent execution of operations activities. In this lab you will apply the concepts of Infrastructure as Code and Operations as Code to the following activities:</description>
</item>
<item>
<title>Intro to Rightsizing on AWS</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/1_intro_right_sizing/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/1_intro_right_sizing/</guid>
<description>Introduction Rightsizing is the process of matching instance types and sizes to your workload performance and capacity requirements at the lowest possible cost. It’s also the process of looking at deployed instances and identifying opportunities to eliminate or downsize without compromising capacity or other requirements, which results in lower costs. Rightsizing is an ongoing process and it&rsquo;s the most effective way to control cloud costs. It involves continually analyzing instance performance and usage needs and patterns—and then turning off idle instances and rightsizing instances that are either overprovisioned or poorly matched to the workload.</description>
</item>
<item>
<title>Launch Instance</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_basic_ec2_with_waf_protection/1_launch_instance/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_basic_ec2_with_waf_protection/1_launch_instance/</guid>
<description>For launching your first instance, we are going to use the launch wizard in the Amazon EC2 console. 1.1 Launch Single Linux Instance You can launch a Linux instance using the AWS Management Console. This tutorial is intended to help you launch your first instance quickly, so it doesn&rsquo;t cover all possible options. For more information about the advanced options, see Launching an Instance. Launch an instance: Open the Amazon EC2 console at https://console.</description>
</item>
<item>
<title>Launch Instance</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_with_waf_protection/1_launch_instance/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_with_waf_protection/1_launch_instance/</guid>
<description>You can launch a Linux instance using the AWS Management Console. This tutorial is intended to help you launch your first instance quickly, so it doesn&rsquo;t cover all possible options. For more information about the advanced options, see Launching an Instance. Launch an instance: Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/. From the console dashboard, choose Launch Instance. The choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance.</description>
</item>
<item>
<title>Navigating to the console</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/1_nav_console/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/1_nav_console/</guid>
<description>The AWS Well-Architected Tool is in the AWS Console. You simply need to login to the console and navigate to the tool. Sign in to the AWS Management Console as an IAM user with MFA enabled or in a federated Role, and open the Well-Architected console at https://console.aws.amazon.com/wellarchitected/. If you are already in the console, click Services on the tool bar along the top of the console to bring up the service search.</description>
</item>
<item>
<title>New AWS Account Setup and Securing Root User</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_loft_introduction_to_security/1_new_acct_secure_root/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_loft_introduction_to_security/1_new_acct_secure_root/</guid>
<description>Walkthrough This hands-on lab will guide you through the introductory steps to configure a new AWS account and secure the root user. AWS Account and Root User Further Considerations Federate Identity Using SAML: Leveraging a SAML provider Separate production, non-production and different workloads using different AWS accounts: AWS Multiple Account Billing Strategy</description>
</item>
<item>
<title>Overview architecture</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/1_architecture/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/1_architecture/</guid>
<description> function prevStep(){ window.open("..\/", "_self") } function nextStep(){ window.open("..\/2_create_bucket\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Lab complete! Now that you have completed this lab, make sure to update your Well-Architected review if you have implemented these changes in your workload. Click here to access the Well-Architected Tool Previous Step Next Step</description>
</item>
<item>
<title>Requesting a public certificate using the console</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_certificate_manager_request_public_certificate/1_request_certificate/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_certificate_manager_request_public_certificate/1_request_certificate/</guid>
<description>Sign into the AWS Management Console and open the ACM console at https://console.aws.amazon.com/acm/home. Select your prefferred region for regional certificates including Elastic Load Balancing, or US East (N. Virginia) for global services including Amazon CloudFront. If you see a welcome page, click Get started under provision certificates area. On the Request a certificate page, click Request a public certificate, then click Request a certificate.</description>
</item>
<item>
<title>Setup Output S3 Bucket</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/1_setup_s3_output/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/1_setup_s3_output/</guid>
<description>We need to provide a location to deliver the output from the Athena queries, so that it can be secured and restricted to the sub accounts. We&rsquo;ll need to create the S3 bucket, and implement a Lambda function to re-write the object ACLs when new objects are delivered. So what we&rsquo;ll do is as follows: Create the output S3 bucket with the required bucket policy Create an IAM policy that will allow a Lambda function to re-write object ACLs Implement the Lambda function 1 - Login to the consolve via SSO.</description>
</item>
<item>
<title>Structure of a custom lens - Pillars, Questions and Best Practices</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/1_ddb_config_pillars_and_bps/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/1_ddb_config_pillars_and_bps/</guid>
<description>Get Started: Custom lenses are defined using a specific JSON format. To ensure you follow the required data structure, you have the option to download a template JSON file from the AWS Well-Architected Tool in the AWS console. Download Custom Lenses Template: Sign in to the AWS Management Console and open the AWS Well-Architected Tool console. In the left navigation pane, choose Custom lenses. Choose Create custom lens. Choose Download file to download the JSON template file.</description>
</item>
<item>
<title>Verify your CUR files are being delivered</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_4_cost_and_usage_analysis/1_verify_cur/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_4_cost_and_usage_analysis/1_verify_cur/</guid>
<description>Prerequisite: You must have configured Cost and Usage Reports in the AWS Account Setup lab. It can take up to 24 hours for AWS to deliver the first report to your Amazon S3 bucket. However if you are doing this Lab as part of an AWS workshop, or do not have substantial or interesting usage, follow these steps at the bottom of this lab to create an Amazon S3 bucket and use sample files.</description>
</item>
<item>
<title>View Amazon CloudWatch Automatic Dashboards</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_with_cloudwatch_dashboards/1_intro/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_with_cloudwatch_dashboards/1_intro/</guid>
<description>1. View Amazon CloudWatch Automatic Dashboards Amazon CloudWatch Automatic Dashboards allow you to easily monitor all AWS Resources, and is quick to get started. Explore account and resource-based view of metrics and alarms, and easily drill-down to understand the root cause of performance issues. Open the Amazon CloudWatch console at https://console.aws.amazon.com/cloudwatch/ and select your region from the top menu bar. If you are logging into a brand new AWS account, you will see the default Cloudwatch console such as this: You will need to deploy something into your account to see a Cloudwatch automatic dashboard.</description>
</item>
<item>
<title>View an RI report</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_3_pricing_models/1_ri_report/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_3_pricing_models/1_ri_report/</guid>
<description>We are going to view the RI reports within AWS Cost Explorer, to understand the potential savings and usage trends. Log into the console via SSO, go to the management/payer account and go to the AWS Cost Explorer service page: In the left menu under Reservations select Recommendations: On the right select the filters: Select recommendation type non-EC2 service, RI term 1 year, Payment Option (your preference), Based on the past 7 days: The top section will show the estimated savings and number of recommendations, take note of the Purchase Recommendations</description>
</item>
<item>
<title>View your AWS Invoices</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_4_cost_and_usage_analysis/1_view_invoice/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_4_cost_and_usage_analysis/1_view_invoice/</guid>
<description>At the end of a billing cycle or at the time you make a purchase and incur a one-time fee, AWS charges the payment method you have and issues your invoice as a PDF file. You can view these invoices through the AWS console, which will show summary information of all usage and cost incurred for that one off item, or billing period. Log into the console via SSO and go to the billing dashboard: Select Payments from the menu on the left: Click on Transactions and then an Invoice ID corresponding to the month you wish to view: It will download a PDF version of your invoice similar to below: function prevStep(){ window.</description>
</item>
<item>
<title>View your cost and usage by service</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/1_cost_usage_service/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/1_cost_usage_service/</guid>
<description>AWS Cost Explorer is a free built in tool that lets you dive deeper into your cost and usage data to identify trends, pinpoint cost drivers, and detect anomalies. We will examine costs by service in this exercise. Log into the console via SSO and go to the billing dashboard: Select Cost Explorer from the menu on the left: Click on Launch Cost Explorer: Click on Reports from the left menu: You will be presented a list of pre-configured and saved reports.</description>
</item>
<item>
<title>View your Savings Plan recommendations</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/1_view_recommendations/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/1_view_recommendations/</guid>
<description>Introduction Savings Plans are a commitment based discount model. By making a commitment of spend you will use for 1 or 3 years, you receive a discount of up to 72%. They offer the same discounts as Reserved Instances, however offer a great deal more flexibility, and do not have the same management overhead. In this workshop we will take you through your recommendations, and help you choose the right savings plan for your future business requirements.</description>
</item>
<item>
<title>Fundamentals</title>
<link>https://wellarchitectedlabs.com/cost/fundamentals/</link>
<pubDate>Mon, 20 Apr 2020 22:31:40 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/fundamentals/</guid>
<description>About cost optimization fundamentals The first step in your Cost Optimization journey is to setup your account correctly, and get to know the tools and data available for Cost Optimization. These are a collection of labs that are accessible to anyone that will be working with the cloud, including non-technical roles. Step 1 - Account Setup Administrative privileges required This first step will set your organization up correctly for Cost Optimization.</description>
</item>
<item>
<title>Cloud Financial Management</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/1_cloud_financial_management/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/1_cloud_financial_management/</guid>
<description>Practice Cloud Financial Management Cost-Aware Processes CFM Reporting Goal: Regular reporting on CFM implemented across the business Target: Within 6 months all DevOps teams must report bi-weekly on CFM activities Best Practice: Cost-Aware Processes Measures: Number of reports delivered, number of teams delivering Good/Bad: Good Why? When does it work well or not?: Actively drives CFM throughout the organization, ensures a thorough &amp; structured approach to CFM Contact/Contributor: costoptimization@amazon.com CFM included in business processes Goal: CFM included in all relevant business processes Target: Change control process must include CFM, the impact to workload efficiency, effort, and risk, must be evaluated and documented on all changes to any production workload Best Practice: Cost-Aware Processes Measures: % of changes with complete/full CFM evaluation (exceptions are NOT included) Good/Bad: Good Why?</description>
</item>
<item>
<title>Launch AWS Pricing Calculator</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/1_launch_aws_pricing_calculator/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/1_launch_aws_pricing_calculator/</guid>
<description>Launch AWS Pricing Calculator Using AWS Pricing Calculator you can explore AWS services and create an estimate for the cost of your use cases on AWS. We will use Pricing Calculator to estimate AWS costs for a 3 tier LAMP stack based Web Application. Using the web browser, open AWS Pricing Calculator by clicking on this link or pasting the following URL on the address bar: https://calculator.aws/#/ Click on Create Estimate : function prevStep(){ window.</description>
</item>
<item>
<title>Getting to know AWS Cost Anomaly Detection</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/1_cad_intro/</link>
<pubDate>Mon, 13 Mar 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/1_cad_intro/</guid>
<description>Getting to know AWS Cost Anomaly Detection AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify unusual spends and root causes, so you can quickly take action. With three simple steps, you can create your own contextualized cost monitor and receive alerts when any anomalous spend is detected. This is possible by using machine learning to learn your spend patterns, including organic growth and seasonal trends, and trigger an alert as they seem abnormal.</description>
</item>
<item>
<title>Create Systems Manager Change Template</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/2_create_ssm_change_template/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/2_create_ssm_change_template/</guid>
<description>The Change Manager is a capability of AWS Systems Manager. It is an enterprise change management framework for requesting, approving, implementing, and reporting on operational changes to your application configuration and infrastructure. In this section of the lab, you will use the Change Manager to define the change process with the AWS Health Awareness. More specifically, In the Change Manager you will create a change template, upon which you can raise the change request to execute the Automation runbook that&rsquo;s been created by the CloudFormation stack.</description>
</item>
<item>
<title>Verify Instance Scheduler Configuration</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_ec2_scheduling_at_scale/2_verify_instance_scheduler_configuration/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_ec2_scheduling_at_scale/2_verify_instance_scheduler_configuration/</guid>
<description>With a sample environment deployed, we can now proceed to verify the default configuration available for the Instance Scheduler solution. To configure the scheduler, you can use the scheduler-cli tool preinstalled into an EC2 instance in the sample environment named walab-admin-instance. The admin instance in this lab is accessible using SSM Session Manager. In order to login to the walab-admin-instance instance follow the steps below: Open the EC2 Console using below link:</description>
</item>
<item>
<title>Post Deployment Steps</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/post_deployment_steps/</link>
<pubDate>Mon, 10 Oct 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/post_deployment_steps/</guid>
<description>Add your Account Names to your Dashboard Learn how to replace the Account IDs with the Account Names for each of your linked accounts in AWS Organizations by following these steps. Steps for adding account names Next Steps Visit our customizations lab to learn some ways to customize your dashboards. Having trouble? Visit our FAQ. function prevStep(){ window.open("..\/deploy_dashboards", "_self") } function nextStep(){ window.open("..\/alternative_deployments", "_self") } function togglePopup(){ document.</description>
</item>
<item>
<title>Create Athena resources, Lambda function and CloudWatch rule</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_vpc_flow_logs_analysis_dashboard/2_create_athena_lambda_cloudwatch_rule/</link>
<pubDate>Sat, 18 Sep 2021 06:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_vpc_flow_logs_analysis_dashboard/2_create_athena_lambda_cloudwatch_rule/</guid>
<description>Now that you have enabled VPC Flow Logs, which will help you understand how your applications are communicating over your VPC network with log records containing the Instance ID, Source and Destination IP addresses, Subnet ID, VPC ID and the type and volume of traffic to list a few. While the raw VPC Flow Logs by themselves provide detailed information about every single network traffic flow, you still need to filter and aggregate them to derive the necessary insights e.</description>
</item>
<item>
<title>Configure Execution Environment</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/2_configure_env/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/2_configure_env/</guid>
<description>Failure injection is a means of testing resiliency by which a specific failure type is simulated on a service and its response is assessed. You have a choice of environments from which to execute the failure injections for this lab. Bash scripts are a good choice and can be used from a Linux command line. If you prefer Python, Java, Powershell, or C#, then instructions for these are also provided.</description>
</item>
<item>
<title>Configure risk tracking</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_manage_workload_risks_with_opscenter/2_risk_tracking/</link>
<pubDate>Tue, 31 Aug 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_manage_workload_risks_with_opscenter/2_risk_tracking/</guid>
<description>Tracking workload risks After reviewing a workload, the Well-Architected Tool provides information on the number of High Risk Issues (HRI) and Medium Risk Issues (MRI) for the workload. The Well-Architected Tool also provides improvement guidance that can be used to implement Well-Architected best practices and mitigate risks. In this section, you will configure a solution to convert these identified risks into actionable tasks using Systems Manager OpsCenter. 2.1 Create and configure Lambda function You will create a Lambda function that will iterate over all the workloads defined in the AWS WA Tool in the AWS Region you are using for this lab.</description>
</item>
<item>
<title>Use Secrets Securely</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/2_use_secrets_securely/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/2_use_secrets_securely/</guid>
<description>Passwords remain vulnerable to brute force attack methods even if we store our secrets in a secure way. Because of this we can augment our deployed architecture to limit the lifespan of a password through the use of automatic rotation. An ideal way to approach this task is through the use of AWS Secrets Manager, which can enable you to automatically rotate secrets for other databases or 3rd party services.</description>
</item>
<item>
<title>Well-Architected Insights</title>
<link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/2_well-architected_insights/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/2_well-architected_insights/</guid>
<description>Well-Architected Insights provides serverless developers with insights and recommendations to continually improve their applications and keep them secure, compliant, optimized, and efficient. The second section of the lab will demonstrate how to automatically create a role in your AWS account, delegating read-only access to various services in your AWS account. Follow these steps to complete the configuration: 2.1. Account Onboarding to Dashbird. If you are new to Dashbird, sign up for a free account in Dashbird.</description>
</item>
<item>
<title>Attach the Tag Policy to an account</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_8_tag_policies/2_attach_tagpolicy/</link>
<pubDate>Thu, 20 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_8_tag_policies/2_attach_tagpolicy/</guid>
<description>Attach Tag Policy to an account Click on Tag polices under polices - you should be to see the new policy was just created &ldquo;cost_allocation&rdquo; Click the box next to the cost allocation policy, and under actions select “Attach policy” Select an account to attach the policy to and click Attach policy function prevStep(){ window.open("..\/\/1_tag_policy\/", "_self") } function nextStep(){ window.open("..\/3_compliance_report\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Lab complete!</description>
</item>
<item>
<title>COD Deployment</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/compute-optimizer-dashboards/dashboards/2_deployment/</link>
<pubDate>Thu, 20 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/compute-optimizer-dashboards/dashboards/2_deployment/</guid>
<description>Deployment Options Dashboard can be installed via CID tool or via CloudFormation. Deploy via CloudFormation If you already have CUDOS, Cost Intellegence Dashboard or KPI Dashboard installed via CloudFormation as described here, you can update the Stack by setting DeployComputeOptimizerDashboard to &ldquo;yes&rdquo; and updating the path of Data Collection S3 bucket (if different from default). If you do not have the stack installed, you can install using the instructions here (you can ignore the Cost and Usage report part as it is not required for this dashboard).</description>
</item>
<item>
<title>Create & Upload Trusted Advisor Report</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/trusted-advisor-dashboards/dashboards/2_create-upload-ta-report/</link>
<pubDate>Thu, 20 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/trusted-advisor-dashboards/dashboards/2_create-upload-ta-report/</guid>
<description>Create and upload Trusted Advisor Organizational View report There are 2 supported data collection methods: Trusted Advisor API via deployment of Optimization Data Collection lab (recommended) - provides an automated way to collect Trusted Advisor checks for all accounts in your AWS Organizations via deployment of required AWS resources from provided AWS CloudFormation templates. Supports automated data refresh. Trusted Advisor Organizational View - provides an easy way to collect Trusted Advisor checks for all accounts in your AWS Organizations without need to provision any additional resources.</description>
</item>
<item>
<title>Python Code</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/exportimport_utility/2_python_code/</link>
<pubDate>Wed, 19 May 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/exportimport_utility/2_python_code/</guid>
<description>exportImportWAFR.py The purpose of this python script is to either generate a JSON file that contains the results of a Well-Architected review or import the contents of a JSON file into the Well-Architected Tool. This would allow you to create a backup copy of your workload properties to use in another system or to interchange with others if the cannot access your AWS environment. This utility was created using the the AWS SDK for Python (Boto3).</description>
</item>
<item>
<title>Step 2 - Use temporary credentials</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/2_use_temporary_credentials/</link>
<pubDate>Tue, 11 May 2021 01:20:06 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/2_use_temporary_credentials/</guid>
<description>In this exercise we will use AWS IAM Roles to avoid the usage of AWS IAM access keys that may be required by the Amazon ELastic Compute Cloud (EC2) instance to access AWS resources. We will create a Role and assigned it to EC2 instance, instead of hard coding the access keys within the EC2 instance. Note: For this lab, it is assumed that EC2 instance is already created with default settings.</description>
</item>
<item>
<title>Python Code</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/export_to_xlsx/2_python_code/</link>
<pubDate>Tue, 04 May 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/export_to_xlsx/2_python_code/</guid>
<description>exportAnswersToXLSX.py The purpose of this python script is to generate a XLSX template file that contains all of the questions, best practices, and improvement plans to conduct a review. This spreadsheet can be used to prepare for a AWS Well-Architected review by collecting information from teams before the workload review is entered into the tool. This also allow you perform a review offline if you are working in a AWS region that does not support the Well-Architected Tool.</description>
</item>
<item>
<title>Python Code</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/copy_wa_review_between_accounts/2_python_code/</link>
<pubDate>Sun, 18 Apr 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/copy_wa_review_between_accounts/2_python_code/</guid>
<description>duplicateWAFR.py The purpose of this python script is to duplicate a Well-Architected Workload review. This can be done within the same account but to a new AWS Region, or it can be done to a different AWS account and/or region. During the copy process, it will generate a new workload in the target account with the same Workload Name, but the workloadId will be unique. If the target workload already exists, the script will prompt the user if they wish to refresh the data from the source workload.</description>
</item>
<item>
<title>Python Code</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/generate_custom_html_wafr_report/2_python_code/</link>
<pubDate>Sun, 18 Apr 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/generate_custom_html_wafr_report/2_python_code/</guid>
<description>generateWAFReport.py The purpose of this python script is to generate a HTML file that displays some basic Well-Architected Workload information as well as each best practice that was unchecked for any question that has been answered. As part of the report generation, it will also incorporate the specific improvement plan content and display it in-line with each unchecked best practice. This utility was created using the the AWS SDK for Python (Boto3).</description>
</item>
<item>
<title>Exploring AWS Lambda code</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/2_explore_lambda_code/</link>
<pubDate>Thu, 25 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/2_explore_lambda_code/</guid>
<description>Overview There are two AWS Lambda functions that you deployed in the previous step. Both of them utilize the AWS SDK for Python (Boto3) library along with the Lambda Powertools Python via a Lambda layer to perform the Well-Architected Tool API access. Deployed AWS Lambda functions Click on each link to understand how each Lambda function works. CreateWAWorkloadLambda Overview Python Code Example Lambda Event IAM Role UpdateWAQuestionLambda Overview Python Code Example Lambda Event IAM Role CreateWAWorkloadLambda.</description>
</item>
<item>
<title>Catalog the workload data</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/2_catalog_data/</link>
<pubDate>Wed, 24 Mar 2021 15:16:08 +1000</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/2_catalog_data/</guid>
<description>AWS Glue is a fully managed extract, transform, and load (ETL) service that makes it easy to prepare and load your data for analytics. AWS Glue provides crawlers to determine the schema and stores the metadata in the . Create the Crawler Open the AWS Glue console, and from the left navigation pane, choose Crawlers. Select Add crawler and name the crawler well-architected-reporting select Next. Select Add a data source.</description>
</item>
<item>
<title>Filtering Visuals by Cost Allocation Tags</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/2_addingcontrols/</link>
<pubDate>Thu, 18 Mar 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/2_addingcontrols/</guid>
<description>Last Updated March 2022 Introduction Now that you&rsquo;ve added your cost allocation tags, follow this video tutorial to learn how to add a control or filter across your entire dashboard so you can see everything grouped by tags.</description>
</item>
<item>
<title>Create Journey</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_journey/2_create_journey/</link>
<pubDate>Mon, 01 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_journey/2_create_journey/</guid>
<description>Create the Journey We will now run the Lambda function and create the Well-Architected Cost Journeys. We will manually run the function Go to the Lambda service page, select the Cost_W-A_Journey function Scroll down to the Code source, click Deploy, click Test Set the event name to CreateJourney, click Create Click Test, You will see a null response and there should be some log messages in the lambda console Go to the s3 console and select the bucket you configured, you will see a W-A Workload Journeys.</description>
</item>
<item>
<title>Tear Down</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_enable_security_hub/2_cleanup/</link>
<pubDate>Tue, 23 Feb 2021 10:29:10 -0500</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_enable_security_hub/2_cleanup/</guid>
<description>The following instructions will disable AWS Config and Security Hub. Disable AWS Config: Open the AWS Config console at https://console.aws.amazon.com/config/. Choose Settings in the navigation pane. Select Edit. Uncheck Enable Recording. Select Save. Additional details here Disable Security Hub: Open the AWS Security Hub console at https://console.aws.amazon.com/securityhub/. In the navigation pane, choose Settings. On the Settings page, choose General. Under Disable AWS Security Hub, choose Disable AWS Security Hub.</description>
</item>
<item>
<title>Create Backup Plan</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/2_configure_backup_plan/</link>
<pubDate>Sun, 21 Feb 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/2_configure_backup_plan/</guid>
<description>A well thought out backup strategy is key to an organization&rsquo;s success and is determined by a variety of factors. The biggest factors influencing a backup strategy is the Recovery Time Objective (RTO) and Recovery Point Objective (RPO) set for the workload. RTO and RPO are determined based on the criticality of the workload to the business, the SLAs that have been agreed upon, and the cost associated with achieving the RTO and RPO.</description>
</item>
<item>
<title>Create the Usage Data Source</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/2_usage_source/</link>
<pubDate>Sun, 07 Feb 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/2_usage_source/</guid>
<description>If AWS updates pricing table with new column, values might get out of sync. Please contact costoptimization@amazon.com if you encounter any problems We will combine the pricing information with our Cost and Usage Report (CUR). This will give us a usage data source which contains a summary of your usage at an hourly level, with multiple pricing dimensions. Create OD Table Go to the Athena service page: Copy the following query to Athean:</description>
</item>
<item>
<title>Configure Lab Environment</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/2_configure_env/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/2_configure_env/</guid>
<description>In this section, we will deploy our base lab infrastructure using AWS Serverless Application Model (AWS SAM) in AWS Cloud9 environment. This will consist of a public Amazon API Gateway which connects to AWS Lambda function that puts items in AWS DynamoDB. We will also create a rule in Amazon EventBridge and another AWS Lambda that will retrieve data related to cost optimization from AWS Compute Optimizer and AWS Trusted Advisor.</description>
</item>
<item>
<title>Create a Well-Architected Workload</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/2_create_workload/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/2_create_workload/</guid>
<description>Overview Well-Architected Reviews are conducted per workload. A workload identifies a set of components that deliver business value. The workload is usually the level of detail that business and technology leaders communicate about. Workloads vary in levels of architectural complexity, from static websites to architectures with multiple data stores and many components. Creating a workload We will start with creating a Well-Architected workload to use throughout this lab. Using the create-workload API, you can create a new Well-Architected workload: aws wellarchitected create-workload --workload-name &quot;WA Lab Test Workload&quot; --description &quot;Test Workload for WA Lab&quot; --review-owner &quot;John Smith&quot; --environment &quot;PRODUCTION&quot; --aws-regions &quot;us-east-1&quot; --lenses &quot;wellarchitected&quot; &quot;serverless&quot; The following are the required parameters for the command: workload-name - This is a uniquie identifier for the workload.</description>
</item>
<item>
<title>Scope of Impact of failures</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/2_impact_of_failures/</link>
<pubDate>Mon, 07 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/2_impact_of_failures/</guid>
<description>Break the application In the scenario used in the lab, the application has a known issue which is triggered by passing a &ldquo;bad&rdquo; query string. If such a request is received, the EC2 instance that handles the request will become unresponsive and the application will crash on the instance. The &ldquo;bad&rdquo; query string that triggers this is bug with a value of true. The development team is aware of this bug and are working on a fix, however, the issue exists today and customers might accidentally or intentionally trigger it.</description>
</item>
<item>
<title>Deploying an instance</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/2_deploy_instance/</link>
<pubDate>Tue, 01 Dec 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/2_deploy_instance/</guid>
<description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and IAM Instance Profiles. If the account you are using does not have these capabilities, you will not be able to complete this lab. Deploy CloudFormation Template Download the LinuxMachineDeploy.yaml CloudFormation template to your machine. Go to the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation and click Create Stack &gt; With new resources Leave Prepare template setting as-is</description>
</item>
<item>
<title>Deploying an instance</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/2_deploy_instance/</link>
<pubDate>Thu, 19 Nov 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/2_deploy_instance/</guid>
<description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and IAM Instance Profiles. If the account you are using does not have these capabilities, you will not be able to complete this lab. Deploy CloudFormation Template Download the WindowsMachineDeploy.yaml CloudFormation template to your machine. Go to the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation and click Create Stack &gt; With new resources Leave Prepare template setting as-is</description>
</item>
<item>
<title>Migration Methodologies</title>
<link>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/1_migration_methodologies/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/1_migration_methodologies/</guid>
<description>Migration Methodologies Preparation Lab 1 - Change Database Instance Type Lab 2 - Promote Read Replica Lab 3 - Failover to Read Replica Lab 4 - Restore from snapshot Cleanup Migration Methods There are four options to migrate RDS instances from x86-64 to Graviton which we will cover in this lab. 1. Change instance type and restart the database This is the simplest type of migration. The database endpoints are not changed, and it is as simple as shutting down the database and restarting it on an appropriate Graviton based instance.</description>
</item>
<item>
<title>Prepare CUR Data</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/1-1_prepare_cur_data/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/1-1_prepare_cur_data/</guid>
<description>Lab 1.1 In this lab you will provide AWS Cost &amp; Usage Report (CUR) data in one of your Amazon S3 buckets. In later labs we will query that data to calculate proxy metrics for sustainability. There are several options to provide AWS Cost &amp; Usage Report data: Option A: use existing CUR reports from your AWS account. This option makes sense, if you already have configured CUR in your account.</description>
</item>
<item>
<title>Prerequisites</title>
<link>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/1_prerequisites/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/1_prerequisites/</guid>
<description>AWS Compute Optimizer provides Amazon EC2 instance recommendations to help you improve performance and save money. You can use these recommendations to decide whether to move to a new instance type. Ensure that you have enabled AWS Compute Optimizer. Opt in for AWS Compute Optimizer Enable AWS Compute Optimizer at no additional cost if you have not done so. Compute Optimizer requires at least 30 consecutive hours of metrics data from your resource to generate recommendations.</description>
</item>
<item>
<title>Understand Amazon Redshift Data Sharing</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/1_understand_data_sharing/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/1_understand_data_sharing/</guid>
<description>Lab 1 Let’s first understand some data sharing terms &amp; concepts - for details, refer to the Amazon Redshift User Guide: A datashare is the unit of sharing data in Amazon Redshift. Use datashares to share data in the same AWS account or different AWS accounts. Data producers (also known as data sharing producers or datashare producers) are clusters that you want to share data from.</description>
</item>
<item>
<title>Deploy core infrastructure for data retrieval</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/2_deploy_main_resources/</link>
<pubDate>Wed, 21 Oct 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/2_deploy_main_resources/</guid>
<description>Create Main Resources The first step is to create a set of reusable resources and respective data collection modules Log into your Optimization Data Collector account (dedicated linked account for cost optimization work - recommended). Click Launch CloudFormation template if you are deploying to your Cost Optimization linked account. Or if you wish to keep this on your local machine please copy CloudFormation template locally and deploy with your preferred method of choice:</description>
</item>
<item>
<title>Understanding Metrics</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/2_understand_metrics/</link>
<pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/2_understand_metrics/</guid>
<description>Workloads can and should be designed to emit a variety of metrics such as application metrics (number of requests, error codes), infrastructure metrics (CPU, memory, disk usage), etc. These metrics should be tied back to KPI(s) that are used to measure a certain aspect of the business. Understanding different workload metrics will allow you to select the right metric to monitor, and understand the availability or status of your workload and its dependencies.</description>
</item>
<item>
<title>Analyze and Understand Licensing</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_licensing/2_analyze_understand/</link>
<pubDate>Sun, 30 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_licensing/2_analyze_understand/</guid>
<description>Analyze and understand licensing costs in your workload We will analyze the CUR file for any software that includes licensing. First we will see what columns could give us the information we need. Then we look for the amount we are spending on items containing licenses, and how much we are spending on the actual licenses by comparing to a similar non-licensed option. We take this information and decide if the effort required to make the change will be less than what we save, and if the required functionality is still met.</description>
</item>
<item>
<title>Application Integration</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/application_integration/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/application_integration/</guid>
<description>These are queries for AWS Services under the Application Integration product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Modify Cost Intelligence Dashboard</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/2_modify_cost_intelligence/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/2_modify_cost_intelligence/</guid>
<description>This Lab has moved under the Level 200 Cloud Intelligence Dashboards.Click this link to navigate to the updated Lab Authors Alee Whitman, Commercial Architect (AWS) Add Account Mapping Data This section is optional and shows how you can add your Business Unit or Enterprise Account mapping data to your dashboard using Account Id as the identifier. This example will show you how to replace the AccountID, with a name that is meaningful to your organization.</description>
</item>
<item>
<title>Create VPC Stack</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_vpc/1_create_vpc_stack/</link>
<pubDate>Wed, 22 Jul 2020 01:00:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_vpc/1_create_vpc_stack/</guid>
<description>This step will create the VPC and all components using the example CloudFormation template. Download the latest version of the CloudFormation template here: vpc-alb-app-db.yaml Go to the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation and click Create Stack &gt; With new resources Leave Prepare template setting as-is For Template source select Upload a template file Click Choose file and supply the CloudFormation template you downloaded: vpc-alb-app-db.</description>
</item>
<item>
<title>Testing Performance of both nodes before clock changes</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_clock_source_performance/2_testing_before/</link>
<pubDate>Tue, 09 Jun 2020 12:00:00 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_clock_source_performance/2_testing_before/</guid>
<description>Now that we have two EC2 machines, one Xen based EC2 and one Nitro/KVM based EC2, we can run a simple test to see the speed in which is can return time of day. This test program was installed on each machine under /tmp/time_test.py. The program will simply request the time of day from a local c-library one million times. The time_test.py code #!/usr/bin/python3 import time _gettimeofday = None def gettimeofday(): import ctypes global _gettimeofday if not _gettimeofday: _gettimeofday = ctypes.</description>
</item>
<item>
<title>Apply Tags using Tag Editor</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/2_apply_tags/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/2_apply_tags/</guid>
<description>Overview Tags are key and value pairs that act as metadata for organizing your AWS resources. You can tag resources for all cost-accruing services in AWS. Tags can help you manage, identify, organize, search for, and filter resources. You can create tags to categorize resources by purpose, owner, environment, or other criteria. You can also add or edit or delete tags to multiple supported resources at once using AWS Tag Editor.</description>
</item>
<item>
<title>Assume Roles from an IAM user</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_iam_groups_and_roles/2_assume_roles_iam_user/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_iam_groups_and_roles/2_assume_roles_iam_user/</guid>
<description>We will assume the roles previously created in the web console and command line interface (CLI) using an existing IAM user. 2.1 Use Restricted Administrator Role in Web Console A role specifies a set of permissions that you can use to access AWS resources that you need. In that sense, it is similar to a user in AWS Identity and Access Management (IAM). A benefit of roles is they allow you to enforce the use of an MFA token to help protect your credentials.</description>
</item>
<item>
<title>Basic Identity and Access Management User, Group, Role</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_loft_introduction_to_security/2_basic_iam/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_loft_introduction_to_security/2_basic_iam/</guid>
<description>This hands-on lab will guide you through the introductory steps to configure AWS Identity and Access Management (IAM). You will use the AWS Management Console to guide you through how to configure your first IAM user, group and role for administrative access. Walkthrough Basic Identity and Access Management User, Group, Role</description>
</item>
<item>
<title>Centralize Identities</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/2_identity/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/2_identity/</guid>
<description>Every user must leverage unique credentials so we can trace actions within your accounts. Setup your identity structure in the management account and use cross account access to access the child accounts. As you create roles for your users ensure that you are implementing least privilege access by ensuring that users only have access to perform actions required for their role. Be careful who you give permission to perform IAM actions as they can create their own permissions.</description>
</item>
<item>
<title>Configure Amazon CloudFront</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_web_application_firewall/2_config_cloudfront/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_web_application_firewall/2_config_cloudfront/</guid>
<description>Using the AWS Management Console, we will create a CloudFront distribution, and link it to the AWS WAF ACL we previously created. Open the Amazon CloudFront console at https://console.aws.amazon.com/cloudfront/home. From the console dashboard, choose Create Distribution. Click Get Started in the Web section. Specify the following settings for the distribution: In Origin Domain Name enter the DNS or domain name from your elastic load balancer or EC2 instance.</description>
</item>
<item>
<title>Configure AWS WAF</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_with_waf_protection/2_config_waf/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_with_waf_protection/2_config_waf/</guid>
<description>Using AWS CloudFormation, we are going to deploy a basic example AWS WAF configuration for use with CloudFront. Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.aws.amazon.com/cloudformation/. Note if your CloudFormation console does not look the same, you can enable the redesigned console by clicking New Console in the CloudFormation menu. Click Create stack. Enter the following Amazon S3 URL: https://s3-us-west-2.</description>
</item>
<item>
<title>Configure bi-directional cross-region replication (CRR) for S3 buckets</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/2_configure_replication/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/2_configure_replication/</guid>
<description>Amazon S3 replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can copy objects between different AWS Regions or within the same Region. You will setup bi-directional replication between S3 buckets in two different regions, owned by the same AWS account. Replication is configured via rules. There is no rule for bi-directional replication.</description>
</item>
<item>
<title>Configure ECS Respository and Deploy The Application Stack</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/2_configure_ecs_repository_and_deploy_application_stack/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/2_configure_ecs_repository_and_deploy_application_stack/</guid>
<description>2.0. Introduction. In this section, we are going to prepare our sample application. We will package this as a docker image and push to a repository. As we mentioned in our introduction, our sample application will be running in a docker container which we will deploy using Amazon ECS. In preparation for the deployment, we will need to package our application as a docker image and push it into ECR. When this is completed, we will use the image which we placed in ECR to build our application cluster.</description>
</item>
<item>
<title>Configure Execution Environment</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_for_resiliency_of_ec2/2_configure_env/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_for_resiliency_of_ec2/2_configure_env/</guid>
<description>Failure injection is a means of testing resiliency by which a specific failure type is simulated on a service and its response is assessed. You have a choice of environments from which to execute the failure injections for this lab. Bash scripts are a good choice and can be used from a Linux command line. If you prefer Python, Java, Powershell, or C# instructions for these are also provided. 2.1 Setup AWS credentials and configuration Your execution environment needs to be configured to enable access to the AWS account you are using for the workshop.</description>
</item>
<item>
<title>Create an account structure</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/2_account_structure/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/2_account_structure/</guid>
<description>NOTE: Do NOT do this step if you already have an organization and consolidated billing setup. You will create an AWS Organization, and join two or more accounts to the management account. An organization will allow you to centrally manage multiple AWS accounts efficiently and consistently. It is recommended to have a management account that is used for security and administration, with access provided for limited billing tasks. A dedicated member account will be created for the Cost Optimization team or function, and another (or multiple) member account/s created to contain workload resources.</description>
</item>
<item>
<title>Create an IAM Policy to restrict service usage by region</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/2_ec2_restrict_region/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/2_ec2_restrict_region/</guid>
<description>To manage costs you need to manage and control your usage. AWS offers multiple regions, so depending on your business requirements you can limit access to AWS services depending on the region. This can be used to ensure usage is only allowed in specific regions which are more cost effective, and minimize associated usage and cost, such as data transfer. We will create a policy that allows all EC2, RDS and S3 access in a single region only.</description>
</item>
<item>
<title>Create an IAM Role to use with Amazon CloudWatch Agent</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/2_create_iamrole/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/2_create_iamrole/</guid>
<description>Access to AWS resources requires permissions. You will now create an IAM role to grant permissions that the agent needs to write metrics to CloudWatch. Amazon created two new default policies called CloudWatchAgentServerPolicy and CloudWatchAgentAdminPolicy only for that purpose. To create the IAM role first you will need to sign in to the AWS Management Console and open the IAM console In the navigation pane on the left, choose Roles and then Create role.</description>
</item>
<item>
<title>Create and Implement an AWS Budget for EC2 Actual Cost</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/2_budget_ec2actual/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/2_budget_ec2actual/</guid>
<description>We will create a monthly EC2 actual cost budget, which will notify us if/when the actual costs of EC2 instances exceeds the specified budgeted amount. Click Create budget: Select Cost budget, and click Next: Enter the following details: Period: Monthly Budget effective date: Recurring budget Start month: (current month) Choose how to budget: Fixed Budgeted amount: 1.00 (enter a dollar amount a lot LESS than last months cost) Other fields: leave a defaults Create a filter to only include EC2 instances in the budget:</description>
</item>
<item>
<title>Create and Test Developer Role</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/2_developer_role/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/2_developer_role/</guid>
<description>2.1 Create Developer Role Create a role for developers that will have permission to create roles and policies, with the permission boundary and naming prefix enforced: Sign in to the AWS Management Console as an IAM user with MFA enabled that can assume roles in your AWS account, and open the IAM console at https://console.aws.amazon.com/iam/. In the navigation pane, click Roles and then click Create role. Click Another AWS account, then enter your account ID and tick Require MFA, then click Next: Permissions.</description>
</item>
<item>
<title>Create AWS WAF Rules</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_basic_ec2_with_waf_protection/2_create_waf_rules/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_basic_ec2_with_waf_protection/2_create_waf_rules/</guid>
<description>2.1 AWS CloudFormation to create AWS WAF ACL for Application Load Balancer Using AWS CloudFormation, we are going to deploy a basic example AWS WAF configuration for use with Application Load Balancer. Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.aws.amazon.com/cloudformation/. Note if your CloudFormation console does not look the same, you can enable the redesigned console by clicking New Console in the CloudFormation menu.</description>
</item>
<item>
<title>Create Role</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/2_create_role/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/2_create_role/</guid>
<description>Create a role for EC2 administrators, and attach the managed policies previously created. Sign in to the AWS Management Console as an IAM user with MFA enabled that can assume roles in your AWS account, and open the IAM console at https://console.aws.amazon.com/iam/. In the navigation pane, click Roles and then click Create role. Click Another AWS account, then enter the account ID of the account you are using now and tick Require MFA, then click Next: Permissions.</description>
</item>
<item>
<title>Create role for Lambda in account 1</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/2_create_role/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/2_create_role/</guid>
<description>In account 1 sign in to the AWS Management Console as an IAM user or role in your AWS account, and open the IAM console at https://console.aws.amazon.com/iam/ Click Roles on the left, then create role AWS service will be pre-selected, select Lambda, then click Next: Permissions Do not select any managed policies, click Next: Tags Click Next: Review Enter Lambda-List-S3-Role for the Role name then click Create role</description>
</item>
<item>
<title>Create role for Lambda in account 1</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_iam_role_assumption/2_create_role_acct_1/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_iam_role_assumption/2_create_role_acct_1/</guid>
<description>Sign in to the AWS Management Console as an IAM user or role in your AWS account, and open the IAM console at https://console.aws.amazon.com/iam/. Click Roles on the left, then create role. AWS service will be pre-selected, select Lambda, then click Next: Permissions. Do not select any managed policies, click Next: Tags. Click Next: Review. Enter Lambda-Assume-Roles for the Role name then click Create role.</description>
</item>
<item>
<title>Create S3 Bucket</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/2_create_bucket/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/2_create_bucket/</guid>
<description>The first step is to create an S3 bucket which will hold the lambda code and also used for storage of the reports. NOTE: the bucket must be in the same region as the Lambda function, it is advised to use a single region for all resources within this lab. This bucket will store the reports and Athena CUR query results. These will not be deleted, to enable historical reporting, so delete these periodically if you do not require them.</description>
</item>
<item>
<title>Create the efficiency data source</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_workload_efficiency/2_efficiency_data/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_workload_efficiency/2_efficiency_data/</guid>
<description>We will now build the efficiency data source, by combining the application logs with the cost data. When using your own application logs, you need to look through the logs and discover what the application is doing, and capture the log messages that indicate its various outputs, and what could consume resources of the system - as this will potentially indicate cost and usage of the system. Things to look for:</description>
</item>
<item>
<title>Create visualizations</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_5_cost_visualization/2_create_visualizations/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_5_cost_visualization/2_create_visualizations/</guid>
<description>We will now start to visualize our costs and usage, and create a dashboard. Cost by account and product The first visualization of the dashboard will do is a visualization of costs by linkedaccountID, and product. This will highlight top spend by account and product. Select line_item_unblendedcost from the Fields list, and it will show Sum of Line_item_unblended_cost: Select line_item_usage_account_id, which will add it to the graph: Expand the field wells by clicking on the two arrows in the top right.</description>
</item>
<item>
<title>Create Web Stack</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_ec2_web_application/1_create_web_stack/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_ec2_web_application/1_create_web_stack/</guid>
<description>Please note a prerequisite to this lab is that you have deployed the CloudFormation VPC stack in the lab Automated Deployment of VPC with the default parameters and recommended stack name. Choose the version of the CloudFormation template and download to your computer, or by cloning this repository: wordpress.yaml to create a WordPress site, including an RDS database. staticwebapp.yaml to create a static web application that simply displays the instance ID for the instance it is running upon.</description>
</item>
<item>
<title>Creating a workload</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/2_create_workload/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/2_create_workload/</guid>
<description>Well-Architected Reviews are conducted per workload. A workload identifies a set of components that deliver business value. The workload is usually the level of detail that business and technology leaders communicate about. Click the Define Workload button on the landing page: If you had existing workloads, then you will land at the Workloads listing. In this interface, click the Define Workload button: On the Define Workload interface, enter the necessary information: Name: Workload for AWS Workshop Description: This is an example for the AWS Workshop Review owner: Your name Environment: Select &ldquo;Pre-production&rdquo; Regions: Select AWS Regions, and choose US West (Oregon)/us-west-2 Click on the Next button: This will land you at the Apply lenses page.</description>
</item>
<item>
<title>Deploy The Application Infrastructure</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/2_deploy_the_application_infrastructure/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/2_deploy_the_application_infrastructure/</guid>
<description>The second section of the lab will build out the sample application stack what will run in the VPC which was build in section 1. This application stack will comprise of the following : Application Load Balancer (ALB). Autoscaling Group along with it&rsquo;s Launch Configuration. Once you completed below steps, you base architecture will be as follows: Building each components in this section manually will take a bit of time, and because our objective in this lab is to show you how to automate patching through AMI build and deployment.</description>
</item>
<item>
<title>Deploy Web Application and Infrastructure using CloudFormation</title>
<link>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/2_deploy_webapp/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/2_deploy_webapp/</guid>
<description>Wait until the VPC CloudFormation stack status is CREATE_COMPLETE, then continue. This will take about four minutes. Download the CloudFormation template: staticwebapp.yaml You can right-click then choose Save link as; or you can right click and copy the link to use with wget Go to the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation and click Create Stack &gt; With new resources Leave Prepare template setting as-is</description>
</item>
<item>
<title>Download and prepare the RI CSV files</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_3_pricing_models/2_prepare_csv/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_3_pricing_models/2_prepare_csv/</guid>
<description>Download the CSV for both the 7 day and 30 day recommendation files, by selecting the filter 7 days or 30 days, and clicking on Download CSV: The next steps MUST be followed carefully, ensure you name everything exactly as specified or the formulas will not work. If you do not have sufficient usage, you can download the two sample files: Open both files in a spreadsheet application.</description>
</item>
<item>
<title>Explore your Deployed Infrastructure</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/2_understand_deploy/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/2_understand_deploy/</guid>
<description>Here you will explore the CloudFormation stack you deployed in the previous step. How many resources were created? From the CloudFormation console, click the Resources tab for the CloudFormationLab stack. The listing shows all the resources that were created. Now, look at the simple_stack.yaml template (in your text editor) and compare. How many resources are defined there? Investigate: Why did the deployment not create all of the resources?</description>
</item>
<item>
<title>Handle failure of service dependencies</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/2_handle_dependency/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/2_handle_dependency/</guid>
<description>2.1 System dependency initially healthy You already observed that all three EC2 instances are successfully serving requests In a new tab navigate to ELB Target Groups console By clicking here to open the AWS Management Console or navigating through the AWS Management Console: Services &gt; EC2 &gt; Load Balancing &gt; Target Groups Leave this tab open as you will be referring back to it multiple times Click on the Targets tab (bottom half of screen)</description>
</item>
<item>
<title>Identity & Access Management</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_with_aws_console_and_cli/2_iam/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_with_aws_console_and_cli/2_iam/</guid>
<description>2.1 Investigate AWS CloudTrail As AWS CloudTrail logs API activity for supported services, it provides an audit trail of your AWS account that you can use to track history of an adversary. For example, listing recent access denied attempts in AWS CloudTrail may indicate attempts to escalate privilege unsuccessfully. Note that some services such as Amazon S3 have their own logging, for example read more about Amazon S3 server access logging.</description>
</item>
<item>
<title>Install the CloudWatch Agent</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/2_install_cw_agent/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/2_install_cw_agent/</guid>
<description>The CloudWatch agent monitors activity on your EC2 instance to collect logs and metrics. This improves your security posture by providing detailed records you can use to investigate security incidents. The CloudWatch agent needs to be installed on the EC2 instance using AWS Systems Manager Run Command. Run Command enables you to perform actions on EC2 instances remotely. This tool is especially helpful at scale, where you can manage the configuration of many instances with a single command.</description>
</item>
<item>
<title>Knowledge Check</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_detective_controls/2_knowledge_check/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_detective_controls/2_knowledge_check/</guid>
<description>The security best practices followed in this lab are: Configure service and application logging AWS Cloudtrail, AWS Config and Amazon GuardDuty provide insights into your environment. Evaluate and implement new security services and features regularly: New features such as Amazon GuardDuty have been adopted. Automate testing and validation of security controls in pipelines: CloudFormation is being used to configure AWS CloudTrail, AWS Config and Amazon GuardDuty. Implement managed services: Managed services are utilized to increase your visibility and control of your environment.</description>
</item>
<item>
<title>Multiple CURs</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_updates_and_ingestion/2_multiple_curs/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_updates_and_ingestion/2_multiple_curs/</guid>
<description>This step is used when there are multiple CURs being delivered into the same bucket - for example a CUR with hourly granularity and one with daily granularity. This will automatically update Athena/Glue when there are new versions and new months data for both reports. The easiest way to work with multiple CURs is to deliver each CUR to a different S3 bucket, and follow the previous process. If you must deliver to a single bucket, configure your CURs with different prefixes or folders and follow this process.</description>
</item>
<item>
<title>Perform one off Fill of Member/Linked Data</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/2_backfill_data/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/2_backfill_data/</guid>
<description>Perform this step if you want to generate data for all previous months available in your current CUR files. This is a one off step that is performed manually. We create a temporary table in Athena, and write the output to the S3 location created above, for the member/linked account to access it. We then delete the temporary table - which does not delete the S3 output data. 1 - In the management/payer account go into the Athena service dashboard</description>
</item>
<item>
<title>Playbook Run</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_playbook_with_jupyter-aws_iam/2_playbook_run/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_playbook_with_jupyter-aws_iam/2_playbook_run/</guid>
<description>2.1 Download Playbook and Helper Download the example version of the notebook Incident_Response_Playbook_AWS_IAM.ipynb and helper incident_response_helpers.py, place them in the same directory. 2.2 Run the Playbook In your command line or terminal change directory to where you downloaded or cloned the notebook and helper. Enter jupyter notebook to start the local webserver, and connect to the url provided in the console e.g. The Jupyter Notebook is running at:, a web browser may automatically open to the correct url.</description>
</item>
<item>
<title>Setup</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/2_setup_env/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/2_setup_env/</guid>
<description>Requirements You will need the following to be able to perform this lab: Your own device for console access An AWS account that you are able to use for testing, that is not used for production or other purposes An available region within your account with capacity to add 2 additional VPCs User and Group Management When you create an Amazon Web Services (AWS) account, you begin with a single sign-in identity that has complete access to all AWS services and resources in the account.</description>
</item>
<item>
<title>Simulate an Application Issue</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/2_simulate_application_issue/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/2_simulate_application_issue/</guid>
<description>Understanding the health of your workload is an essential component of Operational Excellence. Defining metrics and thresholds, together with appropriate alerts will ensure that issues can be acknowledged and remediated within an appropriate timeframe. In this section of the lab, you will simulate a performance issue within the API. Using Amazon CloudWatch synthetic, your API will utilize a canary monitor, which continuously checks API response time to detect an issue.</description>
</item>
<item>
<title>Structure of a custom lens - Questions</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/2_ddb_config_questions/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/2_ddb_config_questions/</guid>
<description>Questions in Custom Pillars: After our pillars have been defined, we start to work on related key items and best practices we want to focus in each pillar. For each best practice, we can define the logic associated with each question and associate a particular answer with the creation of either a high or medium risk. Lets go to the first custom pillar – Operational Readiness.* We can start by collecting feedback from key stakeholders who hold an operational role in the organization, like cloud operators, DevOps engineers, managers and tech leads.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_aws_account_and_root_user/2_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_aws_account_and_root_user/2_cleanup/</guid>
<description>Please note that the changes you made to secure your account and root user should remain in place, and have no charges associated with them.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_certificate_manager_request_public_certificate/2_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_certificate_manager_request_public_certificate/2_tear_down/</guid>
<description>The following instructions will remove the certificate you have created. Sign into the AWS Management Console and open the ACM console at https://console.aws.amazon.com/acm/home. Select the region where you created the certificate. Click the check box for the domain name of the certificate to delete. Click Actions then Delete. Verify this is the certificate to delete and click Delete. Note: You cannot delete an ACM Certificate that is being used by another AWS service.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_for_web_application/2_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_for_web_application/2_tear_down/</guid>
<description>The following instructions will remove the resources that have a cost for running them. Please note that Security Groups and SSH key will exist. You may remove these also or leave for future use. Delete the CloudFront distribution: Open the Amazon CloudFront console at https://console.aws.amazon.com/cloudfront/home. From the console dashboard, select the distribution you created earlier and click the Disable button. To confirm, click the Yes, Disable button. After approximately 15 minutes when the status is Deployed, select the distribution and click the Delete button, and then to confirm click the Yes, Delete button.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_with_cloudwatch_dashboards/2_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_with_cloudwatch_dashboards/2_cleanup/</guid>
<description>Remove the dashboard you created The AWS free tier allows for 3 Dashboards for up to 50 metrics per month for free, but to ensure you are not charged for the dashboard, you should remove it if you created one in the previous step. References &amp; useful resources See Key Metrics From All AWS Services Focus on Metrics and Alarms in a Single AWS Service Focus on Metrics and Alarms in a Resource Group function prevStep(){ window.</description>
</item>
<item>
<title>Understand your usage trend</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/2_usage_trend/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/2_usage_trend/</guid>
<description>In large organizations usage can be distributed across many teams, and could take significant effort to collect. We can assist this effort by using tooling to understand your overall trends in usage to make an informed choice on Savings Plan commitments. You can use the Compute Savings Plan for this exercise if you plan on purchasing a compute plan. For this lab we will use an EC2 Instance Savings Plans to provide more granularity and insights into usage.</description>
</item>
<item>
<title>Upload example index.html file</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_cloudfront_with_s3_bucket_origin/2_upload_file/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_cloudfront_with_s3_bucket_origin/2_upload_file/</guid>
<description>Create a simple index.html file, you can create by coping the following text into your favourite text editor. &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Example&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Example Heading&lt;/h1&gt; &lt;p&gt;Example paragraph.&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; Open the Amazon S3 console at https://console.aws.amazon.com/s3/. In the console click the name of your bucket you just created. Click the Upload button. Click the Add files button, select your index.html file, then click the Upload button.</description>
</item>
<item>
<title>Use AWS Glue to enable access to CUR files via Amazon Athena</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_4_cost_and_usage_analysis/2_setup_athena/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_4_cost_and_usage_analysis/2_setup_athena/</guid>
<description>We will use AWS Glue and setup a scheduled Crawler, which will run each day. This crawler will scan the CUR files and create a database and tables for the delivered files. If there are new versions of a CUR, or new months delivered - they will be automatically included. We will use Athena to access and view our CUR files via SQL. Athena is a serverless solution to be able to execute SQL queries across very large amounts of data.</description>
</item>
<item>
<title>Using AWS Cost Management Rightsizing Recommendations</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/2_resource_opt/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/2_resource_opt/</guid>
<description>In order to complete this step you need to have findings within Rightsizing Recommendations. You can do that by going to AWS Cost Explorer&raquo;Rightsizing Recommendations (left bar) section. Allow up to 24 hours after enabling this feature (no additional cost) to start getting recommendations. AWS Cost Explorer Rightsizing Recommendations offers EC2 resource optimization recommendations without any additional cost. These recommendations identify idle and underutilized instances across your accounts, regions, and tags.</description>
</item>
<item>
<title>View your cost and usage by account</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/2_cost_usage_account/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/2_cost_usage_account/</guid>
<description>We will now view usage by account. This helps to highlight where the costs and usage are by linked account. NOTE: you will need one or more multiple accounts for this exercise to be effective. Select Saved reports from the left menu: Click on Monthly costs by linked account: It will show the default last 6 months, with a monthly granularity. As above, change the graph to Daily granularity and from a bar graph to a Line graph: Here is the daily granularity line graph.</description>
</item>
<item>
<title>View your cost and usage in detail</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_4_cost_and_usage_analysis/2_cost_usage_detail/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_4_cost_and_usage_analysis/2_cost_usage_detail/</guid>
<description>You can view past and present costs and usage through the console, which also provides more detailed information on cost and usage. We will go through accessing your cost and usage by service, and by linked account (if applicable). We will then drill down into a specific service. Go to the billing dashboard: Click on Bills from the left menu: Select the Date you require from the drop down menu, by clicking on the menu item: Select Charges by service, where you can dynamically drill down into the specific service cost and usage.</description>
</item>
<item>
<title>Expenditure Awareness</title>
<link>https://wellarchitectedlabs.com/cost/expenditureawareness/</link>
<pubDate>Mon, 20 Apr 2020 22:31:40 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/expenditureawareness/</guid>
<description>About expenditure awareness The capability to attribute resource costs to the individual organization or product owners drives efficient usage behavior and helps reduce waste. Accurate cost attribution allows you to know which products are truly profitable, and allows you to make more informed decisions about where to allocate budget. Step 1 - Cost and Usage Governance - Notifications Configuring notifications allows you to receive an email when usage or cost is above a defined amount.</description>
</item>
<item>
<title>Add & Configure Services</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/2_add_and_configure_services/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/2_add_and_configure_services/</guid>
<description>Workload Description Lets take the case of a customer facing Web Application. This general purpose workload takes input data from users (over the internet), processes it and returns the results. It is a spiky workload which receives 100 new connections per second, each lasting approximately 3 min. Per connection, the workload processes 1000 bytes of data across 4 requests per sec. The workload requires 2 instances at peak, with 2 GB RAM, 2 vCPU each and 30 GB of storage per instance.</description>
</item>
<item>
<title>Govern Usage</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/2_govern_usage/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/2_govern_usage/</guid>
<description>Govern Usage Controls Notifications Goal: Ensure relevant people are notified when costs are predicted to exceed the set budget Target: All accounts have a forecasted budget set, with notifications sent to management, finance and technical leads Best Practice: Controls - Notifications Measures: % of accounts with budgets set Good/Bad: Good Why? When does it work well or not?: Ensure relevant staff are made aware of potential deviations from expected costs and usage Contact/Contributor: costoptimization@amazon.</description>
</item>
<item>
<title>AWS Cost Management</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/aws_cost_management/</link>
<pubDate>Mon, 10 Apr 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/aws_cost_management/</guid>
<description>These are queries for AWS Services under the AWS Cost Management product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Create A Cost Monitor</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/2_create_monitor/</link>
<pubDate>Mon, 13 Mar 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/2_create_monitor/</guid>
<description>Cost Anomaly Detection is a feature of AWS Cost Explorer that performs the heavy lifting of continuous cost monitoring and saves users the tedious work of manually identifying unusual spend patterns in their AWS account. In other words, it helps users better govern their AWS cost and prevents unexpected charges at the end of the month. This section walks you through the steps to get started with AWS Cost Anomaly Detection by creating a cost monitor which will enable you to establish spending segments.</description>
</item>
<item>
<title>Scheduling at scale</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_ec2_scheduling_at_scale/3_scheduling_at_scale/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_ec2_scheduling_at_scale/3_scheduling_at_scale/</guid>
<description>With its default configuration, the Instance Scheduler solution will apply the &ldquo;seattle-office-hours&rdquo; schedule to all EC2 Instances that have a tag with Key=&ldquo;Schedule&rdquo; and Value=&ldquo;seattle-office-hours&rdquo;. This is the only configuration that needs to be done to stop the instance outside Seattle Office hours. A Cloud Center of Excellence (CCOE) team could configure this at scale using Tag Editor feature of AWS Resource Groups with batch of 500 instances, or with custom automation (i.</description>
</item>
<item>
<title>Test the Change Process</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/3_test_change_process/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/3_test_change_process/</guid>
<description>As we mentioned, checking the AWS service health status before triggering the Systems Manager production change process will allow you to avoid your operational change pipeline being held up by active service events, so to proactively remediate the operational risks. With this AWS Health Aware capability, you can use Systems Manager to integrate this feature into your existing Automation Runbooks to enhance the resiliency of your operation change process. In this lab you will take the following actions on the Change Manager:</description>
</item>
<item>
<title>Alternative Deployment Methods</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/alternative_deployments/</link>
<pubDate>Fri, 20 May 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/alternative_deployments/</guid>
<description>Alternative Methods for Deploying the CUR-based Cloud Intelligence Dashboards If you are unable to deploy using the CloudFormation automation steps earlier in this lab, here are two alternative methods. Pre-requisites are included in each step. Option 1: Deploy CIDs with Command Line Tool Click here to continue with command line tool deployment This option walks you through setting up a CUR file in the Management (payer) Account and configuring the prerequisites to have the CIDs deployed there.</description>
</item>
<item>
<title>Preparation for Failure Injection</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/3_failure_injection_prep/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/3_failure_injection_prep/</guid>
<description>Failure injection is the means by which we will simulate disruptive real-world events that affect production environments. Such events are used in chaos engineering to validate and understand the resiliency of your workload. Chaos engineering is a recommended practice of the AWS Well-Architected Reliability Pillar. Here you will initiate various failure scenarios and assess how your workload reacts. Before testing, please prepare the following: 3.1 Region must be Ohio We will be using the AWS Console to assess the impact of our testing Throughout this lab, make sure you are in the Ohio region 3.</description>
</item>
<item>
<title>Configure workload updates</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_manage_workload_risks_with_opscenter/3_update_workload/</link>
<pubDate>Tue, 31 Aug 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_manage_workload_risks_with_opscenter/3_update_workload/</guid>
<description>Updating workloads The AWS WA Tool should be the source of truth for information related to workload risks. After new best practices are implemented for a workload, it is important to reflect this by updating the workload on the AWS WA Tool. In this section, you will expand the solution to include automated updates to the workload when best practices are implemented. 2.1 Create and configure Lambda function You will create a Lambda function that will be invoked using SNS whenever a Well-Architected OpsItem is resolved.</description>
</item>
<item>
<title>Create VPC Flow Logs QuickSight Analysis Dashboard</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_vpc_flow_logs_analysis_dashboard/3_create_vpc_flow_logs_analysis/</link>
<pubDate>Mon, 09 Aug 2021 11:10:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_vpc_flow_logs_analysis_dashboard/3_create_vpc_flow_logs_analysis/</guid>
<description>To manage VPC Flow Logs and QuickSight dashboard in central account please make sure you create resources for the central account in the region supported by QuickSight. Refer to this link to see supported regions. Create QuickSight Dataset and Dashboard We will now create the data sets in QuickSight from the Athena view and an analysis dashboard. All the steps from this section are required to execute one time in central account.</description>
</item>
<item>
<title>Modern Load Test</title>
<link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/3_modern_load_test/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/3_modern_load_test/</guid>
<description>The on-demand nature of the AWS Cloud allows for a production-scale test environment to be deployed in a matter of minutes. While AWS serverless services allow for efficient scaling individually, it is important to consider the effect of Service Quotas at both region and account level. Ignoring these maximum limits can become immediately impactful to a production workload. In this section we will perform load testing on our deployed Blue Car application to ensure that the architecture scales in alignment to the traffic which is being processed.</description>
</item>
<item>
<title>Prevent requests from accessing API directly</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/3_prevent_requests_from_accessing_api_directly/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/3_prevent_requests_from_accessing_api_directly/</guid>
<description>In this section you will be building your own distribution of Amazon CloudFront which offers protection at the edge of your architecture. When integrating CloudFront with regional API endpoints, not only does the service distribute traffic across multiple edge locations to improve performance, but also it supports geoblocking, which you can use to help block requests from particular geographic locations from being served. With Amazon CloudFront, you can also enforce encrypted end-to-end connections to an origin API by using HTTPS.</description>
</item>
<item>
<title>Check for non-compliant resources</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_8_tag_policies/3_compliance_report/</link>
<pubDate>Thu, 20 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_8_tag_policies/3_compliance_report/</guid>
<description>Launch an EC2 with compliant tags and one with noncompliant tags Navigate to the EC2 service in the navigation bar and click Launch instance Select the Amazon Linux Free tier eligible AMI Select the free tier eligible t2.micro instance type and click Review and Launch Click “Edit tags” on the right side of the page across from the Tags dropdown and Click Add Tag Add the Tag Key (environment) and Tag Value (uat) and click Review and Launch On the Review Instance Launch page click Launch Select Key Pair and click Launch Instances.</description>
</item>
<item>
<title>TAO Dashboard Deployment</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/trusted-advisor-dashboards/dashboards/3_deployment/</link>
<pubDate>Thu, 20 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/trusted-advisor-dashboards/dashboards/3_deployment/</guid>
<description>Deployment Options There are 2 options to deploy the TAO Dashboard. If you are unsure what option to select, we recommend using the CloudFormation Option 1: CloudFormation Deployment If you already have CUDOS, Cost Intellegence Dashboard or KPI Dashboard installed via CloudFormation as described here, you can update the Stack (default name Cloud-Intelligence-Dashboards) by setting Deploy TAO Dashboard to &ldquo;yes&rdquo; and updating the path of Data Collection S3 bucket (if different from default).</description>
</item>
<item>
<title>Script usage examples</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/exportimport_utility/3_executing/</link>
<pubDate>Wed, 19 May 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/exportimport_utility/3_executing/</guid>
<description>Exporting a workload to a JSON file Example Command: ./exportImportWAFR.py -f workload_output.json --exportWorkload --profile acct2 -w c896b2b1142f6ea8dc22874674400002 $ ./exportImportWAFR.py -f workload_output.json --exportWorkload --profile acct2 -w c896b2b1142f6ea8dc22874674400002 2021-05-19 15:39:46.921 INFO exportImportWAFR - main: Script version 0.1 2021-05-19 15:39:46.921 INFO exportImportWAFR - main: Starting Boto 1.17.27 Session 2021-05-19 15:39:47.066 INFO exportImportWAFR - main: Exporting workload &#39;c896b2b1142f6ea8dc22874674400002&#39; to file workload_output.json 2021-05-19 15:39:47.473 INFO exportImportWAFR - main: Gathering overall review for lens wellarchitected 2021-05-19 15:39:47.</description>
</item>
<item>
<title>Step 3 - Replace hardcoded credentials</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/3_replace_hardcoded_credentials/</link>
<pubDate>Tue, 11 May 2021 01:25:03 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/3_replace_hardcoded_credentials/</guid>
<description>In this exercise we will use AWS Secrets Manager to easily manage and retrieve credentials i.e., username/passwords, API Keys and other secrets through their Lifecyle. As a Pre-requisite this lab requires Amazon Relational Database Service (RDS) MySQL server, Amazon Elastic Container Service (ECS) cluster (with a container-based application), Amazon Elastic Container Registry (ECR). From the AWS console, click Services and select Secrets Manager. On the Secrets Manager console click on Store a new secret.</description>
</item>
<item>
<title>Script usage examples</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/export_to_xlsx/3_executing/</link>
<pubDate>Tue, 04 May 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/export_to_xlsx/3_executing/</guid>
<description>Generating a XLSX spreadsheet with all questions, best practices, and improvement plan links Example Command: ./exportAnswersToXLSX.py --fileName ./demo.xlsx --profile acct2 --region us-east-1 $ ./exportAnswersToXLSX.py --fileName ./demo.xlsx --profile acct2 --region us-east-1 2021-05-05 10:27:24.917 INFO exportAnswersToXLSX - main: Script version 0.1 2021-05-05 10:27:24.918 INFO exportAnswersToXLSX - main: Starting Boto 1.17.27 Session 2021-05-05 10:27:25.018 INFO exportAnswersToXLSX - main: No workload ID specified, we will create a TEMP workload 2021-05-05 10:27:25.314 INFO exportAnswersToXLSX - main: Lenses available: [&#34;serverless&#34;, &#34;wellarchitected&#34;, &#34;softwareasaservice&#34;, &#34;foundationaltechnicalreview&#34;] 2021-05-05 10:27:25.</description>
</item>
<item>
<title>Script usage examples</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/copy_wa_review_between_accounts/3_executing/</link>
<pubDate>Sun, 18 Apr 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/copy_wa_review_between_accounts/3_executing/</guid>
<description>Below are some examples on how you can utilize the script: Copying a WellArchitected Tool Review from one region to another Example Command: ./duplicateWAFR.py --fromaccount acct2 --toaccount acct2 --workloadid c896b2b1142f6ea8dc228746744c0000 --fromregion us-east-1 --toregion us-east-2 $ ./duplicateWAFR.py --fromaccount acct2 --toaccount acct2 --workloadid c896b2b1142f6ea8dc228746744c0000 --fromregion us-east-1 --toregion us-east-2 2021-04-19 09:43:37.832 INFO duplicateWAFR - main: Starting Boto 1.17.27 Session 2021-04-19 09:43:38.130 INFO duplicateWAFR - main: Copy WorkloadID &#39;c896b2b1142f6ea8dc228746744c0000&#39; from &#39;us-east-1:acct2&#39; to &#39;us-east-2:acct2&#39; 2021-04-19 09:43:38.</description>
</item>
<item>
<title>Script usage examples</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/generate_custom_html_wafr_report/3_executing/</link>
<pubDate>Sun, 18 Apr 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/helpful_resources/generate_custom_html_wafr_report/3_executing/</guid>
<description>Generating a WellArchitected Framework HTML Report Example Command: ./generateWAFReport.py --profile acct2 --workloadid c896b2b1142f6ea8dc22874674400002 --region us-east-1 $ ./generateWAFReport.py --profile acct2 --workloadid c896b2b1142f6ea8dc22874674400002 --region us-east-1 2021-04-19 12:47:06.672 INFO generateWAFReport - main: Starting Boto 1.17.27 Session 2021-04-19 12:47:15.097 INFO generateWAFReport - main: Creating HTML file /var/folders/sw/1xkhcl751fj_fxr63jb5qr2m0000gs/T/tmpft2fam0k.html 2021-04-19 12:47:15.097 INFO generateWAFReport - main: Opening HTML URL (file:///var/folders/sw/1xkhcl751fj_fxr63jb5qr2m0000gs/T/tmpft2fam0k.html) in default WebBrowser Example HTML Output How do you detect and investigate security events? - AWS Well-Architected Framework #pre, #main, #nav, #post { width: 80%; margin-left: 10%; margin-right: 10%; float: inherit; } #pre { margin-top: 80px; } #nav { margin-top: 90px; } #main * { font-size: x-large; text-rendering: optimizelegibility; } @media (max-width: 800px) { #main * { font-size: xx-large; } } .</description>
</item>
<item>
<title>How to utilize AWS Lambda-backed custom resources in CloudFormation</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/3_how_to_use_in_cfn/</link>
<pubDate>Thu, 25 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/3_how_to_use_in_cfn/</guid>
<description>Overview In order to utilize the two Lambda-backed custom resources in CloudFormation, you will need the pass the Lambda function ARN along with expected parameters using the CloudFormation custom resource type. Below are examples for creating a new workload as well as updating two questions in the Operational Excellence pillar. The general workflow for this lambda-backed CloudFormation function: Example Workload Creation When you use this custom function, it will either create the WA Workload (if it doesn&rsquo;t exist) or update the given parameters if it already does exist.</description>
</item>
<item>
<title>Query the workload data</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/3_query_data/</link>
<pubDate>Wed, 24 Mar 2021 15:16:08 +1000</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/3_query_data/</guid>
<description>Although structured data remains the backbone of many data platforms, unstructured or semi structured data is used to enrich existing information or to create new insights. Amazon Athena enables you to analyze a variety of data, including: Tabular data in comma-separated value (CSV) or Apache Parquet files Data extracted from log files using regular expressions JSON-formatted data Athena is serverless, so there is no infrastructure to manage, and you pay only for the queries that you run.</description>
</item>
<item>
<title>SaaS Unit Metrics</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/3_unitmetrics/</link>
<pubDate>Thu, 18 Mar 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/3_unitmetrics/</guid>
<description>Last Updated March 2022 Introduction From time to time, customers will have concerns such as: ‘my AWS bills are going up and I don’t know whether that’s a good thing or a bad thing’. Did the bill go up because they are operating more workloads in the cloud, or is it because they are using AWS inefficiently? … Perhaps, a little bit of both. Regardless of the reason, the most often encountered interpretation is that more spend is bad.</description>
</item>
<item>
<title>Create Data Transfer Cost Analysis Dashboard</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/3_create_data_transfer_cost_analysis/</link>
<pubDate>Mon, 15 Mar 2021 10:00:02 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/3_create_data_transfer_cost_analysis/</guid>
<description>This Lab has moved under the Level 200 Cloud Intelligence Dashboards.Click this link to navigate to the updated Lab Authors Chaitanya Shah, Sr. Technical Account Manager (AWS) FAQ The FAQ for this dashboard is here. Introduction The Data Transfer Dashboard is an interactive, customizable and accessible QuickSight dashboard to help customers gain insights into their data transfer. It will analyze any data transfer that incurs a cost such as outbound internet and regional data transfer from all services.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_journey/3_tear_down/</link>
<pubDate>Mon, 01 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_journey/3_tear_down/</guid>
<description>The following resources were created in this lab: S3 Bucket: (custom name) Lambda Function: Cost_W-A_Journey IAM Role: extract-wa-reports_role IAM Policy: WAReportAccess function prevStep(){ window.open("..\/5_format_dashboard\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Congratulations! Now that you have your Cost Optimization Journey, you can continue to implement the best practices within your organization and workloads. Click here to access the Well-Architected Tool Previous Step Complete this lab Suggested definitions These have been used to configure the templated journey file, and should help guide you to making modifications.</description>
</item>
<item>
<title>Enable Notifications</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/3_enable_notifications/</link>
<pubDate>Sun, 21 Feb 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/3_enable_notifications/</guid>
<description>In the cloud, setting up notifications to be aware of events within your workload is easily achieved. AWS Backup leverages AWS SNS to send notifications related to backup activities that are occurring. This will allow visibility into backup job statuses, restore job statuses, or any failures that may have occurred, allowing your Operations teams to respond appropriately. Open a terminal where you have access to the AWS CLI. Ensure that the CLI is up to date and that you have AWS Administrator Permissions to run AWS CLI commands.</description>
</item>
<item>
<title>Optional Steps</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/compute-optimizer-dashboards/dashboards/3_manage-business-units/</link>
<pubDate>Wed, 10 Feb 2021 11:43:22 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/compute-optimizer-dashboards/dashboards/3_manage-business-units/</guid>
<description>Manage Business Units Map For managing Business Units please modify business_units_map view. You can update view definition providing your values, or you can create an csv file upload to s3, create a table and set business_units_map view to select from this table. CREATE OR REPLACE VIEW business_units_map AS SELECT * FROM ( VALUES ROW (&#39;111111111&#39;, &#39;account1&#39;, &#39;Business Unit 1&#39;) , ROW (&#39;222222222&#39;, &#39;account2&#39;, &#39;Business Unit 2&#39;) ) ignored_table_name (account_id, account_name, bu) Alos you can use business_units_map view as a proxy to other data sources.</description>
</item>
<item>
<title>Create a Well-Architected Workload with Tags</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/3_create_workload/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/3_create_workload/</guid>
<description>Let’s define a workload and associate the necessary AWS tags with it. The Well-Architected Framework Reviews are conducted per workload. A workload is a collection of resources and code that delivers business value, such as a customer-facing application or a backend process. We will start with creating a workload in the Well-Architected Tool. Click Define workload associated with the necessary AWS tags. Now you can define a workload:</description>
</item>
<item>
<title>Performing a review</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/3_perform_review/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/3_perform_review/</guid>
<description>Overview Now that we have created a workload, we will answer the question OPS 5. How do you reduce defects, ease remediation, and improve flow into production. For this question, we will select a subset of the best practices, affirming them as true (turning them from unchecked to checked): Use version control Use configuration management systems Use build and deployment management systems Perform patch management Use multiple environments Step 1 - Find the QuestionId and ChoiceID for a particular pillar question and best practice Make sure you have the WorkloadId from the previous step and replace WorkloadId with it</description>
</item>
<item>
<title>Implement sharding</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/3_implement_sharding/</link>
<pubDate>Mon, 07 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/3_implement_sharding/</guid>
<description>In this section you will update the architectural design of the workload and implement sharding. Similar to sharding a database where a large database or table is broken up into smaller chunks distributed across multiple servers, you will shard the overall capacity of the workload and segment it so that each shard is responsible for handling a subset of customers. By minimizing the number of &ldquo;components&rdquo; a single customer is able to interact with within the workload, we will be able to reduce the impact of a potential posion pill.</description>
</item>
<item>
<title>Create CloudWatch Dashboard</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/3_creating_cloudwatch_dashboard/</link>
<pubDate>Tue, 01 Dec 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/3_creating_cloudwatch_dashboard/</guid>
<description>We have deployed a single Amazon Linux 2 EC2 instance and we will now create a CloudWatch Dashboard to monitor the memory and CPU resources consumed by the instance. From the AWS Console, click the search box and type in CloudWatch (or you can open this link directly https://console.aws.amazon.com/cloudwatch/home) Click on Dashboards link on the left side Click on Create Dashboard button If you have not done so already, make sure to click &ldquo;Try out the new interface&rdquo; to see the updated CloudWatch interface.</description>
</item>
<item>
<title>Create CloudWatch Dashboard</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/3_creating_cloudwatch_dashboard/</link>
<pubDate>Thu, 19 Nov 2020 12:00:00 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/3_creating_cloudwatch_dashboard/</guid>
<description>We have deployed a single Windows 2 EC2 instance and we will now create a CloudWatch Dashboard to monitor the memory and CPU resources consumed by the instance. From the AWS Console, click the search box and type in CloudWatch (or you can open this link directly https://console.aws.amazon.com/cloudwatch/home) Click on Dashboards link on the left side Click on Create Dashboard button If you have not done so already, make sure to click &ldquo;Try out the new interface&rdquo; to see the updated CloudWatch interface.</description>
</item>
<item>
<title>Configure Lab Environment</title>
<link>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/2_configure_env/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/2_configure_env/</guid>
<description>Overview The following example scenario is referenced in this lab: Your company has a workload running on an Amazon EC2 instance. You have a number of API calls served and measured as metrics to quantify the achievement of business outcomes. In this section, we will deploy our base lab infrastructure using AWS CloudFormation as follows: Note the following: As part of the deployment steps, 3 API calls per minute will be generated continuously and these activities will be logged to access_log in /var/log/httpd.</description>
</item>
<item>
<title>Discover CUR data with Amazon Athena</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/1-2_discover_cur_data/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/1-2_discover_cur_data/</guid>
<description>Lab 1.2 In the previous step, you provided AWS Cost &amp; Usage Report data in an Amazon S3 bucket. In this step you will make this usage data available in the AWS Glue data catalog for Amazon Athena. Amazon Athena allows you to run SQL (Structured Query Language) queries on the data without loading it into a database and calculate proxy metrics for sustainability. Go to the Amazon Athena console in a region in which your CUR data is stored.</description>
</item>
<item>
<title>Preparation</title>
<link>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/2_preparation/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/2_preparation/</guid>
<description>Migration Methodologies Preparation Lab 1 - Change Database Instance Type Lab 2 - Promote Read Replica Lab 3 - Failover to Read Replica Lab 4 - Restore from snapshot Cleanup Overview The databases in this lab can take some time to create, by creating them all at the start of the lab some time can be saved. For a bit of variety we&rsquo;ll create various different database types.</description>
</item>
<item>
<title>Prepare Amazon Redshift Producer Cluster</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/2_prepare_redshift_producer_cluster/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/2_prepare_redshift_producer_cluster/</guid>
<description>Lab 2 We will first create the producer Amazon Redshift cluster (we will refer this as the producer cluster throughout the lab) in us-east-1 region, and will also load sample dataset which we will use for our sustainability use case. Step-1: Create Redshift Producer Cluster Login into the AWS Console (make sure us-east-1 region is selected in top right corner), and click Create Cluster. Provide Cluster name as redshift-cluster-east, and select ra3.</description>
</item>
<item>
<title>Configure Cost and Usage reports</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/3_cur/</link>
<pubDate>Mon, 26 Oct 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/3_cur/</guid>
<description>Cost and Usage Reports provide the most detailed information on your usage and bills. They can be configured to deliver 1 line per resource, for every hour of the day. They must be configured to enable you to access and analyze your usage and billing information. Configure a Cost and Usage Report If you configure multiple Cost and Usage Reports (CURs), then it is recommended to have 1 CUR per bucket.</description>
</item>
<item>
<title>Testing Deployment</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/3_test_modules/</link>
<pubDate>Wed, 21 Oct 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/3_test_modules/</guid>
<description>Testing your deployment Your lambda functions will run automatically on the schedule you chose at deployment. However, if you would like to test your functions please see the steps below. Once you have deployed your modules you will be able to test your Lambda function to get your first set of data in Amazon S3. Depending on the module which you would like to test the following Lambda functions should be triggered.</description>
</item>
<item>
<title>Create an Alarm</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/3_create_alarm/</link>
<pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/3_create_alarm/</guid>
<description>Now that the right metric has been identified to monitor the dependency, it is time to create an alarm to monitor the metric and send notifications based on thresholds defined. CloudWatch Alarms can be used to automatically initiate actions on your behalf. An alarm watches a single metric over a specified time period, and performs one or more specified actions, based on the value of the metric relative to a threshold over time.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_licensing/3_tear_down/</link>
<pubDate>Sun, 30 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_licensing/3_tear_down/</guid>
<description>The following resources were created in this lab: Remove Athena before and after tables: drop table costmaster.before drop table costmaster.after Delete the before and after folders from S3. Delete s3 folder starting with the name cost-, ensure you select the correct folder. Additional user permissions in SSO (if configured): ec2:DescribeImages ec2:DescribeVpcs ec2:DescribeSubnets function prevStep(){ window.open("..\/2_analyze_understand\/", "</description>
</item>
<item>
<title>Changing clock type on the Xen based EC2 instance</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_clock_source_performance/3_change_clock/</link>
<pubDate>Tue, 09 Jun 2020 12:00:00 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_clock_source_performance/3_change_clock/</guid>
<description>We can change the clock type on Xen based EC2 instances to get better performance than the standard Xen clock source. You will notice that the speed for Xen and Nitro/KVM instances will be close to identical after this change. Code to change the clock source echo &quot;tsc&quot; &gt; /sys/devices/system/clocksource/clocksource0/current_clocksource This changes the default time clock from xen to tsc (Time Stamp Counter), which is considered the best practice for Xen based EC2 instances.</description>
</item>
<item>
<title>Amazon VPC</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_with_aws_console_and_cli/3_vpc/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_incident_response_with_aws_console_and_cli/3_vpc/</guid>
<description>A Amazon VPC that has VPC Flow Logs enabled captures information about the IP traffic going to and from network interfaces in your Amazon VPC. This log information may help you investigate how Amazon EC2 instances and other resources in your VPC are communicating, and what they are communicating with. You can follow the Automated Deployment of VPC lab for creating a Amazon VPC with Flow Logs enabled. 3.1 Investigate Amazon VPC Flow Logs 3.</description>
</item>
<item>
<title>Analyze your Savings Plan recommendations</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/3_analyze_recommendations/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/3_analyze_recommendations/</guid>
<description>We have an understanding of the potential savings available to us, and how we can adjust that based on our business requirements. We also know our usage trends across the business, which will help us with our initial commitment. We will now go deeper to help you understand exactly what Savings Plan commitment is right for you. You can think of a single Savings Plan as a highly flexible group of Reserved Instances (RI&rsquo;s), without the same management overhead.</description>
</item>
<item>
<title>Attach CloudWatch IAM role to selected EC2 Instances</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/3_attach_iamrole/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/3_attach_iamrole/</guid>
<description>We are now going to attach the IAM Role created on the previous step in one of our EC2 Instances, to do that let&rsquo;s go to the Amazon EC2 Dashboard. From the EC2 Dashboard, scroll down a bit an click on Launch Instance Select Linux 2 AMI (HVM) Select t2.micro (free tier eligible) and click review and launch It is possible to assign the IAM role during EC2 creation by clicking &ldquo;Next: Configure Instance Details&rdquo;.</description>
</item>
<item>
<title>Build & Run an Investigative Playbook</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/3_build_run_investigative_playbook/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/3_build_run_investigative_playbook/</guid>
<description>The efficiency of issue resolution within an Operations team is directly linked to their tenure and experience. Where an Operator has prior knowledge of a particular issue, they will have a headstart in being able to reach resolution in terms of understanding logs and metrics which were used in previous situations. Whilst this constitutes value to an Operations group, it also represents a single point of failure and a scalability challenge.</description>
</item>
<item>
<title>CloudFront with WAF Protection</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_loft_introduction_to_security/3_cloudfront_waf/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_loft_introduction_to_security/3_cloudfront_waf/</guid>
<description>This hands-on lab will guide you through the steps to protect a workload from network based attacks using Amazon CloudFront and AWS Web Application Firewall (WAF). You will use the AWS Management Console and AWS CloudFormation to guide you through how to deploy CloudFront with WAF integration to apply defense in depth methods. As CloudFront takes some time to update configuration in all edge locations, consider starting step 4 while its deploying.</description>
</item>
<item>
<title>Configure Amazon CloudFront</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_cloudfront_with_s3_bucket_origin/3_config_cloudfront/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_cloudfront_with_s3_bucket_origin/3_config_cloudfront/</guid>
<description>Using the AWS Management Console, we will create a CloudFront distribution, and configure it to serve the S3 bucket we previously created. Open the Amazon CloudFront console at https://console.aws.amazon.com/cloudfront/home. From the console dashboard, click Create Distribution. Click Get Started in the Web section. Specify the following settings for the distribution: In the Origin Domain Name field Select the S3 bucket you created previously. In Restrict Bucket Access click the Yes radio then click Create a New Identity.</description>
</item>
<item>
<title>Configure Amazon CloudFront</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_with_waf_protection/3_config_cloudfront/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_with_waf_protection/3_config_cloudfront/</guid>
<description>Using the AWS Management Console, we will create a CloudFront distribution, and link it to the AWS WAF ACL we previously created. Open the Amazon CloudFront console at https://console.aws.amazon.com/cloudfront/home. From the console dashboard, choose Create Distribution. Click Get Started in the Web section. Specify the following settings for the distribution: In Origin Domain Name enter the EC2 public DNS name you recorded from your instance launch.</description>
</item>
<item>
<title>Configure CloudTrail</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/3_configure_and_check_cloudtrail/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/3_configure_and_check_cloudtrail/</guid>
<description>We will now focus on the creation and configuration of the CloudTrail service. This represents the source of record for all API calls generated within our architecture which we will apply filters to later. Note in the architecture below how CloudTrail integrates with the other AWS services we will deploy: Click here for CloudFormation command-line deployment steps Command Line: 3.1. Command Line Deployment Firstly, download the logging template from here.</description>
</item>
<item>
<title>Configure Cost Allocation Tags</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/3_configure_cost_allocation_tags/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/3_configure_cost_allocation_tags/</guid>
<description>Overview You can use AWS cost allocation tags to track your AWS costs on a detailed level. After you activate cost allocation tags, AWS uses them to organize your resource costs on your cost allocation report, making it easier for you to categorize and track your AWS costs. AWS provides two types of cost allocation tags that are AWS generated tags and user-defined tags. AWS or AWS Marketplace ISV defines, creates, and applies the AWS generated tags for you, and you define, create, and apply user-defined tags.</description>
</item>
<item>
<title>Configure Deployed Resources using Parameters</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/3_cfn_params/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/3_cfn_params/</guid>
<description>In this task, you will gain experience changing CloudFormation stack parameters and updating your CloudFormation stack Your objective is to deploy additional resources used by the VPC to enable connection to the internet 3.1 Update Parameters Go to the AWS CloudFormation console (if not already there) Click on Stacks Click on the CloudFormationLab stack Click Update Leave Use current template selected. You have not yet changed the template Click Next On the Specify stack details screen you now have the opportunity to change the Parameters Change PublicEnabledParam to true Click Next Click Next again, until you arrive at the Review CloudFormationLab screen Scroll down to Change set preview and note several resources are being added At the bottom of the page, select I acknowledge that AWS CloudFormation might create IAM resources with custom names Click Create stack It takes about a minute for the stack update to finish and the stack status is UPDATE_COMPLETE 3.</description>
</item>
<item>
<title>Cost and Usage analysis</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_4_cost_and_usage_analysis/3_cur_analysis/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_4_cost_and_usage_analysis/3_cur_analysis/</guid>
<description>We will now perform some common analysis of your usage through SQL queries. You will be charged for Athena usage by the amount of data that is scanned - the source files are monthly, and in parquet format - which is compressed and partitioned to minimise cost. Be careful to include limit 10 or similar at the end of your queries to limit the amount of data that comes back.</description>
</item>
<item>
<title>Create an IAM policy and role for Lambda function</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/3_iam_policy_and_role/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/3_iam_policy_and_role/</guid>
<description>This step is used to create an IAM policy and a role that allows Lambda function to perform Athena CUR query and deliver processed CUR report via SES. Log into IAM console, click on Policies and click on Create Policy: Click on the JSON tab, modify the following policy, replacing the your-cur-query-results-bucket string. Make sure you add &ldquo;*&rdquo; at the end of the bucket name so the whole bucket is writable:</description>
</item>
<item>
<title>Create an IAM Policy to restrict EC2 usage by family</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/3_ec2_restrict_family/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/3_ec2_restrict_family/</guid>
<description>AWS offers different instance families within EC2. Depending on your workload requirements - different types will be most cost effective. For non-specific environments such as testing or development, you can restrict the instance families in those accounts to the most cost effective generic types. It is also an effective way to increase Savings Plan or Reserved Instance utilization, by ensuring these accounts will consume any available commitment discounts. We will create a policy that allows operations on specific instance families only.</description>
</item>
<item>
<title>Create and implement an AWS Budget for EC2 Savings Plan coverage</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/3_budget_spcoverage/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/3_budget_spcoverage/</guid>
<description>We will create a monthly savings plan coverage budget, which will notify if the coverage of Savings Plan for EC2 is below the specified amount. You should not set an arbitrary limit for the alarm, (i.e. alarm if coverage is less than 80%) instead select your current level of coverage - so if coverage reduces, you can act and increase coverage if required. From the Budgets dashboard in the console, click Create budget: Select Savings Plans budget, and click Next: Create a cost budget, enter the following details:</description>
</item>
<item>
<title>Create and Test User Role</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/3_user_role/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/3_user_role/</guid>
<description>3.1 Create User Role While you are still assuming the developer-restricted-iam role you created in the previous step, create a new user role with the boundary policy attached and name it with the prefix. We will use AWS managed policies for this user role, however the createrole-restrict-region-boundary policy will allow us to create and attach our own policies, only if they have a prefix of app1. Verify that you are Using the developer role previously created by checking the top bar it should look like and open the IAM console at https://console.</description>
</item>
<item>
<title>Create Application Load Balancer with WAF integration</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_basic_ec2_with_waf_protection/3_create_alb_with_waf/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_basic_ec2_with_waf_protection/3_create_alb_with_waf/</guid>
<description>Using the AWS Management Console, we will create an Application Load Balancer, link it to the AWS WAF ACL we previously created and test. 3.1 Create Application Load Balancer Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/. From the console dashboard, choose Load Balancers from the Load Balancing section. Click Create Load Balancer. Click Create under the Application Load Balancer section. Enter Name for Application Load Balancer such as lab-alb.</description>
</item>
<item>
<title>Create Athena Saved Queries to Write new Data</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/3_athena_queries/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/3_athena_queries/</guid>
<description>Next we setup your recurring Athena queries. These will run each time a new CUR file is delivered, separate out the information for the sub accounts, and write it to the output S3 location. These queries will be very similar to the one above, except it will only extract data for the current month. You must write one query for the extraction of the data, which will create a temporary table, and then a second query to delete the table.</description>
</item>
<item>
<title>Create bucket policy for the S3 bucket in account 2</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/3_create_bucket_policy/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/3_create_bucket_policy/</guid>
<description>In account 2 sign in to the S3 Management Console as an IAM user or role in your AWS account, and open the S3 console at https://console.aws.amazon.com/s3 Click on the name of the bucket you will use for this workshop Go to the Permissions tab Click Bucket Policy Enter the following JSON policy Replace account1 with the AWS Account number (no dashes) of account 1</description>
</item>
<item>
<title>Create Lambda in account 1</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_iam_role_assumption/3_create_lambda_acct_1/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_iam_role_assumption/3_create_lambda_acct_1/</guid>
<description>Open the Lambda console. Click Create a function. Accept the default Author from scratch. Enter function name as Lambda-Assume-Roles. Select Python 3.6 runtime. Expand Permissions, click Use an existing role, then select the Lambda-Assume-Roles role. Click Create function. Replace the example function code with the following, replacing the RoleArn with the one from account 2 you created previously.</description>
</item>
<item>
<title>Create the Visualizations</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_workload_efficiency/3_visualizations/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_workload_efficiency/3_visualizations/</guid>
<description>We will now create visualizations of our workload effiency. We will add the new dataset, and then build different visualizations to see what exactly impacts efficiency and where to look to improve it. Basic Efficiency visualization We will create a visualization from the application log files. Go into QuickSight Click Manage data: Click New data set: Click Athena: Enter the Data source name: Efficiency, and click Create data source</description>
</item>
<item>
<title>Deploy an Environment Using Infrastructure as Code</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/3_deploy_env_iaac/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/3_deploy_env_iaac/</guid>
<description>Tagging We will make extensive use of tagging throughout the lab. The CloudFormation template for the lab includes the definition of multiple tags against a variety of resources. AWS enables you to assign metadata to your AWS resources in the form of tags. Each tag is a simple label consisting of a customer-defined key and an optional value that can make it easier to manage, search for, and filter resources. Although there are no inherent types of tags, commonly adopted categories of tags include technical tags (e.</description>
</item>
<item>
<title>Deploy The AMI Builder Pipeline</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/3_deploy_the_ami_builder_pipeline/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/3_deploy_the_ami_builder_pipeline/</guid>
<description>In this section we will be building our Amazon Machine Image Pipeline leveraging EC2 Image Builder service. EC2 Image Builder is a service that simplifies the creation, maintenance, validation, sharing, and deployment of Linux or Windows Server images for use with Amazon EC2 and on-premises. Using this service, eliminates the automation heavy lifting you have to build in order to streamline the build and management of your Amazon Machine Image.</description>
</item>
<item>
<title>Download your Monthly Report CSV</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_4_cost_and_usage_analysis/3_cost_usage_download/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_4_cost_and_usage_analysis/3_cost_usage_download/</guid>
<description>It is possible to download a Monthly Report of your estimated AWS charges from the Bills page of the Billing and Cost Management console of your Management Account. This is typically used by customers looking to analyze their costs in a spreadsheet format with ease of use. This is part of a legacy feature called &ldquo;Detailed Billing Reports&rdquo;, but is used across many organizations for bill validations. If this is already enabled in your account you will be able to immediately download your monthly usage file and view it.</description>
</item>
<item>
<title>Enable Additional Guardrails</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/3_additional_guardrails/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/3_additional_guardrails/</guid>
<description>Control Tower guardrails Control Tower includes a number of guardrails to help improve your security posture. These guardrails are either preventative or detective. Preventative guardrails limit some actions and are implemented through AWS Organizations service control policies and are either enforced or not enabled. Detective guardrails detect resources in your landing zone which are in a noncompliant state. These are implemented via AWS Config] and show resources that are either clear, in violation or not enabled.</description>
</item>
<item>
<title>Explore the Web Application</title>
<link>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/3_explore_webapp/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/3_explore_webapp/</guid>
<description>Go to the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation. Wait until CloudFormationLab stack status is CREATE_COMPLETE before proceeding. This should take about four minutes Click on the CloudFormationLab stack Click on the Outputs tab For the Key WebsiteURL copy the value. This is the URL of your test web service Hint: it will end in &lt;aws region&gt;.elb.amazonaws.com Click the URL and it will bring up the website:</description>
</item>
<item>
<title>Implement deep health checks</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/3_deep_healthcheck/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/3_deep_healthcheck/</guid>
<description>3.1 Re-enable the dependency service For the next part of the lab restore access to the getRecommendation API on the RecommendationService Return to the AWS Systems Manager &gt; Parameter Store on the AWS Management Console Set the value of RecommendationServiceEnabled back to true and Save changes Confirm the web service is now returning &ldquo;personalized&rdquo; recommendations again 3.2 Inject fault on a single server Previously you simulated a failure of the service dependency.</description>
</item>
<item>
<title>Performing a review</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/3_perform_review/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/3_perform_review/</guid>
<description>From the detail page for the workload, click the Start reviewing button, then select the AWS Well-Architected Framework to review: In this walkthrough, we are only going to complete the Reliability Pillar questions. Collapse the Operational Excellence questions by selecting the collapsing icon on the left of the words Operation Excellence on the left: Expand the Reliability Questions by selecting the expanding icon to the left of the word Reliability: Select the first question: REL 1.</description>
</item>
<item>
<title>Prioritizing Rightsizing Recommendations</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/3_prio_resource_opt/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/3_prio_resource_opt/</guid>
<description>Prioritizing Rightsizing Recommendations Now that you understand how AWS Cost Explorer Rightsizing recommendations work let&rsquo;s run an example and find how to prioritize quick wins. Download your Rightsizing Recommendations Select Download CSV to download your Rightsizing recommendations report If you don’t have any Rightsizing recommendations, download and use this Sample Rightsizing recommendations file (.csv) data for the lab. Filter your Rightsizing Recommendations Let’s filter out instances that are either too small or were only running for a few hours since the analysis was made.</description>
</item>
<item>
<title>Setup QuickSight Dashboard</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/3_quicksight_setup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/3_quicksight_setup/</guid>
<description>We will now setup the QuickSight dashboard to visualize your usage by cost, and setup the analysis to provide Savings Plan recommendations. Go to the QuickSight service: Click on Manage data: Click on New data set: Click Athena: Enter a Data source name of SP_Usage and click Create data source: Select the costmaster database, and the sp_usage table, click Select: Ensure SPICE is selected, click Visualize: Click on QuickSight to go to the home page: Click on Manage data: Select the sp_usage Dataset: Click Schedule refresh: Click Create: Enter a schedule, it needs to be refreshed daily, and click Create: Click Cancel to exit: Click the x in the top corner: You now have your data set setup ready to create a visualization.</description>
</item>
<item>
<title>Share your Analysis and Dashboard</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_5_cost_visualization/3_share_analysis/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_5_cost_visualization/3_share_analysis/</guid>
<description>Now that your QuickSight Analysis is complete, it is time to share the Analysis or publish a Dashboard. An Analysis is a read and write copy of the Visuals and Data Set that you created. A dashboard is a read-only version, allowing the user to apply filters but not make any changes to the Visuals or Data Set. Share an analysis To share an analysis, click on Share on the top right, then select Share analysis: Share with Authors and Admins in your QuickSight account by searching by email address.</description>
</item>
<item>
<title>Sort and filter the RI CSV files</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_3_pricing_models/3_filter_csv/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_3_pricing_models/3_filter_csv/</guid>
<description>RI purchases should be done frequently (bi-weekly or monthly), so for each cycle we want: low risk and high return purchases, and purchase the top 50-75% of those high quality recommendations. This will ensure you have sufficiently high coverage, while minimizing the risk of unused RIs. Filter out low risk, and high return RIs To get the lowest risk, we sort by Fully Paid Day smallest to largest, as these will be fully paid off in the shortest amount of time.</description>
</item>
<item>
<title>Store the CloudWatch Config File in Parameter Store</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/3_create_cw_config/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/3_create_cw_config/</guid>
<description>3. Create the CloudWatch Config File with Parameter Store You will use Parameter Store, a tool in Systems Manager, to store the CloudWatch agent configuration. Parameter store allows you to securely store configuration data and secrets for reusability. You can re-use configuration data that is well controlled and consistent. In this case, you need to store the configuration file for CloudWatch Agent on your EC2 instance. The CloudWatch agent configuration data specifies which logs and metrics will be sent to CloudWatch as well as the source of this data.</description>
</item>
<item>
<title>Structure of a custom lens - Risk and Rule</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/3_ddb_config_options_risks/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/3_ddb_config_options_risks/</guid>
<description>Choices for question and the log for Risk level: In the previous step, we setup a question and the best pracitices. We collected all the necessary resources like developer guide and blog posts as guidance reference. Our next step is to create a logical rule for these options to indicate the risk level if the best practices was not applied. Rule Collections Referencing the Custom Lenses Format Specification, we can see all the &ldquo;riskRules&rdquo; are combinations of &ldquo;choice id&rdquo; and operators -</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_detective_controls/3_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_detective_controls/3_cleanup/</guid>
<description>The following instructions will remove the resources that have a cost for running them. Note: If you are planning on doing the lab 300_Incident_Response_with_AWS_Console_and_CLI we recommend you only tear down this stack after completing that lab as their is a dependency on AWS CloudTrail being enabled for the other lab. Delete the stack: Sign in to the AWS Management Console, and open the CloudFormation console at https://console.aws.amazon.com/cloudformation/. Select the DetectiveControls stack.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_iam_groups_and_roles/3_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_iam_groups_and_roles/3_cleanup/</guid>
<description>The following instructions will remove the resources that have a cost for running them. Please note that the changes you made to the root login, users, groups, and policies have no charges associated with them. Delete the IAM stack: Sign in to the AWS Management Console, and open the CloudFormation console at https://console.aws.amazon.com/cloudformation/. Select the baseline-iam stack. Click the Actions button then click Delete Stack. Confirm the stack and then click the Yes, Delete button.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_web_application_firewall/3_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_web_application_firewall/3_cleanup/</guid>
<description>The following instructions will remove the resources that have a cost for running them. Please note that Security Groups and SSH key will exist. You may remove these also or leave for future use. Delete the CloudFront distribution: Open the Amazon CloudFront console at https://console.aws.amazon.com/cloudfront/home. From the console dashboard, select the distribution you created earlier and click the Disable button. To confirm, click the Yes, Disable button. After approximately 15 minutes when the status is Deployed, select the distribution and click the Delete button, and then to confirm click the Yes, Delete button.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_updates_and_ingestion/3_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_updates_and_ingestion/3_cleanup/</guid>
<description>Delete the Glue database, select the database name, click Action and click Delete database: Delete the CloudFormation stack, select the stack, click Actions and click Delete stack: function prevStep(){ window.open("..\/2_multiple_curs\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Congratulations! Now that you have completed the lab, if you have implemented this knowledge in your environment, you should re-evaluate the questions in the Well-Architected tool.</description>
</item>
<item>
<title>Test bi-directional cross-region replication (CRR)</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/3_test_replication/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/3_test_replication/</guid>
<description>To test bi-directional replication using the two rules your created, you will upload another object into each of the east and west S3 buckets and observe it is replicated across to the other bucket. For this step you will need two more test objects: These are files that you will upload into each S3 bucket. They should not be too big, as this will increase the time to upload it from your computer.</description>
</item>
<item>
<title>Test Resiliency Using Failure Injection</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_for_resiliency_of_ec2/3_failure_injection/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_for_resiliency_of_ec2/3_failure_injection/</guid>
<description>Failure injection (also known as chaos testing) is an effective and essential method to validate and understand the resiliency of your workload and is a recommended practice of the AWS Well-Architected Reliability Pillar. Here you will initiate various failure scenarios and assess how your system reacts. Preparation Before testing, please prepare the following: Region must be the one you selected when you deployed your WebApp We will be using the AWS Console to assess the impact of our testing</description>
</item>
<item>
<title>Test Role</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/3_test_role/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/3_test_role/</guid>
<description>3.1 Assume ec2-admin-team-alpha Role Now you will use an existing IAM user with MFA enabled to assume the new ec2-admin-team-alpha role. Sign in to the AWS Management Console as an IAM user with MFA enabled. https://console.aws.amazon.com. In the console, click your user name on the navigation bar in the upper right. It typically looks like this: username@account_ID_number_or_alias then click Switch Role. Alternatively you can paste the link in your browser that you recorded earlier.</description>
</item>
<item>
<title>View your Savings Plan coverage</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/3_sp_coverage/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/3_sp_coverage/</guid>
<description>You can view your Savings Plan coverage to look for anomalies or changes in coverage. In Cost Explorer, click on Saved reports on the left: Click on Coverage report: You can see the coverage is 0%: Scroll down to the table, click on the arrow next to On-demand spend to sort from the largest spend to the lowest. This helps show your opportunity for cost savings: function prevStep(){ window.</description>
</item>
<item>
<title>Cost Effective Resources</title>
<link>https://wellarchitectedlabs.com/cost/costeffectiveresources/</link>
<pubDate>Mon, 20 Apr 2020 22:31:40 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/costeffectiveresources/</guid>
<description>About cost effective resources Using the appropriate services, instances and resources for your workload is key to cost savings. A well-architected workload uses the most cost-effective resources, which can have a significant and positive economic impact. You also have the opportunity to use managed services to reduce costs. AWS offers a variety of flexible and cost-effective pricing options to acquire instances from EC2 and other services in a way that best fits your needs.</description>
</item>
<item>
<title>Monitor Cost and Usage</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/3_monitor_cost_usage/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/3_monitor_cost_usage/</guid>
<description>Monitor Cost and Usage Allocate costs based on workload metrics Measure efficiency Goal: Measure workload efficiency Target: Within 6 months all Tier1 workloads must have efficiency dashboards, within 12months all Tier2 workloads must have efficiency dashboards. Best Practice: Allocate costs based on workload metrics Measures: % of workloads with dashboards Good/Bad: Good Why? When does it work well or not?: Ensures the organization is focusing on the correct metric (efficiency), and not the bill.</description>
</item>
<item>
<title>Review Estimate</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/3_review_estimate/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/3_review_estimate/</guid>
<description>Review Estimate Review the overall costs (for all 3 services) in the My Estimate page. Pricing Calculator provides total cost for first 12 months. If needed, you can edit/delete the configuration of the services added by clicking on the Action button in each service tile. function prevStep(){ window.open("..\/2_add_service_alb\/", "_self") } function nextStep(){ window.open("..\/4_export_estimate\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Lab complete! Now that you have completed this lab, make sure to update your Well-Architected review if you have implemented these changes in your workload.</description>
</item>
<item>
<title>Dive deep into detected cost anomaly</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/3_investigate_anomaly/</link>
<pubDate>Mon, 13 Mar 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/3_investigate_anomaly/</guid>
<description>In this section, we will walk you through the steps to analyze anomalies detected by Cost Anomaly Detection service and investigate the associated root cause. For demonstration, screenshots from a test AWS account are used in this section. Note that anomaly detection leverages historical data and machine learning mechanisms to identify unusual spend. This means that anomalies are specific to individual use cases. For example, $10 increase in daily spend for an AWS account that has a historical daily spend pattern of around $5 is a sharp increase and an unusual trend, whereas the same increase for an AWS account that has a historical daily spend pattern of around $500 is not significant and might not be considered unusual.</description>
</item>
<item>
<title>Create Cost Categories</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/4_create_cost_categories/</link>
<pubDate>Sun, 12 Feb 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/4_create_cost_categories/</guid>
<description>Overview AWS Cost Categories is a feature within AWS Cost Management product suite that enables you to group cost and usage information into meaningful categories based on your needs. You can create custom categories and map your cost and usage information into these categories based on the rules defined by you using various dimensions such as account, tag, service, charge type, and even other cost categories. Once cost categories are set up and enabled, you will be able to view your cost and usage information by these categories starting at the beginning of the month in AWS Cost Explorer, AWS Budgets, and AWS Cost and Usage Report (CUR).</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_ec2_scheduling_at_scale/4_cleanup/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_ec2_scheduling_at_scale/4_cleanup/</guid>
<description>In this section you will delete all resources related to the lab environment. Deleting the IAM role created by the CloudFormation Stack Click this link to go the the IAM console. In the search box, type walab-l200-scheduling-sample-env. Then, select the role and click on the Delete button. Confirm deletion in the pop-up window. Cleaning up the rest of the CloudFormation Stack resources Click this link to go to CloudFormation in us-east-1 region.</description>
</item>
<item>
<title>Test the Change Process with Simulated Service Event</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/4_test_change_process_with_simulated_service_event/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/4_test_change_process_with_simulated_service_event/</guid>
<description>In most of cases there&rsquo;s no active AWS service events when you executed the Change Request. In this section, we will simulate AWS service events by retrieving the closed service events through calling the AWS Health API. This action has been defined in the Automation runbook AWS_health_aware_event_simulated_runbook. With this simulation, you can observe the Change Request process will automatically check the AWS service health status, and suspend the operation change process when there&rsquo;s active service event.</description>
</item>
<item>
<title>Row Level Security</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/4_rowlevelsecuirty/</link>
<pubDate>Wed, 16 Nov 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/4_rowlevelsecuirty/</guid>
<description>Last Updated November 2022 Authors Stephanie Gooch, Sr. Commercial Architect, AWS OPTICS Veaceslav Mindru, Sr. Technical Account Manager, AWS Introduction Cloud Intelligence Dashboards (CID) helps you to visualize and understand AWS cost and usage data in your organization by exploring interactive dashboards. However, in order to maintain least privilege principle, customers who use CID at scale of organization often would like to provide their users access only to the data for linked accounts which they own.</description>
</item>
<item>
<title>SSO Application</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/5_sso/</link>
<pubDate>Wed, 16 Nov 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/customizations/guides/5_sso/</guid>
<description>Last Updated December 2022 Authors Veaceslav Mindru, Sr. Technical Account Manager, AWS Stephanie Gooch, Sr. Commercial Architect, AWS OPTICS Introduction Cloud Intelligence Dashboards (CID) helps you to visualize and understand AWS cost and usage data in your organization by exploring interactive dashboards. To simplify access for users you can now set up an SSO application for them to enter into. We recommend combining this with the Row Level Security customization to ensure they see the data they really matters to them.</description>
</item>
<item>
<title>Test Resiliency Using EC2 Failure Injection</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/4_failure_injection_ec2/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/4_failure_injection_ec2/</guid>
<description>4.1 EC2 failure injection This failure injection will simulate a critical problem with one of the three web servers used by your service. In Chaos Engineering we always start with a hypothesis. For this experiment the hypothesis is: Hypothesis: If one EC2 instance dies, then availability will not be impacted [Optional] Before starting, view the deployment machine in the AWS Step Functions console to verify the deployment has reached the stage where you can start testing:</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_manage_workload_risks_with_opscenter/4_cleanup/</link>
<pubDate>Tue, 31 Aug 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_manage_workload_risks_with_opscenter/4_cleanup/</guid>
<description>The following instructions will remove the resources that you have created in this lab. Cleaning up the CloudFormation Stack Sign in to the AWS Management Console and navigate to the AWS CloudFormation console - https://console.aws.amazon.com/cloudformation/ Select the stack WA-risk-management, and delete the stack. Cleaning up Lambda functions Sign in to the AWS Management Console and navigate to the AWS CloudFormation console - https://console.aws.amazon.com/lambda/ Select the wa-risk-tracking function, click on Actions and Delete.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_vpc_flow_logs_analysis_dashboard/4_teardown/</link>
<pubDate>Mon, 26 Jul 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_vpc_flow_logs_analysis_dashboard/4_teardown/</guid>
<description>To perform a teardown for this lab, perform the following steps: Delete QuickSight dashboard, Athena dataset Go to the AWS CloudFormation console: https://console.aws.amazon.com/cloudformation Select the CloudFormation stack you crated with below template to delete and click Delete Parquet: vpc_flowlogs_quicksight_multi_view_template.yaml CSV: vpc_flowlogs_quicksight_template.yaml In the confirmation dialog, click Delete stack The Status changes to DELETE_IN_PROGRESS Click the refresh button to update and status will ultimately progress to DELETE_COMPLETE When complete, the stack will no longer be displayed.</description>
</item>
<item>
<title>Application layer defence</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/4_application_layer_defence/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/4_application_layer_defence/</guid>
<description>In this section we will tighten security using AWS WAF further to mitigate the risk of vulnerabilities such as SQL Injection, Distributed denial of service (DDoS) and other common attacks. WAF allows you to create your own custom rules to decide whether to block or allow HTTP requests before they reach your application. 4.1. Identify the risk of vulnerabilities. A SQL Injection attack consists of insertion of a SQL query via the input data to the application.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/4_teardown/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedpartners/100_labs/100_automating_serverless_best_practices_with_dashbird/4_teardown/</guid>
<description>The following steps will remove the services which are deployed in the lab. 1. Delete CloudFormation stacks Go to aws-well-architected-labs/static/wapartners/100_Automating_Serverless_Best_Practices_with_Dashbird/Code/oncall-health-sample-app directory path and run teardown_script.sh. cd aws-well-architected-labs/static/wapartners/100_Automating_Serverless_Best_Practices_with_Dashbird/Code/oncall-health-sample-app bash teardown_script.sh END OF SECTION 4</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_8_tag_policies/4_teardown/</link>
<pubDate>Thu, 20 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_8_tag_policies/4_teardown/</guid>
<description>The following resources were created in this lab: Created a Tag Policy (Cost Allocation) Created Tagged and Untagged EC2 Resources Navigate to the AWS Organizations service using the navigation bar and click the link for the account in which you applied the policy Select “Policies” beneath the Account details box. Underneath Tag policies, within “Attached policies” you should see the name of the tag policy you created.</description>
</item>
<item>
<title>Step 4 - Limit Network Access</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/4_limit_network_access/</link>
<pubDate>Tue, 11 May 2021 01:55:07 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/4_limit_network_access/</guid>
<description>In this exercise we will use AWS Trusted Advisor&rsquo;s basic security checks to identify remote access risks associated with the EC2 instance and fix them. Furthermore, we will use AWS Systems Manager&rsquo;s feature to secure our remote access. Note: For this lab, it is assumed that Microsoft Windows based EC2 instance is already created with default settings. For instructions to create EC2 Instance please follow the link. From the AWS console, click Services and select Trusted Advisor.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_4_cost_and_usage_analysis/4_teardown/</link>
<pubDate>Mon, 10 May 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_4_cost_and_usage_analysis/4_teardown/</guid>
<description>If you&rsquo;d like to disable the Monthly Reports, please follow the following steps: Disabling Monthly Reports Go to the billing dashboard: Click on the Billing Preferences from the left menu: Click Detailed Billing Reports [Legacy] and uncheck the box. Then Click Save Preferences. If you configured Save to S3 Bucket you can delete either the bucket or files to prevent any further charges.</description>
</item>
<item>
<title>Deploying Sample Lambda application along with Well-Architected review</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/4_deploying_sample_lambda_app/</link>
<pubDate>Thu, 25 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/4_deploying_sample_lambda_app/</guid>
<description>The CloudFormation template that accompanies this lab requires the ability to create IAM Roles and AWS Lambda functions. If the account you are using does not have these capabilities, you will not be able to complete this lab. Deploy Sample Application CloudFormation Template Download the SampleLambdaAPIGWDeploy.yaml CloudFormation template to your machine. For this lab, you will need to use us-east-2 Go to the AWS CloudFormation console at https://console.</description>
</item>
<item>
<title>Visualize the workload data</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/4_visualize/</link>
<pubDate>Wed, 24 Mar 2021 15:16:08 +1000</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/4_visualize/</guid>
<description>Now that you can query your data in Amazon Athena, you can use Amazon QuickSight to visualize the results. Grant Amazon QuickSight access to Amazon Athena and your S3 bucket First, grant Amazon QuickSight access to the S3 bucket where your Well-Architected data is stored. Sign in to the Amazon QuickSight console. In the upper right corner of the console, choose Admin/username, and then choose Manage QuickSight Choose Security and permissions.</description>
</item>
<item>
<title>Test Restore</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/4_test_restore/</link>
<pubDate>Sun, 21 Feb 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/4_test_restore/</guid>
<description>A backup of a data source is useful only if data can be restored from it. If backups aren&rsquo;t tested, you might find yourself in a situation where your workload has been impacted by an event and you need to recover data from your backups, but the backups are faulty and restoring data is not possible, or exceeds your RTO. To avoid such situations, backups taken should always be tested to ensure they can be used to recover data.</description>
</item>
<item>
<title>Optional Steps</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/trusted-advisor-dashboards/dashboards/4_update-dashboard/</link>
<pubDate>Wed, 10 Feb 2021 11:43:22 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/trusted-advisor-dashboards/dashboards/4_update-dashboard/</guid>
<description>Add new TA Organizational view report By default Trusted Advisor (TA) refreshes checks on weekly basis. We recommend to use Automated Data Collection Method to get historical progress and trends visualized on TAO Dashboard. However if you decided to use manual data collection you need to upload new TA Organizational View reports regularly, for example bi-weekly or monthly Create Organizational View report For the step by step guide please follow the documentation</description>
</item>
<item>
<title>Performing a data-driven review</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/4_perform_review/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/4_perform_review/</guid>
<description>As you can see from the following diagram, you will see data in Notes under COST 6 in the Well-Architected Tool. Note: If there was no data in Notes, ensure that you had attached the same tags to workload and EC2 instances. We have data availabe in Notes, we will review the question COST 6. Defining a workload generates an API event called CreateWorkload that Amazon EventBridge receives, invoking the AWS Lambda function that collects cost optimization data.</description>
</item>
<item>
<title>Saving a milestone</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/4_save_milestone/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/4_save_milestone/</guid>
<description>Overview A milestone records the state of a workload at a particular point in time. Save a milestone after you initially complete all the questions associated with a workload. As you change your workload based on items in your improvement plan, you can save additional milestones to measure progress. A best practice is to save a milestone when you first do a new W-A review, or every time you make improvements to a workload.</description>
</item>
<item>
<title>Impact of failures with sharding</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/4_impact_of_failures_sharding/</link>
<pubDate>Mon, 07 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/4_impact_of_failures_sharding/</guid>
<description>Break the application You will now introduce the poison pill into the workload by including the bug query-string with your requests and see how the updated workload architecture handles it. As in the previous case, imagine that customer Alpha triggered the bug in the application again. Include the query-string bug with a value of true and make a request as customer Alpha. The modified URL should look like this - http://shuffle-alb-1p2xbmzo541rr-1602891463.</description>
</item>
<item>
<title>Add metrics to Dashboard</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/4_adding_metrics_to_dashboard/</link>
<pubDate>Tue, 01 Dec 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/4_adding_metrics_to_dashboard/</guid>
<description>Now that we have a dashboard for our Linux EC2 instance, we can add an additional metric for available memory. Let&rsquo;s add a new widget to our CloudWatch Dashboard. Click on the &ldquo;Add Widget&rdquo; button in the upper right corner. Click Line, then next Click Metrics and then Configure Select &ldquo;PerfLab&rdquo; under Custom Namespaces and then select the second metric group “ImageId, InstanceId, InstanceType” Make sure to search only for the InstanceId if you have multiple machines reporting metrics Find the “mem_used” and &ldquo;mem_total&rdquo; and click the check box next to it Click on “Graphed Metrics (2)” and then select “5 seconds” as the period Click on Create widget You should now see two widgets on your Dashboard You can drag the widgets around the screen and re-size them if you wish You can also change the time period, select 1h to show just the most recent metrics You can also set the auto-refresh rate for the Dashboard by using this pull-down.</description>
</item>
<item>
<title>Add metrics to Dashboard</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/4_adding_metrics_to_dashboard/</link>
<pubDate>Thu, 19 Nov 2020 12:00:00 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/4_adding_metrics_to_dashboard/</guid>
<description>Now that we have a dashboard for our Windows EC2 instance, we can add an additional metric for available memory. Let&rsquo;s add a new widget to our CloudWatch Dashboard. Click on the &ldquo;Add Widget&rdquo; button in the upper right corner. Click Line, then next Click Metrics and then Configure Select CWAgent and then select the second metric group &ldquo;ImageId, InstanceId, InstanceType, objectname&rdquo; Make sure to search only for the InstanceId if you have multiple machines reporting metrics Find the &ldquo;Memory available Mbytes&rdquo; and click the check box next to it.</description>
</item>
<item>
<title>Baseline Sustainability KPIs</title>
<link>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/3_baseline_sustainability_kpi/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/3_baseline_sustainability_kpi/</guid>
<description>Let’s baseline the metrics which we can use to measure sustainability improvement once workload optimization is completed. In this section, we will identify: The metric to monitor the total number of VCPUs which we can use as a proxy metric for sustainability. The business outcome metric (number of API calls served). The Sustainability KPI (resources provisioned per unit of work). You will learn more about the following design principles in the AWS Well-Architected Sustainability Pillar:</description>
</item>
<item>
<title>Lab 1 - Change Database Instance Type</title>
<link>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/3-1_change_instance_type_and_restart/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/3-1_change_instance_type_and_restart/</guid>
<description>Migration Methodologies Preparation Lab 1 - Change Database Instance Type Lab 2 - Promote Read Replica Lab 3 - Failover to Read Replica Lab 4 - Restore from snapshot Cleanup Overview In this lab you will take the RDS MySQL database that was created in the Preparation step, and migrate it from the x86-64 instance it was built on, to a Graviton based instance. This migration method works for all RDS databases that support AWS Graviton, including Amazon Aurora.</description>
</item>
<item>
<title>Prepare Amazon Redshift Consumer Cluster</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/3_prepare_redshift_consumer_cluster/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/3_prepare_redshift_consumer_cluster/</guid>
<description>Lab 3 Now, let’s create the consumer Amazon Redshift cluster (we will refer this as consumer cluster throughout the lab) in us-west-1 region, and remember, we will not load the sample dataset in this cluster. Step-1: Create Redshift Consumer Cluster Login into AWS Console (make sure us-west-1 region is selected in top right corner), and click Create Cluster. Provide Cluster name as redshift-cluster-west, and select ra3.xlplus node type.</description>
</item>
<item>
<title>Query your Amazon S3 usage by storage class</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/1-3_query_s3_usage_by_class/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/1-3_query_s3_usage_by_class/</guid>
<description>Lab 1.3 In the previous steps, you learned how you can run SQL queries on your AWS Cost &amp; Usage Report data with Amazon Athena. In this step you will learn how you can aggregate the usage data by type and AWS account. This way you can calculate proxy metrics for sustainability and Key Performance Indicators (KPI) of your application teams. Let&rsquo;s query the cur_hourly table we just created to get the Amazon S3 storage by account and storage class.</description>
</item>
<item>
<title>Utilize Data</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/4_utilize_data/</link>
<pubDate>Wed, 21 Oct 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/4_utilize_data/</guid>
<description>Utilizing Your Data Now you have pulled together optimization data there different ways in which you can analyze and visualize it and use to make infrastructure optimization decisions Visualization of Trusted Advisor data with Amazon QuickSight You can visualize Trusted Advisor Data with TAO Dashboard. To deploy TAO Dashboard please follow TAO Dashboard deployment steps and specify organizational data collection bucket created in this lab as a source Visualization of Compute Optimizer data with Amazon QuickSight You can visualize Compute Optimizer Data with Compute Optimizer Dashboard.</description>
</item>
<item>
<title>Test Fail Condition</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/4_test_fail_condition/</link>
<pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/4_test_fail_condition/</guid>
<description>Now that an alarm has been created to alert and send out notifications when the external service is experiencing an outage, it is time to test it. To do this, an outage can be simulated so that the external service is no longer able to write data into S3. This can be achieved in a few different ways. These are also a few different failure modes for the dependent service, which could cause the Lambda function to not get invoked.</description>
</item>
<item>
<title>Compute</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/compute/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/compute/</guid>
<description>These are queries for AWS Services under the Compute product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run. For example, if your CUR table is called cur_table and is in a database called cur_db, you would replace ${table_name} with cur_db.</description>
</item>
<item>
<title>Enable Single Sign On (SSO)</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/4_configure_sso/</link>
<pubDate>Sun, 16 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/4_configure_sso/</guid>
<description>After completing Account Structure instructions, please follow steps below to configure SSO. Configure SSO You will create an AWS Organization with the management account. Login to the AWS console as an IAM user with the required permissions, start typing SSO into the Find Services box and click on AWS Single Sign-On: Click Enable AWS SSO: Select Groups: Click Create group: Enter a Group name of Cost_Optimization and a description, click Create group: Click Users: Click Add user: Enter the following details:</description>
</item>
<item>
<title>Distribute Dashboards</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/4_distribute_dashboards/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/4_distribute_dashboards/</guid>
<description>This Lab has moved under the Level 200 Cloud Intelligence Dashboards.Click this link to navigate to the updated Lab Authors Nathan Besh, Cost Lead Well-Architected (AWS) You now have a set of dashboards to provide insight and assist with analysis. The most effective way to allow users to access and work with the dashboards is to create users in QuickSight, and provide access to the dashboard.</description>
</item>
<item>
<title>Tear Down</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_vpc/2_cleanup/</link>
<pubDate>Wed, 22 Jul 2020 01:00:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_vpc/2_cleanup/</guid>
<description>The following instructions will remove the resources that you have created in this lab. Note: If you are planning on completing the lab 200_Automated_Deployment_of_EC2_Web_Application we recommend you only tear down this lab after completing both, as there is a dependency on this VPC. Delete the VPC CloudFormation stack: Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.aws.amazon.com/cloudformation/. Click the radio button on the left of the WebApp1-VPC stack.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_clock_source_performance/4_cleanup/</link>
<pubDate>Tue, 09 Jun 2020 12:00:00 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_clock_source_performance/4_cleanup/</guid>
<description>In this lab, you created two different EC2 instances and tested gettime system calls to each on to test the performance for each clocksource type. You were able to set a new clocksource for a Xen based instance type and see a dramatic improvement in the time it takes for these kinds of system calls. Remove all the resources via CloudFormation In order to remove the lab, go into the CloudFormation console, select the deployed template, click the drop down next to “Create Stack” and then click “Delete Stack”.</description>
</item>
<item>
<title>Add an Amazon S3 Bucket to the Stack</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/4_add_s3/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/4_add_s3/</guid>
<description>In this task, you will gain experience in editing a CloudFormation template and updating your CloudFormation stack Your objective is to deploy a new Amazon S3 bucket 4.1 Edit the CloudFormation template file From the Amazon S3 Template Snippets documentation page, copy the YAML example for Creating an Amazon S3 Bucket with Defaults Edit the simple_stack.yaml file you downloaded earlier to include an Amazon S3 bucket Under the Resources section add the snippet you copied You do not require any Properties for this new S3 bucket resource Indents are important in YAML &ndash; use two spaces for each indent.</description>
</item>
<item>
<title>Automated Deployment of Detective Controls</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_loft_introduction_to_security/4_automated_detective_controls/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_loft_introduction_to_security/4_automated_detective_controls/</guid>
<description>This hands-on lab will guide you through how to use AWS CloudFormation to automatically configure detective controls including AWS CloudTrail and Amazon GuardDuty. You will use the AWS Management Console and AWS CloudFormation to guide you through how to automate the configuration of AWS CloudTrail. Walkthrough Only complete step 2, GuardDuty from: Automated Deployment of Detective Controls</description>
</item>
<item>
<title>Build & Run Remediation Runbook</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/4_build_run_remediation_runbook/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/4_build_run_remediation_runbook/</guid>
<description>In contrast to playbooks, runbooks are procedures that accomplish specific tasks to achieve an outcome. In the previous section, you have identified an issue with CPU utilization, which occurs because there is only 1 ECS task running in the cluster. This could be remediated through the use of auto-scaling. However, implementing this requires preparation and planning. When an incident occurs, operations teams should have a defined escalation path for the issue.</description>
</item>
<item>
<title>CloudWatch Agent Manual Install</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/4_memory_plugin/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/4_memory_plugin/</guid>
<description>There are multiple ways to install the CloudWatch agent. This lab will walk through a manual install on a single instance. Please visit the CloudWatch installation documentation for a comprehensive list of ways to install CloudWatch. On the left bar in the EC2 console, click on Instances and select the EC2 Instance with the CloudWatchAgentServerRole IAM role. Connect into the EC2 Instance using the browser-based SSH connection tool.</description>
</item>
<item>
<title>Configure parameters of function code and upload code to S3</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/4_configure_function_parameters/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/4_configure_function_parameters/</guid>
<description>This step is used to edit parameters (CUR database name and table, SES sender and recipient etc) in the Lambda function code, which is then uploaded to S3 for Lambda execution. Download function code https://d3h9zoi3eqyz7s.cloudfront.net/Cost/AutoCURDelivery.zip to your local disk. This zip file includes: - auto_cur_delivery.py - Lambda function code config.yml - Configuration file package/ - All dependencies, libraries, including pandas, numpy, Xlrd, Openpyxl, Xlsxwriter, pyyaml Unzip config.</description>
</item>
<item>
<title>Configure The Workload Logging and Alarm</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/4_configure_the_workload_logging_and_alarm/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/4_configure_the_workload_logging_and_alarm/</guid>
<description>4.1. We are now going to create a filter within our CloudWatch Log Group. This filter will generate a CloudWatch metric which we will use as to create our alarm. To create your filter, complete the following configuration steps: 4.1.1. Navigate to CloudWatch in your console and click on Log Groups on the side menu. 4.1.2. Locate the pattern1-logging-loggroup you created in the previous section and click on the the log group as shown:</description>
</item>
<item>
<title>Create and implement an AWS Budget Report</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/4_budget_report/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/4_budget_report/</guid>
<description>AWS Budgets Reports allow you to create and send daily, weekly, or monthly reports to monitor the performance of your AWS Budgets. From the Budgets dashboard, Click on Budgets Reports: Click Create budget report: Create a report with the following details: Select all budgets Report frequency: Weekly Day of week: Monday Email recipients: Input your email address Report name: WeeklyBudgets Select the Create budget report button when finished: Your budget report should now be complete: You should receive an email similar to the one below: You have created a budget report.</description>
</item>
<item>
<title>Create Lambda function to run the Saved Queries</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/4_lambda_function/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/4_lambda_function/</guid>
<description>This Lambda function ties everything together, it will remove all objects in the current months S3 folders, find the Athena queries to run, and then execute the saved Athena queries. First we will create the role with permissions for Lambda to use, then the Lambda function itself. 1 - Go to the IAM service dashboard 2 - Create a policy named LambdaSubAcctSplit 3 - Edit the following policy inline with security best practices, and add it to the policy:</description>
</item>
<item>
<title>Create Lambda in account 1</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/4_create_lambda/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/4_create_lambda/</guid>
<description>Open the Lambda console https://console.aws.amazon.com/lambda Click Create a function Accept the default Author from scratch Enter function name as Lambda-List-S3 Select Python 3.7 runtime Expand Permissions, click Use an existing role, then select the Lambda-List-S3-Role Click Create function Replace the example function code with the following Replace bucketname with the S3 bucket name from account 2</description>
</item>
<item>
<title>Create the Recommendation Dashboard</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/4_recommendation_dashboard/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/4_recommendation_dashboard/</guid>
<description>Go to the QuickSight service homepage: Go to the sp_usage analysis: Create a line chart, add line_item_usage_start_date to the X axis, aggregate day. Add spprice to the Value and set the aggregate to min. Drag the product_instance_type to Colour field well. Change the title to Usage in Savings Plan Rates: Click Parameters, and click Create one: Parameter name OperatingSystem, Data type String, click Set a dynamic default: Select your dataset, and select product_operating_system for the columns, click Apply: Click Create: Click Control: Enter OperatingSystem as the display name, style Single select drop down, values Link to a data set field, dataset your data set, column product_operating_system, click Add: Using the process above, Add the parameter Region:</description>
</item>
<item>
<title>Deploy The Build Automation With SSM</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/4_deploy_the_build_automation_with_ssm/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/4_deploy_the_build_automation_with_ssm/</guid>
<description>Now that our AMI Builder Pipeline is built, we can now work on the final automation stage with Systems Manager. In this section we will orchestrate the build of a newly patched AMI and its associated deployment into our application cluster. To automate this activities we will leverage AWS Systems Manager Automation Document. Using our SSM Automation document we will execute the following activities: Automate the execution of the EC2 Image Builder Pipeline.</description>
</item>
<item>
<title>Explore the CloudFormation Template</title>
<link>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/4_explore_cloudformation/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/4_explore_cloudformation/</guid>
<description>In this section you will explore the CloudFormation template and learn how you were able to deploy the web application infrastructure using it Go to the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation Click on the CloudFormation stack that you deployed Click on the Template tab Alternate: You previously downloaded the CloudFormation Template staticwebapp.yaml. You can also view it in the text editor of your choice</description>
</item>
<item>
<title>Extend an IAM Policy to restrict EC2 usage by instance size</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/4_ec2_restrict_size/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/4_ec2_restrict_size/</guid>
<description>We can also restrict the size of instance that can be launched. This can be used to ensure only low cost instances can be created within an account. This is ideal for testing and development, where high capacity instances may not be required. We will extend the EC2 family policy above, and add restrictions by adding the sizes of instances allowed. Extend the EC2Family_Restrict IAM Policy Log on to the console as your regular user with the required permissions, go to the IAM service page: Click on Policies on the left menu: Click on Filter policies, then select Customer managed: Click on EC2_FamilyRestrict to modify it: Click on Edit policy: Click on the JSON tab: Modify the policy by adding in the sizes, add in nano, medium, large, be careful not to change the syntax and not remove the quote characters.</description>
</item>
<item>
<title>Fail open when appropriate</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/4_fail_open/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/4_fail_open/</guid>
<description>4.1 Disable RecommendationService again Confirm the service is healthy Refresh the web service multiple times and note that personalized recommendations are being served from all three servers You will now simulate another complete failure of the RecommendationService. Every request will fail for every request on every server Return to the AWS Systems Manager &gt; Parameter Store on the AWS Management Console Set the value of RecommendationServiceEnabled once again to false and Save changes What is the expected behavior?</description>
</item>
<item>
<title>Inventory Management using Operations as Code</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/4_inventory_mgmt/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/4_inventory_mgmt/</guid>
<description>Management Tools: Systems Manager AWS Systems Manager is a collection of features that enable IT Operations that we will explore throughout this lab. There are set up tasks and pre-requisites that must be satisfied prior to using Systems Manager to manage your EC2 instances or on-premises systems in hybrid environments. You must use a supported operating system Supported operating systems include versions of Windows, Amazon Linux, Ubuntu Server, RHEL, and CentOS The SSM Agent must be installed The SSM Agent for Windows also requires PowerShell 3.</description>
</item>
<item>
<title>Knowledge Check</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/4_knowledge_check/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/4_knowledge_check/</guid>
<description> The security best practices followed in this lab are: Manage credentials and authentication Use of MFA for access to provide additional access control. Grant access through roles or federation: Roles with associated policies have been used to define appropriate permission boundaries. Grant least privileges: The roles are scoped with minimum privileges to accomplish the task.</description>
</item>
<item>
<title>Knowledge Check</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/4_knowledge_check/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/4_knowledge_check/</guid>
<description> The security best practices followed in this lab are: Grant least privileges: The roles are scoped with minimum privileges to accomplish the task.</description>
</item>
<item>
<title>Monitoring and Alerting</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/4_monitoring_and_alerting/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/4_monitoring_and_alerting/</guid>
<description>Lastly, we will setup your foundations for monitoring the security status of your AWS environment and look at how we can build some basic alerting to security incidents. AWS Security Hub gives you a comprehensive view of the security of your account including compliance checks against best practices such as the Centre for Information Security AWS Foundational Benchmark. We will also enable Amazon GuardDuty - a threat detection service which leverages machine learning to detect anomalies across your AWS CloudTrail, Amazon VPC Flow Logs, and DNS logs.</description>
</item>
<item>
<title>Other Rightsizing Tools</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/4_other_rs_tools/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/4_other_rs_tools/</guid>
<description>Other AWS Rightsizing tools Launched during re:Invent 2019, AWS Compute Optimizer is another tool that can help identify EC2 rightsizing opportunities. AWS Compute Optimizer recommends optimal AWS resources for your workloads to reduce costs and improve performance by using machine learning to analyze historical utilization metrics. Over-provisioning resources can lead to unnecessary infrastructure cost and under-provisioning resources can lead to poor application performance. Compute Optimizer helps you choose the optimal Amazon EC2 instance types, including those that are part of an Amazon EC2 Auto Scaling group, as well as optimal Amazon EBS volume configurations, based on your utilization data.</description>
</item>
<item>
<title>Publish my Custom Lens on WA Tool</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/4_ddb_config_publish/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/4_ddb_config_publish/</guid>
<description>Create a Custom Lens In previous steps, we demonstrated how to draft a question and options, collect and link the reference resource to each best practice option and create conditional logic for risk level. We will repeat this process to cover all the questions in the pillar and then again for all the pillars we want to include in our custom lens. Upload to AWS Console and Publish Now we have the full scope of the custom lens in JSON format.</description>
</item>
<item>
<title>Saving a milestone</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/4_save_milestone/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/4_save_milestone/</guid>
<description>From the detail page for the workload, click the Save milestone button: Enter a name for the milestone as AWS Workshop Milestone and click the Save button: Click on the Milestones tab: This will display the milestone and data about it: function prevStep(){ window.open("..\/", "_self") } function nextStep(){ window.open("..\/5_view_report\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Lab complete!</description>
</item>
<item>
<title>Start the CloudWatch Agent</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/4_start_cw_agent/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/4_start_cw_agent/</guid>
<description>Now that your CloudWatch agent is installed on your EC2 Instance, we need to load the configuration file and restart the CloudWatch agent in order to begin collecting logs. This can be done remotely from the Systems Manager console using Run Command. Open the Systems Manager console. Choose Run command from the left side menu under Instances &amp; Nodes. Click Run Command on the page that opens up. In the Command document box, click in the search bar.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_3_pricing_models/4_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_3_pricing_models/4_tear_down/</guid>
<description>There are no resources or configuration items that are created during this workshop. function prevStep(){ window.open("..\/3_filter_csv\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Congratulations! Now that you have completed the lab, if you have implemented this knowledge in your environment, you should re-evaluate the questions in the Well-Architected tool. This lab specifically helps you with COST7 - &ldquo;How do you use pricing models to reduce cost?</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_4_cost_and_usage_analysis/4_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_4_cost_and_usage_analysis/4_tear_down/</guid>
<description>Amazon Athena only charges when it is being used, i.e. data is being scanned - so if it is not being actively queried, there are no charges. There may be some charges from AWS Glue if it is above the free tier limit. As it is best practice to regularly analyze your usage and cost, so there is no teardown for this lab. function prevStep(){ window.open("..\/3_cur_analysis\/", "_self") } function nextStep(){ window.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_5_cost_visualization/4_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_5_cost_visualization/4_tear_down/</guid>
<description>It is best practice to regularly analyze your usage and cost, so you should not tear down this lab unless you have an alternative visualization solution. Delete your Dashboard Go to the QuickSight homepage, and select All dashboards: Click the 3 dots next to the dashboard you created: Click Delete: Click Delete: Delete your Analysis Click on All analyses: Click the 3 dots next to the analysis you created: Click Delete: Click Delete to confirm: Delete the dataset Click on Manage data: Select the dataset: Click Delete data set: Confirm by clicking Delete: function prevStep(){ window.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/100_labs/100_cloudfront_with_s3_bucket_origin/4_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/100_labs/100_cloudfront_with_s3_bucket_origin/4_cleanup/</guid>
<description>The following instructions will remove the CloudFront distribution and S3 bucket created in this lab. Delete the CloudFront distribution: Open the Amazon CloudFront console at (https://console.aws.amazon.com/cloudfront/home). From the console dashboard, select the distribution you created earlier and click the Disable button. To confirm, click the Yes, Disable button. After approximately 15 minutes when the status is Disabled, select the distribution and click the Delete. button, and then to confirm click the Yes, Delete button.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_iam_user_cleanup/2_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_iam_user_cleanup/2_cleanup/</guid>
<description>It is recommended to keep this lab in place to continuously audit your environment. To remove this stack execute: aws cloudformation delete-stack --stack-name IAM-User-Cleanup</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_basic_ec2_with_waf_protection/4_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_basic_ec2_with_waf_protection/4_cleanup/</guid>
<description>The following instructions will remove the resources that have a cost for running them. Please note that Security Groups and SSH key will exist. You may remove these also or leave for future use. Terminate the instance: Sign in to the AWS Management Console, and open the Amazon EC2 console at https://console.aws.amazon.com/ec2/. From the left console instance menu, select Instances. Select the instance you created to terminate. From the Actions button (or right click) select Instance State &gt; Terminate.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_iam_role_assumption/4_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_iam_role_assumption/4_cleanup/</guid>
<description>Remove the lambda function, then roles.</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/4_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/4_cleanup/</guid>
<description>If you are attending an in-person workshop and were provided with an AWS account by the instructor: There is no need to tear down the lab. Feel free to continue exploring. Log out of your AWS account when done. If you are using your own AWS account: You may leave these resources deployed for as long as you want. When you are ready to delete these resources, see the following instructions Empty the S3 buckets You cannot delete an Amazon S3 bucket unless it is empty, so you need to empty the buckets you created.</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_for_resiliency_of_ec2/4_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_for_resiliency_of_ec2/4_cleanup/</guid>
<description>The following instructions will remove the resources that you have created in this lab. If you deployed the CloudFormation stacks as part of the prerequisites for this lab, then delete these stacks to remove all the AWS resources. If you need help with how to delete CloudFormation stacks then follow these instructions to tear down those resources: Delete the WebApp resources Wait for this stack deletion to complete Delete the VPC resources Otherwise, there were no additional new resources added as part of this lab.</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_ec2_web_application/2_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_automated_deployment_of_ec2_web_application/2_cleanup/</guid>
<description>The following instructions will remove the resources that you have created in this lab. Delete the WordPress or Static Web Application CloudFormation stack: Sign in to the AWS Management Console, select your preferred region, and open the CloudFormation console at https://console.aws.amazon.com/cloudformation/. Click the radio button on the left of the WebApp1-WordPress or WebApp1-Static stack. Click the Actions button then click Delete stack. Confirm the stack and then click Delete button.</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_with_waf_protection/4_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_cloudfront_with_waf_protection/4_cleanup/</guid>
<description>The following instructions will remove the resources that have a cost for running them. Please note that Security Groups and SSH key will exist. You may remove these also or leave for future use. Delete the CloudFront distribution: Open the Amazon CloudFront console at https://console.aws.amazon.com/cloudfront/home. From the console dashboard, select the distribution you created earlier and click the Disable button. To confirm, click the Yes, Disable button. After approximately 15 minutes when the status is Deployed, select the distribution and click the Delete button, and then to confirm click the Yes, Delete button.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_workload_efficiency/4_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_workload_efficiency/4_tear_down/</guid>
<description>The follwoing resources were created during this lab and can be deleted: S3 bucket, name starting with costefficiency Glue Classifier WebLogs Glue Crawler ApplicationLogs IAM Role &amp; Policy AWSGlueServiceRole-CostWebLogs Glue Database webserverlogs Crawler CostUsage IAM Role &amp; Policy AWSGlueServiceRole-Costusage Glue Database CostUsage Athena table costusagefiles_workshop.hourlycost Athena table costusagefiles_workshop.efficiency QuickSight dataset efficiency QuickSight Analysis efficiency analysis function prevStep(){ window.open("..\/3_visualizations\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.</description>
</item>
<item>
<title>View your Elasticity</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/4_elasticity/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/4_elasticity/</guid>
<description>NOTE: This exercise requires you have enabled hourly granularity within Cost Explorer, this can be done by following the instructions here - AWS Account Setup, Step 6 - Enable Cost Explorer. There are additional costs to enable this granularity. A key part of cost optimization is ensuring that your systems scale with your usage. This visualization will show how your systems operate over time. Click on Cost Explorer to go back to the default view: Click the down arrow to change the period, select 14D and click Apply: Click on Monthly and change the granularity to Hourly: Click on Bar, then select Line: You will now have in depth insight to how your environment is operating.</description>
</item>
<item>
<title>Visualize your Savings Plan recommendations</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/4_visualize_recommendations/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/4_visualize_recommendations/</guid>
<description>A visualization of your recommendation can be used as a quick double check, and also assist to demonstrate the savings and risks to other job functions. We will use the Cost Explorer hourly granularity feature to visualize Savings Plan recommendations. You need to have this enabled to view hourly usage, and there are associated costs. In the console go to AWS Cost Management by opening Cost Explorer: Click on Recommendations: Select EC2 Instance Savings Plans, 1-year, All upfront and 7 days: If Payer is selected and you see few or no recommendations, select Linked account to display recommendations to the linked accounts within your AWS Organization.</description>
</item>
<item>
<title>Decommission Resources</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/4_decommission_resources/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/4_decommission_resources/</guid>
<description>Decommission resources Decommission resources automatically Goal: Reduce decommission costs of workloads Target: All workloads are to have automatic decommission of non-ephemeral storage resources. Best Practice: Decommission resources automatically Measures: % of workloads with automatic decommission, cost of non-decommissioned resources Good/Bad: Good Why? When does it work well or not?: Reduce cost of manual decommission work Contact/Contributor: costoptimization@amazon.com Goal: Reduce waste Target: Reduce waste by x% Best Practice: Decommission resources Measures: amount of waste removed Good/Bad: Bad Why?</description>
</item>
<item>
<title>Export Estimate</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/4_export_estimate/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/4_export_estimate/</guid>
<description>Export Estimate On the My Estimate page, click on the Action button Click on Export estimate Click on &ldquo;OK&rdquo; This downloads the estimate as a csv file. You can open the csv using a suitable application such as Excel: function prevStep(){ window.open("..\/3_review_estimate\/", "_self") } function nextStep(){ window.open("..\/5_save_share\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Lab complete! Now that you have completed this lab, make sure to update your Well-Architected review if you have implemented these changes in your workload.</description>
</item>
<item>
<title>Cost Efficiency</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/cost_efficiency/</link>
<pubDate>Sun, 09 Apr 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/cost_efficiency/</guid>
<description>These are queries for AWS Services under the AWS Well-Architected Framework Cost Optimization Pillar. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Creating additional alert subscription for individual alerts</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/4_create_individual_alert/</link>
<pubDate>Mon, 13 Mar 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/4_create_individual_alert/</guid>
<description>As discussed in earlier sections of this lab, AWS Cost Anomaly Detection helps users prevent unexpected charges for their AWS accounts. It is achieved by: Anomaly detection using Machine Learning models Alerting users via subscriptions Alert subscriptions are critical as it is a mechanism to notify users of detected anomalies proactively. Weekly or daily summary reports may not be the right choice in situations where users need to react quickly to a notification.</description>
</item>
<item>
<title>Visualize in Cost Explorer</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/5_visualize_in_cost_explorer/</link>
<pubDate>Sun, 12 Feb 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/5_visualize_in_cost_explorer/</guid>
<description>Overview AWS Cost Categories in AWS Cost Explorer provide a flexible way to categorize and analyze your AWS costs. With Cost Categories, you can group your AWS costs into categories that make sense for your organization, such as by department, team, or AWS service. Creating a report with visualization using AWS Cost Categories enables you to gain better visibility into your costs, forecast costs for the next 12 months, and make informed decisions about your AWS usage.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/5_cleanup/</link>
<pubDate>Wed, 30 Nov 2022 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_build_aws_health_aware_operation_change_process/5_cleanup/</guid>
<description>In this section you will delete all resources related to the lab environment. Cleaning up the CloudFormation Resources Click this link to go to CloudFormation. Select the radio button left to the Stack that&rsquo;s been created (e.g. health-stack-02 in this case), and click the Delete button. Click the Delete stack button in the pop-up window. Cleaning up the Systems Manager Resources Go to Change Manager Templates, and click on the wa-ssm-health-aware-lab-template template.</description>
</item>
<item>
<title>Test Resiliency Using RDS Failure Injection</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/5_failure_injection_rds/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/5_failure_injection_rds/</guid>
<description>5.1 RDS failure injection This failure injection will simulate a critical failure of the Amazon RDS DB instance. In Chaos Engineering we always start with a hypothesis. For this experiment the hypothesis is: Hypothesis: If the primary RDS instance dies, then steady state will be maintained. Steady state is defined here as downtime less than one minute. [Optional] Before starting, view the deployment machine in the AWS Step Functions console to verify the deployment has reached the stage where you can start testing:</description>
</item>
<item>
<title>Control access to API</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/5_control_access_to_api/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/5_control_access_to_api/</guid>
<description>In this section we will be building API Access Control with Amazon Cognito. This will extend our architecture to ensure that only identified users are permitted access to the API. 5.1. Identify the risk of vulnerabilities. Even though we have controlled traffic at multiple layers, anyone who knows your CloudFront Domain Name can access your API. Furthermore we do not know who accessed your API, so the owner of the traffic remains anonymous.</description>
</item>
<item>
<title>Step 5 - Apply patches</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/5_apply_patches/</link>
<pubDate>Tue, 11 May 2021 02:06:01 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/5_apply_patches/</guid>
<description>In this exercise we will perform vulnerability scanning and patching on a pre-install EC2 instance, Microsoft based Windows Operating System using Amazon Inspector and AWS Systems Manager respectively. Note: For this lab, it is assumed that Microsoft Windows based EC2 instance is already created. For instructions to create EC2 Instance please follow the link. From the AWS console, click Services and select Amazon Inspector. On the Inspector console click on Get started.</description>
</item>
<item>
<title>Explore Well-Architected Review</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/5_explore_wareview/</link>
<pubDate>Thu, 25 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/5_explore_wareview/</guid>
<description>Explore Well-Architected Review that was created by the sample application Go to the Well-Architected Tool Console and find the workload called &ldquo;APIGWLambda - walabs-api - WALabsSampleLambdaFunction&rdquo;. You will notice that the tool reports that 4 questions have already been answered and lists 3 as High Risks. Click on the Workload link &ldquo;APIGWLambda - walabs-api - WALabsSampleLambdaFunction&rdquo; From here, you can click on the &ldquo;Continue Reviewing&rdquo; and then select &ldquo;AWS Well-Architected Framework&rdquo; drop-down to answer the rest of the questions.</description>
</item>
<item>
<title>Clean up the deployment</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/5_clean_up/</link>
<pubDate>Wed, 24 Mar 2021 15:16:08 +1000</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_building_custom_aws_well-architected_reports_with_amazon_athena_and_amazon_quicksight/5_clean_up/</guid>
<description>This lab presented a simple approach for aggregating the data of the workload reviews into a central data lake repository. It helps teams to analyze their organization’s Well-Architected maturity across multiple AWS accounts and workloads and perform centralized reporting on high-risk issues (HRIs). To clean up from this lab, manually delete the: S3 bucket and the data stored in the bucket, Lambda function, Glue crawler and database, Athena views, and the QuickSight resources.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/5_cleanup/</link>
<pubDate>Sun, 21 Feb 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_testing_backup_and_restore_of_data/5_cleanup/</guid>
<description>The following instructions will remove the resources that you have created in this lab. Cleaning up AWS Backup Resources Sign in to the AWS Management Console and navigate to the AWS Backup console - https://us-east-1.console.aws.amazon.com/backup/home?region=us-east-1#home Click on BACKUP VAULTS from the menu on the left side, and select BACKUP-LAB-VAULT. Under the section BACKUPS, delete all the RECOVERY POINTS. Once all the RECOVERY POINTS have been deleted, delete the Backup Vault by clicking on DELETE on the top right hand corner.</description>
</item>
<item>
<title>Container</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/container/</link>
<pubDate>Fri, 22 Jan 2021 14:56:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/container/</guid>
<description>These are queries for AWS Services under the Container product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run. For example, if your CUR table is called cur_table and is in a database called cur_db, you would replace ${table_name} with cur_db.</description>
</item>
<item>
<title>Rightsizing with AWS Compute Optimizer and Memory Utilization Enabled</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/5_ec2_computer_opt/</link>
<pubDate>Fri, 18 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/5_ec2_computer_opt/</guid>
<description>In order to complete this step, you need to have AWS Compute Optimizer enabled. AWS Compute Optimizer uses machine learning to analyze the configuration and utilization data of your AWS resources. It reports whether your resources are optimal and generates recommendations (findings) to reduce the cost and improve the performance of your workloads. When it comes to EC2 instances there are three types of findings: Over-provisioned. An EC2 instance is considered over-provisioned when at least one of the utilization metrics (CPU, Memory, Network) can be sized down while still meeting the performance requirements of your workload, and when no specification is under-provisioned.</description>
</item>
<item>
<title>(Optional Step) Integrate AWS Compute Optimizer and Trusted Advisor to Another Question</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/5_expand_review/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/5_expand_review/</guid>
<description>Now we understand how to integrate AWS Compute Optimizer and AWS Trusted Advisor checks to review the question COST 6. In this section, we will learn how to add trusted advisor check to provide data for COST 7. Find QuestionID using your WorkloadID You can navigate to the Well-Architected Tool and select the workload created previously to retrieve the WorkloadId. WorkloadID can be found in the Properties Tab as part of the ARN.</description>
</item>
<item>
<title>Viewing and downloading the report</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/5_view_report/</link>
<pubDate>Thu, 17 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/5_view_report/</guid>
<description>Overview You can generate a workload report for a lens. The report contains your responses to the workload questions, your notes, and the current number of high and medium risks identified. 1. Gather pillar and risk data for a workload Using the get-lens-review API, you can retrieve the pillar review summaries for the workload: aws wellarchitected get-lens-review --workload-id &quot;&lt;WorkloadId&gt;&quot; --lens-alias &quot;wellarchitected&quot; This will return a summary of the workload review summaries for each pillar.</description>
</item>
<item>
<title>Implement shuffle sharding</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/5_implement_shuffle_sharding/</link>
<pubDate>Mon, 07 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/5_implement_shuffle_sharding/</guid>
<description>In this section you will update the architectural design of the workload and implement shuffle sharding. Shuffle sharding is a combinatorial implementation of a sharded architecture. With shuffle sharding you create virtual shards with a subset of the capacity of the workload ensuring that the virtual shards are mapped to a unique subset of customers with no overlap. By minimizing the number of Workers a single customer is able to interact with within the workload, and spreading resources in a combinatorial way, you will be able to further reduce the impact of a potential posion pill.</description>
</item>
<item>
<title>Generate CPU and Memory load</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/5_generating_load/</link>
<pubDate>Tue, 01 Dec 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/5_generating_load/</guid>
<description>We have a CloudWatch dashboard to show us CPU and Memory statistics for the deployed EC2 instance. In order to showcase the dashboards, lets add a synthetic load to the machine. Stress For this lab, the EC2 instance will install a utility called stress. This tool is designed to subject your system to a configurable measure of CPU, memory, I/O and disk stress. Stress tools is not installed by default, you will need to install the package in advance:</description>
</item>
<item>
<title>Generate CPU and Memory load</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/5_generating_load/</link>
<pubDate>Thu, 19 Nov 2020 12:00:00 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/5_generating_load/</guid>
<description>We have a CloudWatch dashboard to show us CPU and Memory statistics for the deployed EC2 instance. In order to showcase the dashboards, lets add a synthetic load to the machine. We have 2 PowerShell scripts that have already been deployed to the instance to facilitate this. cpu_stress.ps1 This script will start multiple threads (one per CPU in the machine) to keep the processor busy doing a simple math computation. We set the thread priority to &ldquo;Lowest&rdquo; so it should still allow system processes to continue.</description>
</item>
<item>
<title>Baseline Sustainability KPI</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/4_baseline_sustainability_kpi/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/4_baseline_sustainability_kpi/</guid>
<description>Lab 4 Recall, our sustainability improvement goal is: To eliminate waste, low utilization, and idle or unused resources. To maximize the value from resources you consume. Let’s baseline the metrics which we can use to measure sustainability improvement once workload optimization is completed - in this case, AWS resources provisioned (storage, network traffic) to support the business outcome (number of events). Connect to producer cluster (dev database, public schema) in us-east-1 region, and follow below steps.</description>
</item>
<item>
<title>Install the AWS Cost and Usage Queries from the AWS Serverless Application Repository</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/1-4_queries_from_sar/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/1-4_queries_from_sar/</guid>
<description>Lab 1.4 In the previous steps you&rsquo;ve made the AWS Cost &amp; Usage Report data available to Amazon Athena with a lot of manual steps. In this lab you will use sample code to automate this setup and deploy a set of pre-canned queries automatically. The sample code is packaged and available in the AWS Serverless Application Repository and called AWS Usage Queries (find the source code on GitHub). Let&rsquo;s deploy this from the AWS Serverless Application Repository:</description>
</item>
<item>
<title>Lab 2 - Promote Read Replica</title>
<link>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/3-2_promote_read_replica/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/3-2_promote_read_replica/</guid>
<description>Migration Methodologies Preparation Lab 1 - Change Database Instance Type Lab 2 - Promote Read Replica Lab 3 - Failover to Read Replica Lab 4 - Restore from snapshot Cleanup Overview In this lab you will take the RDS PostgreSQL database that was created in the Preparation step, and create a replica of it on a Graviton instance. The replica can then be promoted from a read replica of the initial database to a new independent database.</description>
</item>
<item>
<title>Reducing idle resources and maximizing utilization</title>
<link>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/4_reducing_idle_resources_and_maximizing_utilization/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/4_reducing_idle_resources_and_maximizing_utilization/</guid>
<description>As per the previous section of the lab, our sustainability improvement goals are: To eliminate waste, low utilization, and idle or unused resources. To maximize the value from resources you consume. This section of the lab will allow you to learn more about the following design principles in the AWS Well-Architected Sustainability Pillar documentation: Maximize utilization Anticipate and adopt new, more efficient hardware and software offerings You will improve the sustainability KPIs by optimizing the following hardware patterns:</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/5_teardown/</link>
<pubDate>Mon, 26 Oct 2020 11:10:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/5_teardown/</guid>
<description>The following resources were created in this lab: CloudFormation stack in the Cost account - OptimizationDataCollectionStack CloudFormation stack in the Management account - OptimizationManagementDataRoleStack CloudFormation stackset in the Management account - OptimizationDataRoleStack Before deleting Stacks and StackSet please make sure all related buckets are empty. When deleting the OptimizationDataRoleStack stackset, if you deployed to all accounts in your organization then add your AWS Organization id where it asks for AWS OU ID.</description>
</item>
<item>
<title>Bonus Content</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/5_bonus_content/</link>
<pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/5_bonus_content/</guid>
<description>Now that dependency monitoring has been established by leveraging CloudWatch Metrics and CloudWatch alarms, the last piece of the &ldquo;puzzle&rdquo; is to ensure that events related to the external service are tracked effectively so that relevant stakeholders are aware of the status of resolution. Alarms and notifications are good to alert teams of potential issues, however, tracking an event such as this will ensure co-ordination of efforts towards resolution. AWS Systems Manager OpsCenter can be used to achieve this.</description>
</item>
<item>
<title>Cost Optimization</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/cost_optimization/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/cost_optimization/</guid>
<description>These are queries for AWS Services under the AWS Well-Architected Framework Cost Optimization Pillar. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Customer Engagement</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/customer_engagement/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/customer_engagement/</guid>
<description>These are queries for AWS Services under the Customer Engagement product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Configure account settings</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/5_account_settings/</link>
<pubDate>Sun, 16 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/5_account_settings/</guid>
<description>It is important to ensure your account contacts are up to date and correct. This allows AWS to be able to contact the correct people in your organization if required. It is recommended to use a mailing list or shared email that is accessible by multiple team members for redudancy. Ensure the email accounts are actively monitored. Log in to your Management account with administrative privileges, Click on the account name in the top right, and click on My Account from the menu: Scroll down to Alternate Contacts and click on Edit: Enter information into each of the fields for Billing, Operations and Security, and click Update: function prevStep(){ window.</description>
</item>
<item>
<title>Additional Dashboards</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/3_additional_dashboards/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/3_additional_dashboards/</guid>
<description>Introduction In addition to the two foundational Cloud Intelligence Dashboards CUR Dashboards, Cost Intelligence Dashboard and CUDOS, we have service and specific use case dashboards that help you dive deeper and gain additional insights. Trends Dashboard The Trends Dashboard provides Financial and Technology organizational leaders access to proactive trends, signals, insights and anomalies to understand and analyze their AWS cloud usage. Click here to continue with the Trends Dashboard deployment This guide requires that you&rsquo;ve already deployed the Cloud Intelligence Dashboards.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/5_tear_down/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/5_tear_down/</guid>
<description>This Lab has moved under the Level 200 Cloud Intelligence Dashboards.Click this link to navigate to the updated Lab To perform a teardown for this lab, perform the following steps: Remove QuickSight email reports Go into QuickSight Select All dashboards Click on the dashboard name Click Reports Select Unsubscribe Click Update Remove any created QuickSight dashboards Go into QuickSight Select All dashboards Click the 3 dots next to the dashboard name Click Delete Click Delete Remove any QuickSight analyses</description>
</item>
<item>
<title>Add an Amazon EC2 Instance to the Stack</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/5_add_ec2/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/5_add_ec2/</guid>
<description>In this task, your objective is to add an Amazon EC2 instance to the template, then update the stack with the revised template. Whereas the bucket definition was rather simple (just two to four lines), defining an Amazon EC2 instance is more complex because it needs to use associated resources, such as an AMI, security group and subnet. For this exercise we will assume you now know how to edit your CloudFormation template and update your CloudFormation stack with the updated template.</description>
</item>
<item>
<title>Create a Lambda function</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/5_create_lambda_function/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/5_create_lambda_function/</guid>
<description>We will now create a Lambda function which will run the code and produce the reports. NOTE: this Lambda function must be created in the same region as S3 bucket for CUR query results created earlier. Go to the Lambda console, click Create function. Select Author from scratch, configure the following parameters: Function name: Auto_CUR_Delivery Runtime: Python 3.7 Execution role: Use an existing role Existing role: Lambda_Auto_CUR_Delivery_Role click Create function.</description>
</item>
<item>
<title>Create an IAM policy to restrict EBS Volume creation by volume type</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/5_ec2_volume_type/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/5_ec2_volume_type/</guid>
<description>Extending cost optimization governance beyond compute instances will ensure overall higher levels of cost optimization. Similar to EC2 instances, there are different storage types. Governing the type of storage that can be created in an account can be effective to minimize cost. We will create an IAM policy that denies operations that contain provisioned IOPS (io1) EBS volume types. This will not only restrict creating a volume, but all other actions that attempt to use this volume type.</description>
</item>
<item>
<title>Format the Recommendation Dashboard</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/5_format_dashboard/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/5_format_dashboard/</guid>
<description>We will format the recommendation dashboard, this will improve its appearance, and also includes some business rules. Click on Themes, then click on Midnight: Select the Recommendations table, click the three dots, click Conditional formatting: Column: PayOffMonth, Add background color: Enter the formatting: Condition: Greater than Value: 9 Color: red Click Apply, click Close: Using the same process, add formatting for the column discountrate:</description>
</item>
<item>
<title>Generate Logs</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/5_generate_logs/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/5_generate_logs/</guid>
<description>In order to populate the logs you are collecting, you need to interact with the deployed website. The Apache web server service being used to host your website generates access logs. In the following steps, you will visit the website to generate these access logs. Go to the CloudFormation console. Select the stack you deployed for this lab, called security-cw-lab. Click on Outputs, then click on WebsiteURL. Refresh the page a few time to generate some activity on your website.</description>
</item>
<item>
<title>Operating</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/5_operating/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_quick_steps_to_security_success/5_operating/</guid>
<description>Although there are instructions for Decommissioning a Landing Zone in the AWS Control Tower documentation it is strongly recommended that you keep them this quest in place unless you are decommissioning your AWS account structure. The steps in this quest are intended to improve your security posture and tearing down this quest will remove the audit logs and guard rails put in place. There is no additional cost for AWS Control Tower, you only pay for the services used by Control Tower which scales with you.</description>
</item>
<item>
<title>Patch Management</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/5_patch_mgmt/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/5_patch_mgmt/</guid>
<description>Systems Manager: Patch Manager AWS Systems Manager Patch Manager automates the process of patching managed instances with security related updates. Note For Linux-based instances, you can also install patches for non-security updates. You can patch fleets of Amazon EC2 instances or your on-premises servers and virtual machines (VMs) by operating system type. This includes supported versions of Windows, Ubuntu Server, Red Hat Enterprise Linux (RHEL), SUSE Linux Enterprise Server (SLES), and Amazon Linux.</description>
</item>
<item>
<title>References & useful resources</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/5_resources/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/5_resources/</guid>
<description>What Is AWS Backup? - For backing up AWS resources other than S3 AWS re:Invent 2018: Architecture Patterns for Multi-Region Active-Active Applications (ARC209-R2) AWS re:Invent 2019: Backup-and-restore and disaster-recovery solutions with AWS (STG208) S3: Cross-Region Replication Amazon S3 Replication Time Control for predictable replication time, backed by an SLA Well-Architected Framework Well-Architected best practices for reliability Our Friend Rufus Additional information on multi-region strategies for disaster recovery (DR) Recovery Time Objective (RTO) and Recovery Point Objective (RPO) These terms are most often associated with Disaster Recovery (DR), which are a set of objectives and strategies to recover workload availability in the case of a disaster</description>
</item>
<item>
<title>Share my Custom Lens</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/5_ddb_config_share_and_update/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/5_ddb_config_share_and_update/</guid>
<description>Share a Custom Lens After we published our custom lens onto AWS Well-Architected Tool, we can share a custom lens with other AWS Accounts, IAM Users, AWS Organizations and organization units(OUs). With this sharing mechanism, we can centralize the custom lens and share them from one designated AWS account. Once we have any update on custom lens, all the relevant workload review will able to apply the latest lens immediately.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/5_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_2_cost_and_usage_governance/5_tear_down/</guid>
<description>Delete a Budget Report We will delete the bugdet report we created in the previous step. From the Budgets Reports dashboard, check the box next to the Weekly Budgets budget report. Then select Delete from the Actions dropdown: Click on the Confirm button to confirm you want to delete the budget report. The dashboard should now tell you your budget has been deleted: Delete a Budget We will delete all three budgets that we configured during the lab.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/5_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_3_pricing_models/5_tear_down/</guid>
<description>There is no tear down required for this lab. function prevStep(){ window.open("..\/4_visualize_recommendations\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Congratulations! Now that you have completed the lab, if you have implemented this knowledge in your environment, you should re-evaluate the questions in the Well-Architected tool. This lab specifically helps you with COST7 - &ldquo;How do you use pricing models to reduce cost?&quot;</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/5_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_aws_resource_optimization/5_tear_down/</guid>
<description>No tear down is required for this lab. function prevStep(){ window.open("..\/4_other_rs_tools\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Congratulations! Now that you have completed the lab, if you have implemented this knowledge in your environment, you should re-evaluate the questions in the Well-Architected tool. This lab specifically helps you with COST6 - &ldquo;How do you meet cost targets when you select resource type, size and number?</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/5_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_permission_boundaries_delegating_role_creation/5_cleanup/</guid>
<description>Please note that the changes you made to the users, groups, and roles have no charges associated with them. Using the original IAM user, for each of the roles you created select them in the IAM console at https://console.aws.amazon.com/iam/ and click Delete role. The roles created are: app1-user-region-restricted-services developer-restricted-iam For each of the policies you created, one at a time select the radio button then Policy actions drop down menu then Delete.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/5_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_iam_tag_based_access_control_for_ec2/5_cleanup/</guid>
<description>Please note that the changes you made to the policies and roles have no charges associated with them. Using the original IAM user, select the ec2-admin-team-alpha role in the IAM console at https://console.aws.amazon.com/iam/ and click Delete role. For each of the policies you created, one at a time select the radio button then Policy actions drop down menu then Delete. The policies created are: ec2-create-tags ec2-create-tags-existing ec2-list-read ec2-manage-instances ec2-run-instances</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/5_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_lambda_cross_account_bucket_policy/5_cleanup/</guid>
<description> Remove the lambda function, then roles If you created a new S3 bucket, then you may remove it</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/5_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/100_labs/100_deploy_cloudformation/5_cleanup/</guid>
<description>If you are attending an in-person workshop and were provided with an AWS account by the instructor: There is no need to tear down the lab. Feel free to continue exploring. Log out of your AWS account when done. If you are using your own AWS account: You may leave these resources deployed for as long as you want. When you are ready to delete these resources, see the following instructions How to delete an AWS CloudFormation stack If you are already familiar with how to delete an AWS CloudFormation stack, then skip to the next section: Delete workshop CloudFormation stacks</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/5_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_health_checks_and_dependencies/5_cleanup/</guid>
<description>If you are attending an in-person workshop and were provided with an AWS account by the instructor: There is no need to tear down the lab. Feel free to continue exploring. Log out of your AWS account when done. If you are using your own AWS account: You may leave these resources deployed for as long as you want. When you are ready to delete these resources, see the following instructions Remove AWS CloudFormation provisioned resources How to delete an AWS CloudFormation stack If you are already familiar with how to delete an AWS CloudFormation stack, then skip to the next section: Delete workshop CloudFormation stacks</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/5_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/200_labs/200_automating_operations_with_playbooks_and_runbooks/5_cleanup/</guid>
<description>In this section you will delete all resources related to the lab environment. Run the following command to navigate to the script folder. cd ~/environment/aws-well-architected-labs/static/Operations/200_Automating_operations_with_playbooks_and_runbooks/Code/scripts/ Run the teardown_resources.sh script to delete all resources related to the lab. bash teardown_resources.sh</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/5_teardown/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_patching_with_ec2_image_builder_and_systems_manager/5_teardown/</guid>
<description>The following steps will remove the services which are deployed in the lab. Teardown of CloudFormation Deployment 5.1. Remove the Automation Stack From the CloudFormation console, select the stack named pattern3-automate from the list and select Delete and confirm the deletion in the next dialog box. 5.2. Remove the Pipeline Stack 5.2.1. Note: The stack will fail to remove unless the S3 bucket is empty. As a pre requisite, remove the contents of the bucket before continuing.</description>
</item>
<item>
<title>Testing the Workload Functionality</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/5_testing_the_workload_functionality/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/5_testing_the_workload_functionality/</guid>
<description>Following the completion of section 4, we can complete the lab by testing the workload. We will achieve this by running a decrypt API call to our application. This will trigger a failed decrypt event which should result in our alarm being triggered and an SNS notification sent to the email address which you specified as an endpoint in the previous section. Complete the following steps to test the system functionality:</description>
</item>
<item>
<title>Trigger the Lambda When a CUR is Delivered</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/5_trigger_lambda/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/5_trigger_lambda/</guid>
<description>It is assumed that you have completed 300_Automated_CUR_Updates_and_Ingestion, so there is an existing Lambda function that is being executed when a new CUR file is delivered. We will add code into this setup to trigger the new Lambda function. 1 - Go to the CloudFormation service Dashboard 2 - Select the current stack which updates the Glue database 3 - Download the current template (crawler-cfn.yml file), and save this for later (if Teardown is required)</description>
</item>
<item>
<title>View your Reserved Instance coverage</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/5_ri_coverage/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/5_ri_coverage/</guid>
<description>You can view your Reserved Instance coverage to look for anomalies or changes in coverage. For compute resources you should purchase Savings Plans instead of Reserved Instances. In Cost Explorer, click on Saved reports on the left: Click on RI Coverage: You will see the default RI Coverage report. It is for the Last 3 Months, and is for the instances within the EC2 service: Scroll down below the graph and you can see a summary of the costs and usage.</description>
</item>
<item>
<title>Viewing and downloading the report</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/5_view_report/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/5_view_report/</guid>
<description>From the detail page for the workload you can identify the number of high and medium risk items: You can also edit the improvement plan configuration. Scroll down and click on the Edit button next to the words Pillar priority: Move the Reliability Pillar up by clicking the up icon to the right of the word, Reliability: Click the Save button to save this configuration: Click on the Properties tab: Scroll down to set the improvement status: From the detail page for the workload, click the AWS Well-Architected Framework navigation item (others navigation items would appear for any applied Well-Architected Lens): Click the Generate report button to generate and download the report: You can either open the file or save it to view it.</description>
</item>
<item>
<title>Save and Share</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/5_save_share/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_cost_estimation/5_save_share/</guid>
<description>Save and Share On the My Estimate page, click on the Save and share button Review the notice, then click on Agree and continue Pricing Calculator saves (for 3 yrs) your estimate and makes it available at the URL in the text box. To share the link, click on Copy public link and share it. Bonus You can deploy a LAMP stack on AWS using the CloudFormation template found here.</description>
</item>
<item>
<title>Service Selection</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/5_select_services/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/5_select_services/</guid>
<description>Service Selection Evaluate Cost Licensing Goal: Reduce database licensing costs Target: Within 1 year, convert 10 workloads with VendorX databases to Open Source databases Best Practice: Licensing Costs Measures: Number of workloads converted Good/Bad: Good Why? When does it work well or not?: Works well to reduce licensing costs, significant effort in conversion may reduce overall savings. Contact/Contributor: costoptimization@amazon.com function prevStep(){ window.open("..\/4_decommission_resources\/", "_self") } function nextStep(){ window.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/5_teardown/</link>
<pubDate>Mon, 13 Mar 2023 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_6_cost_anomaly_detection/5_teardown/</guid>
<description>Delete cost monitor by going to Cost Anomaly Detection Overview page and under Cost monitors tab, select the monitor and click Delete: A confirmation window will appear; click Delete to continue. Delete alert subscription by going to Cost Anomaly Detection Overview page and under Alert subscriptions tab, select the subscription and click Delete: A confirmation window will appear; click Delete to continue. Delete SNS topic by going to Amazon SNS console, click Topics from the left navigation pane.</description>
</item>
<item>
<title>Test Resiliency Using Application Failure Injection</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/6_failure_injection_app/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/6_failure_injection_app/</guid>
<description>6.1 Web server failure injection This failure injection will simulate a critical failure of the web server running on the EC2 instances using FIS. In Chaos Engineering we always start with a hypothesis. For this experiment the hypothesis is: Hypothesis: If the server process on a single instance is killed, then availability will not be impacted [Optional] Before starting, view the deployment machine in the AWS Step Functions console to verify the deployment has reached the stage where you can start testing: single region: WaitForWebApp shows completed (green) multi region: WaitForWebApp1 shows completed (green) 6.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/6_teardown/</link>
<pubDate>Mon, 31 May 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_multilayered_api_security_with_cognito_and_waf/6_teardown/</guid>
<description>The following steps will remove the services which are deployed in the lab. 1. Delete CloudFormation stacks Simply delete 3 CloudFormation stack created in this lab. One CloudFormation Stack for Cloud9 Two CloudFormation Stacks to build out the lab base infrastructure and enhanced security services. 2. Remove the CloudWatch Log Group From the CloudWatch console, select Log group under Logs and select the log group which you created in the lab.</description>
</item>
<item>
<title>Step 6 - Restrict public storage</title>
<link>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/6_restrict_public_storage/</link>
<pubDate>Tue, 11 May 2021 02:20:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/quests/quest_100_simplest_security_steps/6_restrict_public_storage/</guid>
<description>In this exercise we will configure S3 Block Public Access, an easy way to prevent public access to your S3 bucket. From the AWS console, click Services and select S3. Click the bucket name that you want to block public access. Click on the Permissions tab. Click Edit under the section &lsquo;Block public access (bucket settings)&rsquo;. Select Block all public access to prevent all sort of public access to your bucket.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/6_cleanup/</link>
<pubDate>Thu, 25 Mar 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/300_labs/300_using_wat_with_cloudformation_and_custom_lambda/6_cleanup/</guid>
<description>Cleanup of CloudFormation In the AWS Management Console, navigate to the AWS CloudFormation console Select the stack WALabDemoApp, and delete it. Wait for that stack to full delete before moving on to the next step Select the stack WALambdaHelpers, and delete it. Remove the WA Review In the AWS Management Console, navigate to the Well-Architected Tool Console Select the radio button next to the workload APIGWLambda - walabs-api - WALabsSampleLambdaFunction Click the Delete button at the top page.</description>
</item>
<item>
<title>Optional - Programmatic access via API</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/6_programmatic/</link>
<pubDate>Fri, 15 Jan 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/6_programmatic/</guid>
<description>Choose which programming language you wish to use Python PowerShell Python version using Boto3 Library The lab uses AWS CLI to perform all of the tasks, but you can also use the AWS SDK for Python (Boto3) to perform the same steps. As a reference, you can download the code LabExample.py which will perform all of steps from the lab in a single python file. This file assumes you have already setup your AWS credential file, and uses the default profile for all interactions.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/6_cleanup/</link>
<pubDate>Fri, 15 Jan 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_integration_with_aws_compute_optimizer_and_aws_trusted_advisor/6_cleanup/</guid>
<description>Summary You have learned how to use the various AWS CLI commands to work with the AWS Well-Architected Tool. Remove all the resources Delete the stack aws cloudformation delete-stack --stack-name STACK_NAME Confirm the stack has been deleted aws cloudformation list-stacks --query &quot;StackSummaries[?contains(StackName,'STACK_NAME')].StackStatus&quot; References &amp; useful resources AWS CLI - wellarchitected AWS Well-Architected Tool Documentation AWS Well-Architected Boto3 Reference AWS Well-Architected API Reference function prevStep(){ window.</description>
</item>
<item>
<title>Impact of failures with shuffle sharding</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/6_impact_of_failures_shuffle_sharding/</link>
<pubDate>Mon, 07 Dec 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/6_impact_of_failures_shuffle_sharding/</guid>
<description>Break the application You will now introduce the poison pill into the workload by including the bug query-string with your requests and see how the updated workload architecture handles it. As in the previous case, imagine that customer Alpha triggered the bug in the application again. Include the query-string bug with a value of true and make a request as customer Alpha. The modified URL should look like this - http://shuffle-alb-1p2xbmzo541rr-1602891463.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/6_cleanup/</link>
<pubDate>Tue, 01 Dec 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_linux_ec2_cloudwatch/6_cleanup/</guid>
<description>Summary In order to monitor your compute resources to ensure they are performing properly, you must record performance related metrics. In this simple lab, you were able to create an EC2 instance and generate a simulated high-load situation to observe how CloudWatch can be used to monitor those resources. These are important concepts that you should use across all of your compute resources to ensure you are meeting PERF7 - &ldquo;How do you monitor your resources to ensure they are performing?</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/6_cleanup/</link>
<pubDate>Thu, 19 Nov 2020 12:00:00 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/performance-efficiency/100_labs/100_monitoring_windows_ec2_cloudwatch/6_cleanup/</guid>
<description>Summary In order to monitor your compute resources to ensure they are performing properly, you must record performance related metrics. In this simple lab, you were able to create an EC2 instance and generate a simulated high-load situation to observe how CloudWatch can be used to monitor those resources. These are important concepts that you should use across all of your compute resources to ensure you are meeting PERF7 - &ldquo;How do you monitor your resources to ensure they are performing?</description>
</item>
<item>
<title>Add your own assumptions (using the Amazon Athena console)</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/2_add_assumptions/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/2_add_assumptions/</guid>
<description>Introduction By now you have queried AWS Cost &amp; Usage reports with Amazon Athena. You drew proxy metrics for sustainability from AWS usage data. Calculating key performance indicators (KPIs), you might want to extend the queries with further assumptions/ data to reinforce sustainable best practices. Some examples for further assumptions: preference of one EC2 instance family over another (e.g. AWS Graviton based instances) AWS Region preference by user location or the published carbon intensity of electricity grids preference of EC2 Spot instances to increase the overall utilization of the cloud&rsquo;s resources while decreasing cost In this lab you will learn to make that data available to your queries as a simple view in Amazon Athena.</description>
</item>
<item>
<title>Enable Amazon Redshift Data Sharing</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/5_enable_data_sharing/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/5_enable_data_sharing/</guid>
<description>Lab 5 The producer cluster administrator, who wants to share data, first sets up the producer cluster for data sharing by running the below commands in the query editor: Step-1: Create a datashare on the producer cluster Make sure you are connected to the producer cluster as Admin in us-east-1 region. Then go to query editor to run below command: CREATE DATASHARE MarketingShare; Step-2: Add database objects to the datashare The producer cluster administrator then adds the needed database objects.</description>
</item>
<item>
<title>Lab 3 - Failover to read Replica</title>
<link>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/3-3_failover_to_read_replica/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/3-3_failover_to_read_replica/</guid>
<description>Migration Methodologies Preparation Lab 1 - Change Database Instance Type Lab 2 - Promote Read Replica Lab 3 - Failover to Read Replica Lab 4 - Restore from snapshot Cleanup Overview In this lab you will take the Amazon Aurora database created in the Preparation step, add a read replica, and then failover to the replica. This method works for Amazon Aurora only (Postgres and MySQL). This is a fast way to migrate, and applications can continue to use the existing database endpoints.</description>
</item>
<item>
<title>Review Sustainability KPIs Optimization</title>
<link>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/5_review_sustainability_kpi_optimization/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/5_review_sustainability_kpi_optimization/</guid>
<description>With our EC2 instance optimization completed, let’s evaluate our utilization levels to see if they have improved and effected our sustainability KPIs. 5.1. Review Sustainability KPIs Optimization Go back to the dashboard for Sustainability KPIs Baseline in the Amazon CloudWatch. Let&rsquo;s evaluate the sustainability KPIs. These are the improved metrics and KPIs: * Proxy Metric - Total number of vCPUs = 2 * Business Metric - Total number of APIs = 3 * KPIs - Resources provisioned per unit of work = 2 / 3 requests = 0.</description>
</item>
<item>
<title>Create Custom Data Collection Module (Optional)</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/create_custom_data_collection_module/</link>
<pubDate>Wed, 21 Oct 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/create_custom_data_collection_module/</guid>
<description>Example Module Explanation You can use this template to build your own data collection modules. In the next step, we will be providing you with modules you can add to your template. These are sets of Infrastructure as code that have all the resources you need and is easy to add to your template. Download CloudFormation template by clicking here. This will be the foundation of the rest of this section and can be reused to build out the modules.</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/6_cleanup/</link>
<pubDate>Tue, 15 Sep 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_dependency_monitoring/6_cleanup/</guid>
<description>The following instructions will remove the resources that you have created in this lab. Cleaning up Amazon CloudWatch Resources Go to the Amazon CloudWatch console at https://console.aws.amazon.com/cloudwatch and click on Alarms Search for the alarm WA-Lab-Dependency-Alarm and click on it Click on Delete on the top right hand corner Click Delete Cleaning up AWS Systems Manager OpsCenter Resources Go to the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager and click on OpsCenter Click on the OpsItems tab, search by Title, select contains, and enter the value as S3 Data Writes Click on the OpsItem that has been created with the title S3 Data Writes failing Click on Set status on the top right hand corner, and select Resolved Cleaning up the CloudFormation Stack Go to the AWS CloudFormation console at https://console.</description>
</item>
<item>
<title>Database</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/database/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/database/</guid>
<description>These are queries for AWS Services under the Database product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run. For example, if your CUR table is called cur_table and is in a database called cur_db, you would replace ${table_name} with cur_db.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/teardown/4_teardown/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/teardown/4_teardown/</guid>
<description>Teardown of CloudFormation deployment (Automated) Click here to use the same CFN templates you used to deploy the dashboards to tear down the environment NOTE: Deleting an account means that CUR data will not flow to your destionat (data collection) account anymore. However, historical data will be retained in destination account. To delete the CURs, go to the ${resource-prefix}-${payer-account-id}-shared S3 Bucket and manualy delete account data.</description>
</item>
<item>
<title>Create custom EC2 reports</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/6_custom_ec2/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/6_custom_ec2/</guid>
<description>We will now create some custom EC2 reports, which will help to show ongoing costs related to EC2 instances and their associated usage. From the left menu click Cost Explorer, click Reports, and click and click Monthly costs by service: You will have the default breakdown by Service. Click on the Service filter on the right, select EC2-Instances (Elastic Compute Cloud - Compute) and EC2-Other, then click Apply filters: You will now have monthly EC2 Instance and Other costs: Change the Group by to Usage Type: Change it to a Daily Line graph, then select More filters: click on Purchase Option, select On Demand and click Apply filters, which will ensure we are only looking at On-Demand costs: These are your on-demand EC2 costs, you should setup a report like this for your services that have the highest usage or costs.</description>
</item>
<item>
<title>Creating Maintenance Windows and Scheduling Automated Operations Activities</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/6_maintenance_windows/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/6_maintenance_windows/</guid>
<description>AWS Systems Manager: Maintenance Windows AWS Systems Manager Maintenance Windows let you define a schedule for when to perform potentially disruptive actions on your instances such as patching an operating system (OS), updating drivers, or installing software. Each Maintenance Window has a schedule, a duration, a set of registered targets, and a set of registered tasks. With Maintenance Windows, you can perform tasks like the following: Installing applications, updating patches, installing or updating SSM Agent, or executing PowerShell commands and Linux shell scripts by using a Systems Manager Run Command task Building Amazon Machine Images (AMIs), boot-strapping software, and configuring instances by using Systems Manager Automation Executing AWS Lambda functions that trigger additional actions such as scanning your instances for patch updates Running AWS Step Function state machines to perform tasks such as removing an instance from an Elastic Load Balancing environment, patching the instance, and then adding the instance back to the Elastic Load Balancing environment NoteTo register Step Function tasks you must use the AWS CLI.</description>
</item>
<item>
<title>Customize query strings and create scheduled CloudWatch event</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/6_cloudwatch_event/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/6_cloudwatch_event/</guid>
<description>In you local path where AutoCURDelivery.zip is located. Unzip and re-open config.yml in a text editor. Find Body_Text, insert a description of new query MTD_Inter_AZ_DT. MTD_Inter_AZ_DT - Month to date inter-AZ data transfer split by resource ID Find the section Query_String_List, add following new query string at the bottom of file (note the indent should be same as other query strings), save config.yml. - MTD_Inter_AZ_DT: SELECT year ,month(line_item_usage_start_date) month ,line_item_product_code as Product_Name ,line_item_resource_id as Resource_Id ,line_item_usage_type as Usage_Type ,sum(line_item_usage_amount) as &quot;Inter_AZ_Data_Transfer(GB)&quot; ,sum(line_item_unblended_cost) as &quot;Cost($)&quot; FROM CUR_DB WHERE &quot;line_item_usage_type&quot; like '%Bytes%' AND &quot;line_item_usage_type&quot; like '%Regional%' AND year='CUR_YEAR' AND month='CUR_MONTH' GROUP BY 1,2,3,4,5 ORDER BY sum(&quot;line_item_unblended_cost&quot;) desc The paramemters CUR_DB, CUR_MONTH, CUR_YEAR are replaced when function is running</description>
</item>
<item>
<title>Multi-region Deployment with CloudFormation StackSets</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/6_multi_region_deploy/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/6_multi_region_deploy/</guid>
<description>There might be situations where you want to deploy the same infrastructure in multiple AWS Regions and/or multiple AWS accounts to increase reliability of the workload or to improve performance by having the infrastructure geographically closer to your end users. You can use AWS CloudFormation StackSets to perform this as a single operation instead of switching regions or accounts to individually deploy each stack. From an administrator account, you can define a CloudFormation template and use it to provision stacks in multiple target accounts, across multiple AWS Regions.</description>
</item>
<item>
<title>Setup Amazon QuickSight</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/6_quicksight/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/6_quicksight/</guid>
<description>This will setup Amazon QuickSight, so that users in the Cost Optimization Account can create analysis' and dashboards. Setup QuickSight for the first time Log into the console in the Cost Optimization account as an IAM user with the required permissions, go to the Amazon QuickSight console: If you havent used QuickSight before click on Sign up for QuickSight, otherwise skip this step and proceed to Setup QuickSight IAM Policy below: Select the Standard edition, and click Continue: Select the region which should be the same as your CUR file source, Enter your QuickSight account name, Notification email address, select Amazon Athena and click Choose S3 buckets: Select S3 Buckets You Can Access Across AWS, under Use a different bucket enter the CUR bucket name, click Add S3 bucket and click Finish: Click Finish: Setup QuickSight IAM Policy Go to the IAM Dashboard</description>
</item>
<item>
<title>Sub Account Crawler Setup</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/6_sub_acct/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/6_sub_acct/</guid>
<description>The final step is to setup the sub account to automatically scan the S3 folders each morning using a Glue Crawler, and update a local Athena database. 1 - Login to the sub account as an IAM user with the required permissions, and go into the Glue console. 2 - Add a Crawler with the following details: Include path: the S3 bucket in the account with the delivered CURs Exclude patterns: **.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/6_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_aws_resource_optimization/6_tear_down/</guid>
<description>Terminate the EC2 Instance Delete the IAM role CloudWatchAgentServerRole function prevStep(){ window.open("..\/5_ec2_computer_opt\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Congratulations! Now that you have completed the lab, if you have implemented this knowledge in your environment, you should re-evaluate the questions in the Well-Architected tool. This lab specifically helps you with COST 6. &ldquo;How do you meet cost targets when you select resource type, size and number?</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/6_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_custom_lenses_on_watool/6_tear_down/</guid>
<description>In order to tear down the lab environment, you simply delete the workload and the custom lens you created. Select Custom Lenses on the left navigation: Select the radio button next to the Custom lense we created and then click the Delete button. Confirm the deletion by clicking the Delete button on the dialog - with correct custom lens name entered: Once the custom lens been removed from your AWS Well-Architected Tool, you might see a warning message on top of your workload list:</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/6_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/100_labs/100_walkthrough_of_the_well-architected_tool/6_tear_down/</guid>
<description>In order to take down the lab environment, you simply delete the workload you created. Select Workloads on the left navigation: Select the radio button next to the Workload for AWS Workshop and then click the Delete workload button. Confirm the deletion by clicking the Delete button on the dialog: function prevStep(){ window.open("..\/5_view_report\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/6_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/6_tear_down/</guid>
<description>Log onto the console as your regular user with the required permissions. Delete the IAM policies We will delete the IAM policies created, as they are no longer applied to any groups. Log on to the console as your regular user with the required permissions, go to the IAM service page: Click on Policies on the left: 3.Click on Filter Policies and select Customer managed: Select the policy you want to delete Region_Restrict: Click on Policy actions, and select Delete: Click on Delete: Perform the same steps above to delete the Ec2_FamilyRestrict and EC2EBS_Restrict policies.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/6_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cost_category/6_tear_down/</guid>
<description>Overview It is recommended to delete all the resources those are not in use anymore to save the cost. Delete resources created by CloudFormation template Console: Log into the Cost Optimization Member Account created in AWS Account Setup. Search for cloud formation in AWS console and select CloudFormation from Services. Select Alpha-Team-Resources (or the Stack name you have chosen while deplying resources for team Alpha) and click on Delete.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/6_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_pricing_model_analysis/6_tear_down/</guid>
<description>Savings Plan analysis is a critical requirement of cost optimization, so there is no specific tear down for this lab. The following resources were created in this lab: S3 Bucket: (custom name) Lambda Functions: SPTool_ODPricing_Download and SPTool_SPPricing_Download IAM Role: SPTool_Lambda IAM Policy: s3_pricing_lambda CloudWatch Event, Rule: SPTool-Pricing Glue Crawlers: OD_Pricing and SP_Pricing IAM Role: AWSGlueServiceRole-SPToolPricing Glue Database: Pricing Athena Views: pricing.pricing and costmaster.SP_USage QuickSight Dataset: SP_Usage QuickSight Analysis: sp_usage analysis function prevStep(){ window.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/6_teardown/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/300_labs/300_autonomous_monitoring_of_cryptographic_activity_with_kms/6_teardown/</guid>
<description>The following steps will remove the services which are deployed in the lab. 6.1. Remove the CloudWatch Alarm 6.1.1. From the CloudWatch console, select Alarms from the left-hand dashboard, and select the alarms which you created in the lab using the radio box. 6.1.2. From the Actions button, select Delete and confirm the alarm deletion. 6.2. Remove the CloudWatch Metric Filter From the CloudWatch console, select Log group under Logs and locate the log group which you created in the lab.</description>
</item>
<item>
<title>View your CloudWatch Logs</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/6_view_cw_logs/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/6_view_cw_logs/</guid>
<description>Now that the CloudWatch Agent is up and running on your EC2 Instance, let’s go ahead and view those logs and metrics from the Console. CloudWatch is a useful place to view logs because it is centralized, meaning you can switch between examining logs from many sources. Viewing Logs: Open the CloudWatch console. On the left side menu, choose Log groups under Logs. On that screen, enter securitylablogs in the search bar.</description>
</item>
<item>
<title>Resource Type, Size & Number</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/6_resource_type_size_number/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/6_resource_type_size_number/</guid>
<description>Resource Type, Size, &amp; Number Resource Size Over-provisioning Goal: Minimize waste due to over-provisioning Target: Waste due to compute over-provisioing in the 1st tier of production workloads not to exceed 10% of tier compute cost, as reported by tool X. Waste due to compute over-provisioining in the 2nd tier of production workloads not to exceed 5% of tier compute cost. Best Practice: Data-based selection Measures: % of over provisioning Good/Bad: Good Why?</description>
</item>
<item>
<title>Test Resiliency Using Availability Zone (AZ) Failure Injection</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/7_failure_injection_az/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/7_failure_injection_az/</guid>
<description>7.1 AZ failure injection This failure injection will simulate a critical problem with one of the three AWS Availability Zones (AZs) used by your service. AWS Availability Zones are powerful tools for helping build highly available applications. If an application is partitioned across AZs, companies are better isolated and protected from issues such as lightning strikes, tornadoes, earthquakes and more. In Chaos Engineering we always start with a hypothesis. For this experiment the hypothesis is:</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/7_cleanup/</link>
<pubDate>Fri, 15 Jan 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/well-architectedtool/200_labs/200_using_awscli_to_manage_wa_reviews/7_cleanup/</guid>
<description>Summary You have learned how to use the various AWS CLI commands to work with the AWS Well-Architected Tool. Remove all the resources Using the delete-workload API, you can remove the workload from the WA Tool. aws wellarchitected delete-workload --workload-id &quot;&lt;WorkloadId&gt;&quot; References &amp; useful resources AWS CLI - wellarchitected AWS Well-Architected Tool Documentation AWS Well-Architected Boto3 Reference AWS Well-Architected API Reference function prevStep(){ window.open("..\/6_programmatic\/", "</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/7_cleanup/</link>
<pubDate>Wed, 18 Nov 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/7_cleanup/</guid>
<description>If you are attending an in-person workshop and were provided with an AWS account by the instructor: You should skip this step. Your AWS account will be cleaned automatically If you are using your own AWS account: Please use these steps when you are done with the lab Cleaning up the CloudFormation Stack The following instructions will remove the resources that you have created in this lab. Sign in to the AWS Management Console and navigate to the AWS CloudFormation console - https://console.</description>
</item>
<item>
<title>Add your own assumptions (using infrastructure as code)</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/3_add_assumptions_iac/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/3_add_assumptions_iac/</guid>
<description>Introduction In lab 2 you learned how to extend your AWS Cost &amp; Usage Report data by additional data &amp; assumptions in Amazon Athena views. The manual approach from the previous lab is tedious and not feasible if you need to provide larger data sets. In this lab you learn to add more data in CSVs via an Infrastructure as Code (IaC) approach. You will customize the library introduced in lab 1.</description>
</item>
<item>
<title>Amazon Redshift Consumer Cluster Validation</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/6_consumer_validation/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/6_consumer_validation/</guid>
<description>Lab 6 Now, let&rsquo;s validate consumer cluster access to the producer cluster datashare and objects. And then run queries from the consumer cluster against objects stored in producer cluster. Connect to the consumer cluster in us-west-1 to perform below steps: Step-1: Validate datashare is accessible Run below query to find the datashare type SELECT * FROM svv_datashares; You can see MarketingShare is an INBOUND type data share type.</description>
</item>
<item>
<title>Cleanup</title>
<link>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/cleanup/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/200_labs/200_optimize_hardware_patterns_observe_sustainability_kpis/cleanup/</guid>
<description>To avoid incurring further costs for AWS resources, let’s delete all resources that you created for this lab. Open the CloudFormation console at https://console.aws.amazon.com/cloudformation and select the correct region you used to deploy this lab. Select the previous CloudFormation stack you used and click Delete. Click Dashboards and select your newly created dashboard. Click Delete. function prevStep(){ window.open("..\/5_review_sustainability_kpi_optimization", "_self") } function nextStep(){ window.open("\/cost\/", "</description>
</item>
<item>
<title>Lab 4 - Restore from Snapshot</title>
<link>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/3-4_restore_from_snapshot/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/3-4_restore_from_snapshot/</guid>
<description>Migration Methodologies Preparation Lab 1 - Change Database Instance Type Lab 2 - Promote Read Replica Lab 3 - Failover to Read Replica Lab 4 - Restore from snapshot Cleanup Overview The last option to migrate a database from x86-64 to Graviton is to restore a database snapshot to a Graviton instance, creating a new database, and leaving the existing database in place. An alternative lab to this one exists here.</description>
</item>
<item>
<title>FAQ</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/_faq/</link>
<pubDate>Mon, 07 Sep 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/_faq/</guid>
<description>Last Updated April 2022 If you wish to provide feedback on this lab, there is an error, or you want to make a suggestion, please email: costoptimization@amazon.com My region is not covered in the &lsquo;Code Bucket&rsquo; Parameter Click here to expand step by step instructions We have set this up in the most common regions. If your region is not in the list please email costoptimization@amazon.com and we will create this resource for you</description>
</item>
<item>
<title>End User Computing</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/end_user_computing/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/end_user_computing/</guid>
<description>These are queries for AWS Services under the End User Computing product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Creating a Simple Notification Service Topic</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/7_create_sns_topic/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/7_create_sns_topic/</guid>
<description>Amazon Simple Notification Service (Amazon SNS) coordinates and manages the delivery or sending of messages to subscribing endpoints or clients. In Amazon SNS, there are two types of clients: publishers and subscribers. These are also referred to as producers and consumers. Publishers communicate asynchronously with subscribers by producing and sending a message to a topic, which is a logical access point and communication channel. Subscribers (i.e., web servers, email addresses, Amazon SQS queues, AWS Lambda functions) consume or receive the message or notification over one of the supported protocols (i.</description>
</item>
<item>
<title>Enable AWS Cost Explorer</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/7_cost_explorer/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/7_cost_explorer/</guid>
<description>AWS Cost Explorer has an easy-to-use interface that lets you visualize, analyze, and manage your AWS costs and usage over time. You must enable it before you can use it within your accounts, once enabled it is enabled for ALL accounts and controlled through IAM policies. The default configuration of Cost Explorer is free, however we will enable hourly granularity, which incurrs an additional cost - AWS Cost Management Pricing.</description>
</item>
<item>
<title>Export Logs to S3</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/7_export_to_s3/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/7_export_to_s3/</guid>
<description>After collecting logs, you may want to export logs from CloudWatch to an S3 Bucket. This is useful as storing data in S3 is more cost effective and reliable than storing it in CloudWatch, making S3 a good option for long-term storage and archival of log files. Open up the CloudWatch console. On the left side menu, choose Log groups under Logs. On that screen, enter securitylablogs in the search bar.</description>
</item>
<item>
<title>Tear Down</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/7_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/7_tear_down/</guid>
<description>We will tear down this lab, removing any data, resources and configuration that it created. We will restore any modified code or resources to their original state before the lab. 7.1 Sub Account 1 - Log into the sub account as an IAM user with the required privileges 2 - Go to the Glue service dashboard 3 - Delete the created database and tables 4 - Delete the recurring Glue crawler</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/7_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_5_cost_visualization/7_tear_down/</guid>
<description>We will delete both custom reports that were created. Click on Saved reports on the left menu: Select the checkbox next to the two custom reports that you created above. Click on Delete: Verify the names of the reports you are going to delete, click Delete: The reports are no longer listed in the reports available: function prevStep(){ window.open("..\/6_custom_ec2\/", "</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/7_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_deploy_and_update_cloudformation/7_cleanup/</guid>
<description>When a CloudFormation stack is deleted, CloudFormation will automatically delete the resources that it created. If you are attending an in-person workshop and were provided with an AWS account by the instructor: There is no need to tear down the lab. Feel free to continue exploring. Log out of your AWS account when done. If you are using your own AWS account: You may leave these resources deployed for as long as you want.</description>
</item>
<item>
<title>Teardown</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/7_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_automated_cur_query_and_email_delivery/7_tear_down/</guid>
<description>Delete IAM role Lambda_Auto_CUR_Delivery_Role and policy Lambda_Auto_CUR_Delivery_Access Delete Lambda function Auto_CUR_Delivery Delete CloudWatch event 5_min_auto_cur_delivery Delete SES configuration Delete S3 bucket for CUR query results storing function prevStep(){ window.open("..\/6_cloudwatch_event\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Congratulations! Now that you have completed the lab, if you have implemented this knowledge in your environment, you should re-evaluate the questions in the Well-Architected tool.</description>
</item>
<item>
<title>Pricing Models</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/7_pricing_models/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/7_pricing_models/</guid>
<description>Pricing Models Savings Plans Purchasing Savings Plans Goal: Minimize resource cost by using Savings Plans Target: Unpurchased Savings Plans offering more than 10% discount not to exceed $100 Best Practice: Commitment Discounts - Savings Plans Measures: $ value of unpurchased plans above 10% discount Good/Bad: Good Why? When does it work well or not?: Maximizes high quality, low risk SP consumption, &amp; ensures SP&rsquo;s that dont make business sense are not purchased Contact/Contributor: costoptimization@amazon.</description>
</item>
<item>
<title>Test Resiliency Using Failure Injection - Optional steps</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/8_failure_injection_optional/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/8_failure_injection_optional/</guid>
<description>The following are optional lab steps you may run to further explore failure injection 8.1 S3 failure injection Failure of S3 means that the image will not be available You may ONLY do this testing if you supplied your own websiteimage reference to an S3 bucket you control 8.1.1 Bucket name You will need to know the bucket name where your image is. For example if the websiteimage value you supplied was &quot;https://s3.</description>
</item>
<item>
<title>References & useful resources</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/8_resources/</link>
<pubDate>Wed, 18 Nov 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_fault_isolation_with_shuffle_sharding/8_resources/</guid>
<description>AWS re:Invent 2019: Introducing The Amazon Builders’ Library (DOP328) Amazon Builders' Library: Workload isolation using shuffle sharding AWS re:Invent 2018: Architecture Patterns for Multi-Region Active-Active Applications (ARC209-R2) AWS re:Invent 2018: How AWS Minimizes the Blast Radius of Failures (ARC338) AWS re:Invent 2019: Innovation and operation of the AWS global network infrastructure (NET339) AWS Well-Architected Best Practices Use bulkhead architectures: Like the bulkheads on a ship, this pattern ensures that a failure is contained to a small subset of requests/users so that the number of impaired requests is limited, and most can continue without error.</description>
</item>
<item>
<title>Clean Up</title>
<link>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/cleanup/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/100_labs/100_migrate_services_to_graviton/100_migrate_rds_to_graviton/cleanup/</guid>
<description>Migration Methodologies Preparation Lab 1 - Change Database Instance Type Lab 2 - Promote Read Replica Lab 3 - Failover to Read Replica Lab 4 - Restore from snapshot Cleanup In the RDS Console delete all the created databases NOTE: Because these are lab databases we will delete all the databases with their associated backups and will not create a final snapshot. Normally it would be highly recommended to create a final snapshot.</description>
</item>
<item>
<title>Cleanup</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/cleanup/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_cur_reports_as_efficiency_reports/cleanup/</guid>
<description>To cleanup the resources created by this lab, please follow these steps: Delete the AWS Cost &amp; Usage Report in the billing console if you have created one for Lab 1.1. Empty and delete the Amazon S3 bucket if you have created one to store the sample CUR data for Lab 1.1. Go to the AWS CloudFormation console in the region in which you deployed the AWS Serverless Application Repository application in Lab 1.</description>
</item>
<item>
<title>Review Sustainability KPI Optimization</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/7_review_sustainability_kpi_optimization/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/7_review_sustainability_kpi_optimization/</guid>
<description>Lab 7 With optimization completed in the previous lab, let’s follow below steps on the consumer cluster to measure the improvement on our sustainability KPI: Connect to the consumer cluster in us-west-1 region, and click/expand on “consumer_marketing”. You can see in the tool tip that it is a datashare which is connected to a producer cluster. All the tables listed below are from producer cluster. Now, let check if the consumer cluster is storing any tables locally in the database by running below query: SELECT SUM(size) FROM SVV_TABLE_INFO WHERE &#34;table&#34; NOT LIKE &#39;%auto%&#39;; The above query did not return any table size, which means that the consumer database does not have any tables locally, hence not consuming any data storage to store the tables.</description>
</item>
<item>
<title>Global Queries</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/global/</link>
<pubDate>Sun, 27 Sep 2020 06:36:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/global/</guid>
<description>These are queries which return information about global usage. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run. For example, if your CUR table is called cur_table and is in a database called cur_db, you would replace ${table_name} with cur_db.</description>
</item>
<item>
<title>Modules</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/_moduels/</link>
<pubDate>Mon, 07 Sep 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/_moduels/</guid>
<description>Last Updated October 2022 If you wish to provide feedback on this lab, there is an error, or you want to make a suggestion, please email: costoptimization@amazon.com Data Collection Modules Below are the modules we have available in this lab. You can read more about them by expanding the sections. You have selected your chosen modules in the Deploy Main Resources section so no action is needed. AWS Organization Data Export AWS Organization Data This module will extract the data from AWS Organizations, such as account ID, account name, organization parent and all tags.</description>
</item>
<item>
<title>Enable AWS-Generated Cost Allocation Tags</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/8_cost_tags/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/8_cost_tags/</guid>
<description>Enabling AWS-Generated Cost Allocation Tags, generates a cost allocation tag containing resource creator information. This is automatically applied to resources that are created, and allows you to view and allocate costs based on who created a resource. Log in to your Management Account as an IAM user with the required permissions, and go to the Billing console: Select Cost Allocation Tags from the left menu: Click on AWS-generated cost allocation tags: Select aws:createdBy tag key and click on Activate to enable the tag: Click on Activate to confirm that you want to activate the tag: You will see that it is activated: function prevStep(){ window.</description>
</item>
<item>
<title>Query logs from S3 using Athena</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/8_query_from_athena/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/8_query_from_athena/</guid>
<description>With your log data now stored in S3, you will utilize Amazon Athena - a serverless interactive query service. You will run SQL queries on your log files to extract information from them. In this section, we will focus on the Apache access logs, although Athena can be used to query any of your log files. It is possible to query your log data from CloudWatch Insights, however, Athena querying allows you to pull data from files stored in S3, as well as other sources, where Insights only allows to query data in CloudWatch.</description>
</item>
<item>
<title>Removing Lab Resources</title>
<link>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/8_cleanup/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/operational-excellence/100_labs/100_inventory_patch_management/8_cleanup/</guid>
<description>NoteWhen the lab is complete, remove the resources you created. Otherwise you will be charged for any resources that are not covered in the AWS Free Tier. 7.1 Remove resources created with CloudFormation Navigate to the CloudFormation dashboard at https://console.aws.amazon.com/cloudformation/: Select your first stack. Choose Actions and choose delete stack. Select your second stack. Choose Actions and choose delete stack . Navigate to Systems Manager console at https://console.</description>
</item>
<item>
<title>Data Transfer</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/8_data_transfer/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/8_data_transfer/</guid>
<description>Data Transfer Data transfer modelling Goal: Reduce unnecessary data transfer Target: Data transfer pattern between 1st &amp; 2nd tier, must be within 10% of the pattern between the internet and 1st tier Best Practice: Data transfer modelling Measures: Number of reports delivered, number of teams delivering Good/Bad: Bad Why? When does it work well or not?: Hard to convert to $, but it could help to indicate there is an issue - but again hard to quantify the cost of the issue Contact/Contributor: costoptimization@amazon.</description>
</item>
<item>
<title>Index File</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/indexfile/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/indexfile/</guid>
<description>This file is generated automatically file Commit Date File Modified Date Commit Hash connect.sql 2021-04-22 2021-04-25 5faff1d ecs_eks.sql 2021-04-21 2021-04-25 b7d7b1c ecs_hours_day.sql 2021-04-21 2021-04-25 b7d7b1c account_spend_of_shared_sp.sql 2021-04-21 2021-04-25 44e118f compute_sp.sql 2021-04-21 2021-04-25 44e118f ec2_sp_inventory.sql 2021-04-21 2021-04-25 44e118f ec2_total_spend.sql 2021-04-21 2021-04-25 44e118f ec2ricoverage.sql 2021-04-21 2021-04-25 44e118f ec2runninghours.</description>
</item>
<item>
<title>Tear down this lab</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/9_cleanup/</link>
<pubDate>Tue, 14 Sep 2021 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/9_cleanup/</guid>
<description>If you are attending an in-person workshop and were provided with an AWS account by the instructor: There is no need to tear down the lab. Feel free to continue exploring. Log out of your AWS account when done. If you are using your own AWS account: You may leave these resources deployed for as long as you want. When you are ready to delete these resources, see the following instructions Delete S3 Bucket used by canary The canary (synthetic monitor) puts its run data into an S3 bucket.</description>
</item>
<item>
<title>Cleanup</title>
<link>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/cleanup/</link>
<pubDate>Wed, 18 Nov 2020 09:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/sustainability/300_labs/300_optimize_data_pattern_using_redshift_data_sharing/cleanup/</guid>
<description>To avoid incurring further costs for AWS resources, let’s delete the Amazon Redshift clusters in both regions. Login to AWS console, and go to the Amazon Redshift service. Then follow the below steps in each region to delete producer (us-east-1 region) and consumer (us-west-1 region) clusters: Select the cluster in respective region, and select Delete from Actions menu: To confirm deletion, type in “delete” in the field at the bottom (make sure, you do not check Create final snapshot button as it will incur cost for the storage of the snapshot), and click Delete cluster.</description>
</item>
<item>
<title>Machine Learning</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/machine_learning/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/machine_learning/</guid>
<description>These are queries for AWS Services under the Machine Learning product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Configure Monthly Reports (Optional)</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/9_monthly_report/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/9_monthly_report/</guid>
<description>It is possible to enable a CSV version of your summary cost and usage information called &ldquo;Monthly Report. This is typically used by customers looking to analyze their costs in a spreadsheet format with ease of use. This is part of a legacy feature called &ldquo;Detailed Billing Reports,&rdquo; but is used across many organizations for bill validations. Once setup, it will take up to 24 hours to create a file for your most recent bill.</description>
</item>
<item>
<title>Create a QuickSight Visualization</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/9_create_quicksight_dashboard/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/9_create_quicksight_dashboard/</guid>
<description>Amazon QuickSight is a Business Intelligence service that allows you to streamline delivery of data insights. Prior to building out a dashboard, you need to prepare QuickSight by creating an account and linking your table from Athena. Using QuickSight, you will build out a dashboard to display responses to site visits on your website. Open the QuickSight console. If this is your first time accessing QuickSight, you will need to create your QuickSight account.</description>
</item>
<item>
<title>Manage Demand & Supply Resources</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/9_manage_demand_supply/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/9_manage_demand_supply/</guid>
<description>Manage Demand, and Supply Resources Supply resources dynamically Demand vs Supply Goal: Minimize unused resources Target: Workload resourcing should only deviate by a maximum of $x from workload demand Best Practice: Dynamic-based supply Measures: Deviation % and $ Good/Bad: Good Why? When does it work well or not?: Ensure there is not an excess of resources compared to the workload demand, and if there is variable demand that the resourcing follows this closely.</description>
</item>
<item>
<title>Management & Governance</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/management__governance/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/management__governance/</guid>
<description>These are queries for AWS Services under the Management &amp; Governance product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Backup Region</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/backupregion/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/backupregion/</guid>
<description>Backup Region In this section we&rsquo;ll deploy necessary infrastructure to the backup region to support data backup and workload failover. S3 bucket for templates First, create an S3 bucket to hold the CloudFormation templates. We&rsquo;ll call this the TEMPLATEBUCKET. Choose a globally unique bucket name that adheres to the bucket naming rules. aws s3 mb s3://&lt;TEMPLATEBUCKET&gt; --region &lt;REGION&gt; aws s3api put-bucket-versioning --bucket &lt;TEMPLATEBUCKET&gt; --versioning-configuration Status=Enabled Download and review scripts and templates Download the following files:</description>
</item>
<item>
<title>Backup Region Infrastructure</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failover/backupinfra/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failover/backupinfra/</guid>
<description>Workload in the Backup Region If we&rsquo;ve decided to fail over to the backup region, the first thing we need to do is deploy the rest of the workload in the backup region. Download and review scripts and templates Download the following files: create-dr-infra.sh dr-infra.yaml Review these files and adjust any of the input parameters to suit your needs. In your working directory, place create-dr-infra.sh in a directory called scripts and place the file dr-infra.</description>
</item>
<item>
<title>Prerequisites</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/gettingstarted/account/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/gettingstarted/account/</guid>
<description>Prerequisites To run this workshop, you need an AWS account, and a user identity with access to the following services: Glue S3 Athena DynamoDB Global Accelerator EC2 and ELB Lambda Kinesis You can use your own account, or an account provided through Event Engine as part of an AWS organized workshop. Using an account provided by Event Engine is the easier path, as you will have full access to all AWS services, and the account will terminate automatically when the event is over.</description>
</item>
<item>
<title>Recreate DynamoDB</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/recreatedynamodb/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/recreatedynamodb/</guid>
<description>Recreate DynamoDB When failing back to the primary region, we need to get the latest data from the DynamoDB table in the backup region into the table in the primary region. We&rsquo;ll do this by restoring the table from the backup region. Note that using DynamoDB Global Tables is a more convenient way to handle multi-region scenarios with DynamoDB, but in this example we&rsquo;ll use the less convenient but more cost effective approach of relying on backups.</description>
</item>
<item>
<title>Redirect Traffic</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/traffic/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/traffic/</guid>
<description>Redirecting traffic to primary region Execute the SSM automation document failback_runbook. You&rsquo;ll need to provide this input: BackupGroupArn: Set this to the ARN of the Global Accelerator endpoint group that points to the backup region. function prevStep(){ window.open("..\/recreatedynamodb", "_self") } function nextStep(){ window.open("..\/resync", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Lab complete! Now that you have completed this lab, make sure to update your Well-Architected review if you have implemented these changes in your workload.</description>
</item>
<item>
<title>Lab Recap</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/10_recap/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/10_recap/</guid>
<description>In this lab, you explored Well-Architected security best practices in the context of monitoring application and system logs. First, you deployed a CloudFormation template containing an EC2 web server instance, an S3 bucket, and networking infrastructure for the lab. Then, you installed, configured, and started up the CloudWatch agent remotely. Using Systems Manager Run Command demonstrates the best practices of “enabling people to perform actions at a distance” and “reducing attack surface” by enabling you to close ports on your instance and avoid having to SSH directly into it.</description>
</item>
<item>
<title>Tear down</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/10_tear_down/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_1_aws_account_setup/10_tear_down/</guid>
<description>This exercise covered fundamental steps that are required for all AWS accounts to enable Cost Optimization. There is no specific tear down for this lab. Cancel your QuickSight subscription To cancel your QuickSight subscription follow the steps below. Click on your profile icon in the top right, select Manage QuickSight: Click on Account settings: Click on Unsubscribe: Review the notifications, click Unsubscribe: function prevStep(){ window.</description>
</item>
<item>
<title>Evaluate New Services</title>
<link>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/10_evaluate_new_services/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/100_labs/100_goals_and_targets/10_evaluate_new_services/</guid>
<description>Evaluate new services Develop a workload review process Goal: Perform Well-Architected reviews throughout a workloads lifecycle Target: For Tier1 workloads each stage has a full review, for Tier2 and below workloads the minimum requirement is: In the development stage review Security, Reliability and Operational Excellence. In Performance test review Performance Efficiency and Cost Optimization. Best Practice: Optimize Over Time Measures: % of workloads reviewed in each stage Good/Bad: Good Why?</description>
</item>
<item>
<title>Networking & Content Delivery</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/networking__content_delivery/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/networking__content_delivery/</guid>
<description>These are queries for AWS Services under the Networking &amp; Content Delivery product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Lab Teardown</title>
<link>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/11_teardown/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/security/200_labs/200_remote_configuration_installation_and_viewing_cloudwatch_logs/11_teardown/</guid>
<description>Deleting the QuickSight visualization Visit the QuickSight console. On the home screen, click the three dots under the analysis called security_lab_apache_access_log.... Click Delete, and click Delete again on the screen that pops up. Next, click on the Manage data button in the top right corner of the page. Under Your Data Sets, click on security_lab_apache_acc.... Click Delete data set and click Delete on the pop up window. Deleting Athena database/table.</description>
</item>
<item>
<title>Developer Tools</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/developer_tools/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/developer_tools/</guid>
<description>These are queries for AWS Services under the Developer Tools family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run. For example, if your CUR table is called cur_table and is in a database called cur_db, you would replace ${table_name} with cur_db.</description>
</item>
<item>
<title>Security, Identity, & Compliance</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/security_identity__compliance/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/security_identity__compliance/</guid>
<description>These are queries for AWS Services under the Security, Identity, &amp; Compliance product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run.</description>
</item>
<item>
<title>Storage</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/storage/</link>
<pubDate>Fri, 28 Aug 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/queries/storage/</guid>
<description>These are queries for AWS Services under the Storage product family. Use the clipboard in the top right of the text boxes below to copy all of the text to be pasted. CUR Query Library uses placeholder variables, indicated by a dollar sign and curly braces (${ }). ${table_name} and ${date_filter} are common placeholder variables used throughout CUR Query Library, which must be replaced before a query will run. For example, if your CUR table is called cur_table and is in a database called cur_db, you would replace ${table_name} with cur_db.</description>
</item>
<item>
<title>Cleanup</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/next/cleanup/</link>
<pubDate>Tue, 28 Apr 2020 10:16:11 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/next/cleanup/</guid>
<description>If you used an account provided by Event Engine, you do not need to do any cleanup. The account terminates when the event is over. If you used your own account, please remove the three CloudFormation stacks you deployed. function prevStep(){ window.open("..\/..\/next\/", "_self") } function nextStep(){ window.open("\/cost\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Congratulations! Now that you have completed the lab, if you have implemented this knowledge in your environment, you should re-evaluate the questions in the Well-Architected tool.</description>
</item>
<item>
<title>CUR Query Building</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/query_help/query-building/</link>
<pubDate>Wed, 12 May 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/query_help/query-building/</guid>
<description>Last Updated May 2021 Feedback If you wish to provide feedback on this lab, there is an error, or you want to make a suggestion, please email: curquery@amazon.com Introduction This lab will demonstrate the basic principles for constructing a basic CUR query. The skills you learn will help you construct your own CUR queries or modify queries already in use. While this lab cannot cover every use case for cost and usage analysis, many AWS services follow similar CUR logic and can be easily adapted.</description>
</item>
<item>
<title>Library Contribution Guide</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/query_help/contribution-guide/</link>
<pubDate>Wed, 13 Jan 2021 00:00:01 -0500</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/query_help/contribution-guide/</guid>
<description>Contribution Process For ease of use and education, it is crucial we maintain uniformity and consistency. To contribute your query please follow the steps below: Develop your query following the CUR Library Style Guide rules defined below Execute and validate the query using your own Cost and Usage Report Validate your query results against your Cost Explorer Save your query as a .sql file without underscores as seperators (i.e. rds_mysql_engine_query.</description>
</item>
<item>
<title>Architecture</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/gettingstarted/architecture/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/gettingstarted/architecture/</guid>
<description>Architecture In this workshop we&rsquo;ll work with a typical Big Data workload with streaming ingest and batch processing. Ingest Our data source is streaming data coming from external applications. We present a Global Accelerator endpoint for the producers to send data to. The endpoint is serviced in a particular region by a Lambda function behind an Application Load Balancer. The Lambda function relays the data to a Kinesis stream. Batch Processing Once the data lands in a Kinesis stream, the batch processing flow picks up with a Firehose landing the data in S3.</description>
</item>
<item>
<title>Endpoint Switch</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failover/endpoint/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failover/endpoint/</guid>
<description>Switching the endpoint Now we&rsquo;re ready to reconfigure the Global Accelerator endpoint. Go to the Systems Manager console in the primary region and execute the automation document called failover_runbook. You&rsquo;ll need to pass in two inputs: BackupRegion: Set this to your backup region, e.g. us-east-2 BackupEndpoint: Set this to the ARN of the backup ALB. function prevStep(){ window.open("..\/backupinfra", "_self") } function nextStep(){ window.open("..\/verify", "_self") } function togglePopup(){ document.</description>
</item>
<item>
<title>Primary Region</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/primaryregion/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/primaryregion/</guid>
<description>Primary Region In this section we&rsquo;ll deploy the workload to the primary region. Create a prefix list for ingress Follow the instructions to create a VPC prefix list that specifies the CIDR ranges for ingress. We use this prefix list to control access to lab resources from an approved network block. If you are using an Event Engine account, you can create a prefix list that just contains 0.0.0.0/0. Download and review scripts and templates Download the following files:</description>
</item>
<item>
<title>Remove Redundant Infrastructure</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/removeinfra/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/removeinfra/</guid>
<description>Removing redundant infrastructure Delete the infrastructure stack (BackupRestoreInfra) from the backup region. In our simple example, leaving this infrastructure in place wouldn&rsquo;t do any harm, other than resulting in some unnecessary expense. But in a more complex scenario you might have scheduled jobs running that would conflict with replicated data coming from the primary region. You can leave this stack in place for a time if you want to ensure that the workload is running properly in the primary region, but at some point you&rsquo;ll want to remove it to eliminate unnecessary cost.</description>
</item>
<item>
<title>CUR Query Library Contributors</title>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/query_help/contributors/</link>
<pubDate>Mon, 24 Aug 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_cur_queries/query_help/contributors/</guid>
<description>Introduction The CUR Library is intended to be an open source library of Cost &amp; Usage Reports queries that can be shared. We want to thank all contributors both from Amazon and External parties for helping make this a robust tool for navigating the CUR. Library Authors Chris Strzelczyk, Sr. TAM, AWS Enterprise Support Bill Pfeiffer, Sr. TAM, AWS Enterprise Support Stephanie Gooch, Cost Optimization Lead, AWS OPTICS Matthew Brend, Enterprise Support Lead, AWS Enterprise Support Jonathan Banas, Sr.</description>
</item>
<item>
<title>Resync Data</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/resync/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failback/resync/</guid>
<description>Data synchronization We run an inventory in the backup bucket on a daily basis. We can use that to find files that were written directly into the backup bucket rather than through replication. Then we can sync these files back to the primary region. Let&rsquo;s start with the raw files. In Athena, run this query in the backup region: MSCK REPAIR TABLE inventory; Note that you must wait for an inventory schedule to complete before you see data in this table.</description>
</item>
<item>
<title>Test Workload</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/testworkload/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/settingup/testworkload/</guid>
<description>Test the Workload In this section we&rsquo;ll make sure that the workload is running properly, and that data is replicating to the backup region. We use a python script to simulate a stream of incoming tweets. Open a Session Manager connection to the EC2 instance sample producer in the primary region. You can find the instance ID and the Global Accelerator DNS endpoint in the CloudFormation output. Open the EC2 console and navigate to Instances.</description>
</item>
<item>
<title>Verify Failover</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failover/verify/</link>
<pubDate>Tue, 28 Apr 2020 10:02:27 -0600</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_backup_restore_failback_analytics/failover/verify/</guid>
<description>Verifying failover If you run the sample producer, you&rsquo;ll now see data going directly into the backup bucket in the backup region, rather than the primary region. function prevStep(){ window.open("..\/endpoint", "_self") } function nextStep(){ window.open("..\/..\/failback", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Lab complete! Now that you have completed this lab, make sure to update your Well-Architected review if you have implemented these changes in your workload.</description>
</item>
<item>
<title>Builders Guide for 300 - Testing for Resiliency of EC2, RDS, and S3</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/builders_guide/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/builders_guide/</guid>
<description>Introduction This guide contains the instructions for how to build the Lambda functions, the web application, and the modifications needed for the AWS CloudFormation templates' parameters as well as the JSON passed to the AWS Step Functions state machine to perform the deployment. This guide will also give some specific instructions on the limitations of how you can deploy and what AWS regions it can be run in. Prerequisites An AWS Account that you are able to use for tesintg, that is not used for production or other purposes.</description>
</item>
<item>
<title>Troubleshooting Guide for 300 - Testing for Resiliency of EC2, RDS, and S3</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/troubleshooting_guide/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/troubleshooting_guide/</guid>
<description>Introduction The purpose of this guide is to prepare for the expected questions and problems. Common AWS Account Problems If running these labs on your own, you will need to use an AWS account that meets the following qualifications. If you are at a live workshop, you may have been supplied with an AWS account for the lab. If not, and you cannot remedy your account issues, please see a proctor who can help pair you with another student who does have these permissions and you can “pair lab”.</description>
</item>
<item>
<title>Availability Zone (AZ) Failure Injection Has Been Moved</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/6_failure_injection_az/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/6_failure_injection_az/</guid>
<description> Go here for AZ failure injection function prevStep(){ window.open("..\/5_failure_injection_rds", "_self") } function nextStep(){ window.open("..\/7_failure_injection_az\/", "_self") } function togglePopup(){ document.getElementById("prevnext-1").classList.toggle("active"); } X Lab complete! Now that you have completed this lab, make sure to update your Well-Architected review if you have implemented these changes in your workload. Click here to access the Well-Architected Tool Previous Step Next Step</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_ebs_snap_view/</link>
<pubDate>Sun, 16 Jan 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_ebs_snap_view/</guid>
<description>KPI EBS Snap View This view will be used to create the KPI EBS Snap view that is used to analyze EBS snap metrics and potential savings opportunities. There is only one version of this view and it is not dependent on if you have or do not have Reserved Instances or Savings Plans. Create View Click here to expand the view Modify the following SQL query for the KPI EBS Snap view:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_ebs_storage_all_view/</link>
<pubDate>Sun, 16 Jan 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_ebs_storage_all_view/</guid>
<description>KPI EBS Storage All View This view will be used to create the KPI EBS Storage All view that is used to analyze EBS storage metrics and potential savings opportunities. There is only one version of this view and it is not dependent on if you have or do not have Reserved Instances or Savings Plans. Create View Click here to expand the view Modify the following SQL query for the KPI EBS Storage All view:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_instance_all_view/</link>
<pubDate>Sun, 16 Jan 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_instance_all_view/</guid>
<description>KPI Instance All View This view will be used to create the KPI Instance All view that is used to analyze all EC2, RDS, ElastiCache, OpenSearch, Sagemaker, DynamoDB, Redshift, Lambda, and Fargate Metrics. metrics and potential savings opportunities. There are fours versions of this view and it is dependent on if you have or do not have Reserved Instances or Savings Plans. Use one of the following queries depending on whether you have Reserved Instances or Savings Plans.</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_s3_storage_all_view/</link>
<pubDate>Sun, 16 Jan 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_s3_storage_all_view/</guid>
<description>KPI S3 Storage All View This view will be used to create the KPI S3 Storage All view that is used to analyze S3 storage metrics and potential savings opportunities. There is only one version of this view and it is not dependent on if you have or do not have Reserved Instances or Savings Plans. Create View Click here to expand the view Modify the following SQL query for the KPI S3 Storage All view:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_tracker_view/</link>
<pubDate>Sun, 16 Jan 2022 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_tracker_view/</guid>
<description>KPI Tracker View This view will be used to create the KPI Tracker view that is used to combine the all the different KPI views and the summary view into a single view so that all KPI metrics can be in a single visual. There is only one version of this view and it is not dependent on if you have or do not have Reserved Instances or Savings Plans.</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/6_view6/</link>
<pubDate>Mon, 15 Mar 2021 10:00:02 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/6_view6/</guid>
<description>View 6 - Customer_All The customer_all view is used to direct query a small portion of the full cost and usage report. Click here - to create your customer_all view Modify the following SQL query for View0 - Account Map: On line 5, replace (database.table_name) with your Cost &amp; Usage Report database and table name CREATE OR REPLACE VIEW customer_all AS SELECT * FROM (database.</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/7_view7/</link>
<pubDate>Mon, 15 Mar 2021 10:00:02 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/7_view7/</guid>
<description>Data Transfer View This view will be used to create the main Data Transfer Cost Analysis dashboard page. We recommend large customers with over 500 linked accounts, or more than $5M a month in invoiced cost, display 1 or 2 months previous data instead of 3. Modify the INTERVAL in the statements below to less than 3 months for improved performance. Create View Click here - to expand data transfer view query OR Modify the following SQL query for data_transfer_view:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/6_view6/</link>
<pubDate>Mon, 15 Mar 2021 10:00:02 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/6_view6/</guid>
<description>Data Transfer View This view will be used to create the main Data Transfer Cost Analysis dashboard page. We recommend large customers with over 500 linked accounts, or more than $5M a month in invoiced cost, display 1 or 2 months previous data instead of 3. Modify the INTERVAL in the statements below to less than 3 months for improved performance. Click here - to expand data transfer view query OR Modify the following SQL query for data_transfer_view:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/6_view6/</link>
<pubDate>Thu, 06 Aug 2020 10:00:02 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/6_view6/</guid>
<description>Data Transfer View This view will be used to create the main Data Transfer Cost Analysis dashboard page. We recommend large customers with over 500 linked accounts, or more than $5M a month in invoiced cost, display 1 or 2 months previous data instead of 3. Modify the INTERVAL in the statements below to less than 3 months for improved performance. Click here - to expand data transfer view query OR Modify the following SQL query for data_transfer_view:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/0_view0/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/0_view0/</guid>
<description>View 0 - Account Map The Cost &amp; Usage Report data doesn&rsquo;t contain account names and other business or organization specific mapping so the first view you will create is a view that enhances your CUR data. There are a few options you can leverage to create your account_map view to provide opportunities to leverage your existing mapping tables, organization information, or other business mappings allows for deeper insights. This view will be used to create the Account_Map for your dashboards.</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/1_view1/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/1_view1/</guid>
<description>View 1 - Summary View This view is the main dataset used in the your dashboards and is the foundation view for your dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Create View We recommend large customers with over 500 linked accounts or more than $10M a month in invoiced cost update the usage date field in the query from &lsquo;day&rsquo; to &lsquo;month&rsquo; for improved performance</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/2_view2/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/2_view2/</guid>
<description>View 2 - EC2 Running Costs This view will be used to create the EC2 Running Costs dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Create View Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View2 - EC2_Running_Cost: Update line 17 replace (database).</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/3_view3/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/3_view3/</guid>
<description>View 3 - Compute Savings Plan Eligible Spend This view will be used to create the Compute Savings Plan Eligible Spend dashboard page. Create View Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View3 - Compute Savings PlaneEligible spend: Update line 22, replace (database).(tablename) with your CUR database and table name CREATE OR REPLACE VIEW &quot;compute_savings_plan_eligible_spend&quot; AS SELECT DISTINCT &quot;year&quot; , &quot;month&quot; , &quot;bill_payer_account_id&quot; &quot;payer_account_id&quot; , &quot;line_item_usage_account_id&quot; &quot;linked_account_id&quot; , &quot;bill_billing_period_start_date&quot; &quot;billing_period&quot; , &quot;date_trunc&quot;('hour', &quot;line_item_usage_start_date&quot;) &quot;usage_date&quot; , &quot;sum&quot;(CASE WHEN ((((&quot;line_item_line_item_type&quot; = 'Usage') AND (NOT (&quot;line_item_usage_type&quot; LIKE '%Spot%'))) AND (&quot;product_servicecode&quot; &lt;&gt; 'AWSDataTransfer')) AND (&quot;line_item_usage_type&quot; NOT LIKE '%DataXfer%')) THEN CASE WHEN ((&quot;line_item_product_code&quot; = 'AmazonEC2') AND (&quot;line_item_operation&quot; LIKE '%RunInstances%')) THEN &quot;line_item_unblended_cost&quot; WHEN ((&quot;line_item_product_code&quot; = 'AWSLambda') AND (&quot;line_item_usage_type&quot; LIKE '%Lambda-Provisioned-GB-Second%')) THEN &quot;line_item_unblended_cost&quot; WHEN ((&quot;line_item_product_code&quot; = 'AWSLambda') AND (&quot;line_item_usage_type&quot; LIKE '%Lambda-GB-Second%')) THEN &quot;line_item_unblended_cost&quot; WHEN ((&quot;line_item_product_code&quot; = 'AWSLambda') AND (&quot;line_item_usage_type&quot; LIKE '%Lambda-Provisioned-Concurrency%')) THEN &quot;line_item_unblended_cost&quot; WHEN (&quot;line_item_usage_type&quot; LIKE '%Fargate%') THEN &quot;line_item_unblended_cost&quot; ELSE 0 END ELSE 0 END) &quot;unblended_cost&quot; FROM (database).</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/4_view4/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/4_view4/</guid>
<description>View 4 - S3 This view will be used to create the S3 dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Create View Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View4 - S3:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_instance_mapping_view/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/kpi_instance_mapping_view/</guid>
<description>KPI Instance Mapping View This view will be used to create the KPI Instance Mapping view that is used to identify instance families with Graviton and/or AMD options as well as create an adjusted generation mapping. There is only one version of this view and it is not dependent on if you have or do not have Reserved Instances or Savings Plans. Create View Click here to expand the view Use the following SQL query for the KPI Instance Mapping View:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/1_view1/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/1_view1/</guid>
<description>View 1 - Summary View This view will be used to create the main Usage Cost Summary dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. We recommend large customers with over 500 linked accounts or more than $10M a month in invoiced cost update the usage date field in the query from &lsquo;day&rsquo; to &lsquo;month&rsquo; for improved performance Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View1:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/2_view2/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/2_view2/</guid>
<description>View 2 - EC2 Running Costs This view will be used to create the EC2 Running Costs dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View2 - EC2_Running_Cost: Update line 17 replace (database).(tablename) with your CUR database and table name</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/3_view3/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/3_view3/</guid>
<description>View 3 - Compute Savings Plan Eligible Spend This view will be used to create the Compute Savings Plan Eligible Spend dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View3 - Compute Savings PlaneEligible spend: Update line 22, replace (database).</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/4_view4/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/4_view4/</guid>
<description>View 4 - S3 This view will be used to create the S3 dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View4 - S3: Update line 22, replace (database).(tablename) with your CUR database and table name</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/1_view1/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/1_view1/</guid>
<description>View 1 - Summary View This view will be used to create the main Usage Cost Summary dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. We recommend large customers with over 500 linked accounts or more than $10M a month in invoiced cost update the usage date field in the query from &lsquo;day&rsquo; to &lsquo;month&rsquo; for improved performance Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View1:</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/2_view2/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/2_view2/</guid>
<description>View 2 - EC2 Running Costs This view will be used to create the EC2 Running Costs dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View2 - EC2_Running_Cost: Update line 17 replace (database).(tablename) with your CUR database and table name</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/3_view3/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/3_view3/</guid>
<description>View 3 - Compute Savings Plan Eligible Spend This view will be used to create the Compute Savings Plan Eligible Spend dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View3 - Compute Savings PlaneEligible spend: Update line 23, replace (database).</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/4_view4/</link>
<pubDate>Sun, 26 Jul 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/4_view4/</guid>
<description>View 4 - S3 This view will be used to create the S3 dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View4 - S3: Update line 22, replace (database).(tablename) with your CUR database and table name</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/code/iam_policy/</link>
<pubDate>Fri, 24 Apr 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_2_cost_and_usage_governance/code/iam_policy/</guid>
<description>Users will require the following access to complete this lab. Edit the policy below before implementation, replace (Account ID) with the required account ID from the account they will work in. Ensure you remove this policy after the lab is completed. This Policy is only required to complete this lab. It must be removed from the users and delted once the lab is complete. { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;iam:ListPolicies&quot;, &quot;iam:GetPolicyVersion&quot;, &quot;iam:CreateGroup&quot;, &quot;iam:GetPolicy&quot;, &quot;iam:DeletePolicy&quot;, &quot;iam:DetachGroupPolicy&quot;, &quot;iam:ListGroupPolicies&quot;, &quot;iam:AttachUserPolicy&quot;, &quot;iam:CreateUser&quot;, &quot;iam:GetGroup&quot;, &quot;iam:CreatePolicy&quot;, &quot;iam:CreateLoginProfile&quot;, &quot;iam:AddUserToGroup&quot;, &quot;iam:ListPolicyVersions&quot;, &quot;iam:AttachGroupPolicy&quot;, &quot;iam:ListUsers&quot;, &quot;iam:ListAttachedGroupPolicies&quot;, &quot;iam:ListGroups&quot;, &quot;iam:GetGroupPolicy&quot;, &quot;iam:CreatePolicyVersion&quot;, &quot;iam:DeletePolicyVersion&quot;, &quot;iam:GetLoginProfile&quot;, &quot;iam:GetAccountPasswordPolicy&quot;, &quot;iam:DeleteLoginProfile&quot; ], &quot;Resource&quot;: &quot;*&quot; }, { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;iam:*&quot;, &quot;Resource&quot;: &quot;arn:aws:iam::(Account ID):user/TestUser1&quot; }, { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;iam:*&quot;, &quot;Resource&quot;: &quot;arn:aws:iam::(Account ID):group/costtest&quot; }, { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;iam:*&quot;, &quot;Resource&quot;: [ &quot;arn:aws:iam::(Account ID):policy/RegionRestrict&quot;, &quot;arn:aws:iam::(Account ID):policy/EC2EBS_Restrict&quot;, &quot;arn:aws:iam::(Account ID):policy/EC2_FamilyRestrict&quot; ] }, { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;ec2:DeleteSecurityGroup&quot;, &quot;Resource&quot;: &quot;arn:aws:ec2:*:*:security-group/*&quot; }, { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;ec2:DeleteVolume&quot;, &quot;Resource&quot;: &quot;arn:aws:ec2:*:*:volume/*&quot; }, { &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;ec2:ModifyVolume&quot;, &quot;ec2:ModifyVolumeAttribute&quot;, &quot;ec2:DescribeVolumeStatus&quot;, &quot;ec2:DescribeVolumes&quot;, &quot;ec2:DescribeVolumesModifications&quot;, &quot;ec2:DescribeVolumeAttribute&quot;, &quot;ec2:DescribeAvailabilityZones&quot; ], &quot;Resource&quot;: &quot;*&quot; } ] }</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/5_view5/</link>
<pubDate>Fri, 24 Apr 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_cloud_intelligence/cost-usage-report-dashboards/dashboards/code/5_view5/</guid>
<description>View 5 - RI SP Mapping This view will be used to create the RI SP Mapping dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Create View Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View5 - RI SP Mapping: Update line 21 to replace (database).</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/5_view5/</link>
<pubDate>Fri, 24 Apr 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/200_labs/200_enterprise_dashboards/code/5_view5/</guid>
<description>View 5 - RI SP Mapping This view will be used to create the RI SP Mapping dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View5 - RI SP Mapping: Update lines 23 and 44, replace (database).</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/5_view5/</link>
<pubDate>Fri, 24 Apr 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_optimization_data_collection/code/5_view5/</guid>
<description>View 5 - RI SP Mapping This view will be used to create the RI SP Mapping dashboard page. Use one of the following queries depending on whether you have Reserved Instances, or Savings Plans. Click here - if you have both Savings Plans and Reserved Instances Modify the following SQL query for View5 - RI SP Mapping: Update lines 23 and 44, replace (database).</description>
</item>
<item>
<title>Install AWS Tools for Powershell</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/tools_for_powershell/</link>
<pubDate>Tue, 28 Sep 2021 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/tools_for_powershell/</guid>
<description>The AWS documentation for AWS Tools for Powershell is here: https://aws.amazon.com/powershell/ If you run into trouble using the instructions below, please consult the AWS documentation. Open Windows PowerShell using Run as administrator If you have not done so already, setup your AWS credentials Configure your AWS credentials with the following PowerShell commands. Note that if you are using an instructor supplied AWS account, you must include the SessionToken flag and value as shown below in brackets (omit the brackets when running the command): Set-AWSCredentials -AccessKey &lt;Your access key&gt; -SecretKey &lt;Your secret key&gt; ` [ -SessionToken &lt;your session key&gt; ] -StoreAs &lt;SomeProfileName&gt; Initialize-AWSDefaults -ProfileName &lt;SomeProfileName&gt; -Region us-east-2 Run the following commands to install these respective packages using PowerShellGet.</description>
</item>
<item>
<title>CloudFormation Parameters</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/cfn_parameters/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/cfn_parameters/</guid>
<description>All entries are Case-Sensitive single region stack Parameter Default Value CreateTheAutoScalingServiceRole true CreateTheELBServiceRole true CreateTheRDSServiceRole true LambdaFunctionsBucket aws-well-architected-labs-ohio RDSLambdaKey Reliability/RDSLambda.zip VPCLambdaKey Reliability/Reliability/VPCLambda.zip WaitForStackLambdaKey Reliability/WaitForStack.zip WebAppLambdaKey Reliability/WebAppLambda.zip multi region stack Parameter Default Value CreateTheAutoScalingServiceRole true CreateTheELBServiceRole true CreateTheRDSServiceRole true DMSLambdaKey Reliability/DMSLambda.</description>
</item>
<item>
<title>Creating new AWS credentials for your AWS account</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/self_aws_account/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/self_aws_account/</guid>
<description>Use these instructions to get a AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY which you will need for the workshop If you are using your own AWS account These instructions are for you. Use this guide if you are running the workshop on your own, or with at an event using your own AWS account you have brought with you If you are attending an in-person workshop and were provided with an AWS account by the instructor</description>
</item>
<item>
<title>Delete workshop CloudFormation stacks - Multi region deployment</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/multi_region_stack_deletion/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/multi_region_stack_deletion/</guid>
<description>Since AWS resources deployed by AWS CloudFormation stacks may have dependencies on the stacks that were created before, then deletion must occur in the opposite order they were created Stacks with the same ordinal can be deleted at the same time. All stacks for a given ordinal must be DELETE_COMPLETE before moving on to the next ordinal The AWS Console does not let you select multiple stacks for deletion. To simultaneously delete stacks, individually select one stack at a time and click the Delete button.</description>
</item>
<item>
<title>Disable All Public Read Access to an S3 Bucket using AWS CLI</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/s3_with_aws_cli/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/s3_with_aws_cli/</guid>
<description>Disable read access to S3 bucket This command will disable public read from an entire bucket. If you want to only disable public read from one object, use the AWS Console instructions If your S3 bucket is in a different aWS account, you will need to provide credentials for that account first. aws ssm start-automation-execution --document-name AWS-DisableS3BucketPublicReadWrite --parameters &quot;{\&quot;S3BucketName\&quot;: [\&quot;&lt;bucket-name&gt;\&quot;]}&quot; Return to the Lab Guide, but keep this page open if you want to re-enable public read access to the bucket after testing.</description>
</item>
<item>
<title>Multi Region State Machine</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/multi_region_state_machine/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/multi_region_state_machine/</guid>
<description/>
</item>
<item>
<title>New Execution Input for **multi region** Deployment</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/multi_region_event_data/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/multi_region_event_data/</guid>
<description>On the &ldquo;New execution&rdquo; dialog, for &ldquo;Enter an execution name&rdquo; enter BuildResiliency Then for &ldquo;Input&rdquo; enter JSON that will be used to supply parameter values to the Lambdas in the workflow. multi region uses the following values { &quot;region1&quot;: { &quot;log_level&quot;: &quot;DEBUG&quot;, &quot;region_name&quot;: &quot;us-east-2&quot;, &quot;secondary_region_name&quot;: &quot;us-west-2&quot;, &quot;cfn_region&quot;: &quot;us-east-2&quot;, &quot;cfn_bucket&quot;: &quot;aws-well-architected-labs-ohio&quot;, &quot;folder&quot;: &quot;Reliability/&quot;, &quot;workshop&quot;: &quot;300-ResiliencyofEC2RDSandS3&quot;, &quot;boot_bucket&quot;: &quot;aws-well-architected-labs-ohio&quot;, &quot;boot_prefix&quot;: &quot;Reliability/&quot;, &quot;websiteimage&quot; : &quot;https://aws-well-architected-labs-ohio.s3.us-east-2.amazonaws.com/images/Cirque_of_the_Towers.jpg&quot; }, &quot;region2&quot;: { &quot;log_level&quot;: &quot;DEBUG&quot;, &quot;region_name&quot;: &quot;us-west-2&quot;, &quot;secondary_region_name&quot;: &quot;us-east-2&quot;, &quot;cfn_region&quot;: &quot;us-east-2&quot;, &quot;cfn_bucket&quot;: &quot;aws-well-architected-labs-ohio&quot;, &quot;folder&quot;: &quot;Reliability/&quot;, &quot;workshop&quot;: &quot;300-ResiliencyofEC2RDSandS3&quot;, &quot;boot_bucket&quot;: &quot;aws-well-architected-labs-ohio&quot;, &quot;boot_prefix&quot;: &quot;Reliability/&quot;, &quot;websiteimage&quot; : &quot;https://aws-well-architected-labs-ohio.</description>
</item>
<item>
<title>Service-Linked Roles</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/service_linked_roles/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/service_linked_roles/</guid>
<description>Does AWS account already have service-linked roles AWS requires “service-linked” roles for AWS Auto Scaling, Elastic Load Balancing, and Amazon RDS to create the services and metrics they manage. If your AWS account has been previously been used, then these roles may already exist as they would have been automatically created for you. You will determine if any of the following three IAM service-linked roles already exists in the AWS account you are using for this workshop:</description>
</item>
<item>
<title>Setup AWS credentials and configuration</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/aws_credentials/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/aws_credentials/</guid>
<description>You will supply configuration and credentials used by the AWS CLI and AWS SDK to access your AWS account. You identified these credentials back in step 1 of the Lab Guide Choose an option Select the appropriate option for configuration of your AWS credentials: Option 1 - Using AWS instructor supplied accounts with Linux-style environment variables Option 2 - Using AWS CLI Option 3 - Creating configuration files manually Option 4 - Using PowerShell commands for Windows Option 1 For instructor supplied AWS accounts If BOTH of the following are true then you may use Option 1</description>
</item>
<item>
<title>Software Install</title>
<link>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/software_install/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/300_labs/300_testing_for_resiliency_of_ec2_rds_and_s3/documentation/software_install/</guid>
<description>This reference will help you install software necessary to setup your workshop environment AWS CLI jq Install AWS CLI v2 The AWS Command Line Interface (AWS CLI) is a unified tool that provides a consistent interface for interacting with all parts of AWS. Linux This includes: AWS CloudShell All native Linux installs Windows Subsystem for Linux (WSL) Verify existing version: Run the following command aws --version If the version number is less than 2.</description>
</item>
<item>
<title>Troubleshooting Guide to Tuning your Insights Query</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/documentation/tuneinsightsquery/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/documentation/tuneinsightsquery/</guid>
<description>Troubleshooting Guide to Tuning your Insights Query Verify you are in the correct AWS Region You should be in the east region If you used the directions in this lab, then this is Ohio (us-east-2) If your query returned zero results or less than three results: Possibility #1: It was been too recent since you did the bucket operations It usually takes five minutes after an operation for it to show up in CloudTrail and can take as long as 15 minutes or</description>
</item>
<item>
<title>Troubleshooting: CloudFormation stack deletion for Lab S3 replication lab</title>
<link>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/documentation/detachiampolicy/</link>
<pubDate>Fri, 24 Apr 2020 11:16:09 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/reliability/200_labs/200_bidirectional_replication_for_s3/documentation/detachiampolicy/</guid>
<description>If your CloudFormation stack deletion fails with status DELETE_FAILED From the CloudFormation console Click on the Events tab and refresh Verify the cause of the failure is the error: Cannot delete entity, must detach all policies first Delete workshop IAM Roles Go the the IAM console Click on Roles In the search box enter S3-Replication-Role. There should be either: Two roles shown (if you setup both replication buckets) Or just one (if you only setup one replication bucket) If you see more than two roles stop here and investigate which roles are associated with your execution of this lab Check the box next to each of the IAM Roles</description>
</item>
<item>
<title>Create new S3 bucket and add objects to it</title>
<link>https://wellarchitectedlabs.com/common/documentation/createnews3bucketandaddobjects/</link>
<pubDate>Fri, 24 Apr 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/common/documentation/createnews3bucketandaddobjects/</guid>
<description>Create new S3 bucket These steps will guide you to create a bucket Go to the S3 console at https://console.aws.amazon.com/s3 Click Create bucket For Bucket name supply a name. This must be unique across all buckets in AWS Tip: Name the bucket &lt;first_name&gt;&lt;last_initial&gt;_&lt;date in yyyymmdd format&gt; (do NOT include the angle brackets) Click Next three times Review screen: click Create bucket</description>
</item>
<item>
<title>example implementations for CreateNewCloudFormationStack</title>
<link>https://wellarchitectedlabs.com/common/examples/usecreatenewcloudformationstack/</link>
<pubDate>Fri, 24 Apr 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/common/examples/usecreatenewcloudformationstack/</guid>
<description>Case 1 - all parameters left as default Case 2 - provides directions to update or view one or more parameters Case 1 - all parameters left as default Go to the AWS CloudFormation console at https://console.aws.amazon.com/cloudformation and click Create Stack &gt; With new resources Leave Prepare template setting as-is For Template source select Upload a template file Click Choose file and supply the CloudFormation template you downloaded: staticwebapp.</description>
</item>
<item>
<title>Setup AWS credentials and configuration</title>
<link>https://wellarchitectedlabs.com/common/documentation/aws_credentials/</link>
<pubDate>Fri, 24 Apr 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/common/documentation/aws_credentials/</guid>
<description>You will supply configuration and credentials used by the AWS CLI and AWS SDK to access your AWS account. Choose an option Select the appropriate option for configuration of your AWS credentials: Option 1 - Using AWS instructor supplied accounts with Linux-style environment variables Option 2 - Using AWS CLI Option 3 - Creating configuration files manually Option 4 - Using PowerShell commands for Windows Option 1 For instructor supplied AWS accounts If BOTH of the following are true then you may use Option 1</description>
</item>
<item>
<title>Software Install</title>
<link>https://wellarchitectedlabs.com/common/documentation/software_install/</link>
<pubDate>Fri, 24 Apr 2020 11:16:08 -0400</pubDate>
<guid>https://wellarchitectedlabs.com/common/documentation/software_install/</guid>
<description>This reference will help you install software necessary to setup your workshop environment AWS CLI jq Install AWS CLI The AWS Command Line Interface (AWS CLI) is a unified tool that provides a consistent interface for interacting with all parts of AWS. Linux This includes: AWS CloudShell All native Linux installs MacOS Windows Subsystem for Linux (WSL) Run the following command</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/crawler-cfn/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/crawler-cfn/</guid>
<description>Below is a sample crawler config file. It is suggested you modify your existing file, modifications are between &lsquo;***&rsquo; characters. Variables that need to be changed in the new code below: (region): The region that contains the Lambda function (accountID): The account that contains the Lambda function AWSTemplateFormatVersion: 2010-09-09 Resources: AWSCURDatabase: Type: 'AWS::Glue::Database' Properties: DatabaseInput: Name: '(Database Name)' CatalogId: !Ref AWS::AccountId AWSCURCrawlerComponentFunction: Type: 'AWS::IAM::Role' Properties: AssumeRolePolicyDocument: Version: 2012-10-17 Statement: - Effect: Allow Principal: Service: - glue.</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/iam_athena/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/iam_athena/</guid>
<description>IAM policy for access to Athena NOTE: This Policy is to be used as a starting point only. Ensure to follow security best practices and only provide the minimum required access. You will also need to modify the and fields before use. { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Sid&quot;: &quot;VisualEditor0&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;athena:StartQueryExecution&quot;, &quot;glue:GetCrawler&quot;, &quot;glue:GetDataCatalogEncryptionSettings&quot;, &quot;glue:GetTableVersions&quot;, &quot;glue:GetPartitions&quot;, &quot;athena:GetQueryResults&quot;, &quot;athena:ListWorkGroups&quot;, &quot;athena:GetNamedQuery&quot;, &quot;glue:GetDevEndpoint&quot;, &quot;glue:GetSecurityConfiguration&quot;, &quot;glue:GetResourcePolicy&quot;, &quot;glue:GetTrigger&quot;, &quot;glue:GetUserDefinedFunction&quot;, &quot;athena:GetExecutionEngine&quot;, &quot;glue:GetJobRun&quot;, &quot;athena:GetExecutionEngines&quot;, &quot;s3:HeadBucket&quot;, &quot;glue:GetUserDefinedFunctions&quot;, &quot;glue:GetClassifier&quot;, &quot;s3:PutAccountPublicAccessBlock&quot;, &quot;athena:GetQueryResultsStream&quot;, &quot;glue:GetJobs&quot;, &quot;glue:GetTables&quot;, &quot;glue:GetTriggers&quot;, &quot;athena:GetNamespace&quot;, &quot;athena:GetQueryExecutions&quot;, &quot;athena:GetCatalogs&quot;, &quot;athena:ListNamedQueries&quot;, &quot;athena:GetNamespaces&quot;, &quot;glue:GetPartition&quot;, &quot;glue:GetDevEndpoints&quot;, &quot;athena:GetTables&quot;, &quot;athena:GetTable&quot;, &quot;athena:BatchGetNamedQuery&quot;, &quot;athena:BatchGetQueryExecution&quot;, &quot;glue:GetJob&quot;, &quot;glue:GetConnections&quot;, &quot;glue:GetCrawlers&quot;, &quot;glue:GetClassifiers&quot;, &quot;athena:ListQueryExecutions&quot;, &quot;glue:GetCatalogImportStatus&quot;, &quot;athena:GetWorkGroup&quot;, &quot;glue:GetConnection&quot;, &quot;glue:BatchGetPartition&quot;, &quot;glue:GetSecurityConfigurations&quot;, &quot;glue:GetDatabases&quot;, &quot;athena:ListTagsForResource&quot;, &quot;glue:GetTable&quot;, &quot;glue:GetDatabase&quot;, &quot;s3:GetAccountPublicAccessBlock&quot;, &quot;glue:GetDataflowGraph&quot;, &quot;s3:ListAllMyBuckets&quot;, &quot;athena:GetQueryExecution&quot;, &quot;glue:GetPlan&quot;, &quot;glue:GetCrawlerMetrics&quot;, &quot;glue:GetJobRuns&quot; ], &quot;Resource&quot;: &quot;*&quot; }, { &quot;Sid&quot;: &quot;VisualEditor1&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;s3:PutObject&quot;, &quot;s3:GetObject&quot;, &quot;s3:ListBucketMultipartUploads&quot;, &quot;s3:AbortMultipartUpload&quot;, &quot;s3:CreateBucket&quot;, &quot;s3:ListBucket&quot;, &quot;s3:GetBucketLocation&quot;, &quot;s3:ListMultipartUploadParts&quot; ], &quot;Resource&quot;: [ &quot;arn:aws:s3:::aws-athena-query-results-&lt;Account ID&gt;-us-east-1&quot;, &quot;arn:aws:s3:::aws-athena-query-results-&lt;Account ID&gt;-us-east-1/*&quot; ] }, { &quot;Sid&quot;: &quot;VisualEditor2&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;s3:ListBucketByTags&quot;, &quot;s3:GetLifecycleConfiguration&quot;, &quot;s3:GetBucketTagging&quot;, &quot;s3:GetInventoryConfiguration&quot;, &quot;s3:GetObjectVersionTagging&quot;, &quot;s3:ListBucketVersions&quot;, &quot;s3:GetBucketLogging&quot;, &quot;s3:ListBucket&quot;, &quot;s3:GetAccelerateConfiguration&quot;, &quot;s3:GetBucketPolicy&quot;, &quot;s3:GetObjectVersionTorrent&quot;, &quot;s3:GetObjectAcl&quot;, &quot;s3:GetEncryptionConfiguration&quot;, &quot;s3:GetBucketRequestPayment&quot;, &quot;s3:GetObjectVersionAcl&quot;, &quot;s3:GetObjectTagging&quot;, &quot;s3:GetMetricsConfiguration&quot;, &quot;s3:GetBucketPublicAccessBlock&quot;, &quot;s3:GetBucketPolicyStatus&quot;, &quot;s3:ListBucketMultipartUploads&quot;, &quot;s3:GetBucketWebsite&quot;, &quot;s3:GetBucketVersioning&quot;, &quot;s3:GetBucketAcl&quot;, &quot;s3:GetBucketNotification&quot;, &quot;s3:GetReplicationConfiguration&quot;, &quot;s3:ListMultipartUploadParts&quot;, &quot;s3:GetObject&quot;, &quot;s3:GetObjectTorrent&quot;, &quot;s3:GetBucketCORS&quot;, &quot;s3:GetAnalyticsConfiguration&quot;, &quot;s3:GetObjectVersionForReplication&quot;, &quot;s3:GetBucketLocation&quot;, &quot;s3:GetObjectVersion&quot; ], &quot;Resource&quot;: [ &quot;arn:aws:s3:::&lt;S3 CUR Bucket&gt;/*&quot;, &quot;arn:aws:s3:::&lt;S3 CUR Bucket&gt;&quot; ] } ] }</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/s3_bucket_policy/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/s3_bucket_policy/</guid>
<description>Bucket policy for member/linked account access to CUR files NOTE: Replace the Account ID [Sub-Account ID] with your own account ID, and the bucket name [S3 Bucket Name] with your bucket name. { &quot;Version&quot;: &quot;2008-10-17&quot;, &quot;Id&quot;: &quot;Policy1335892530063&quot;, &quot;Statement&quot;: [ { &quot;Sid&quot;: &quot;Stmt1335892150622&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Principal&quot;: { &quot;AWS&quot;: &quot;arn:aws:iam::386209384616:root&quot; }, &quot;Action&quot;: [ &quot;s3:GetBucketAcl&quot;, &quot;s3:GetBucketPolicy&quot; ], &quot;Resource&quot;: &quot;arn:aws:s3:::[S3 Bucket Name]&quot; }, { &quot;Sid&quot;: &quot;Stmt1335892526596&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Principal&quot;: { &quot;AWS&quot;: &quot;arn:aws:iam::386209384616:root&quot; }, &quot;Action&quot;: &quot;s3:PutObject&quot;, &quot;Resource&quot;: &quot;arn:aws:s3:::[S3 Bucket Name]/*&quot; }, { &quot;Sid&quot;: &quot;Stmt1546900919345&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Principal&quot;: { &quot;AWS&quot;: &quot;arn:aws:iam::[Sub-Account ID]:root&quot; }, &quot;Action&quot;: &quot;s3:ListBucket&quot;, &quot;Resource&quot;: &quot;arn:aws:s3:::[S3 Bucket Name]&quot; }, { &quot;Sid&quot;: &quot;Stmt1546901049588&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Principal&quot;: { &quot;AWS&quot;: &quot;arn:aws:iam::[Sub-Account ID]:root&quot; }, &quot;Action&quot;: &quot;s3:GetObject&quot;, &quot;Resource&quot;: &quot;arn:aws:s3:::[S3 Bucket Name]/*&quot; } ] }</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/s3linkedputacl/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/s3linkedputacl/</guid>
<description>Here is the Lambda function to re-write object ACLs. It is triggered by an S3 Event, reads the folder from the object - and then applies the required object ACL: FULL_CONTROL for the owner, READ for the sub account. Edit the following fields in the code below: folder1: The name of the folder where new files will be placed Owner Account Name: The owner account name - the account email without the @companyname, they will get FULL_CONTROL permissions Owner Canonical ID: The owner canonical ID, to get the Canonical ID, refer to: https://docs.</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/sub_account_split/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/sub_account_split/</guid>
<description>Below is the code for the lambda function. You will need to modify the following variable: athena_output: This is where Athena puts output data, this is typically the management/payer Account ID, which is the default folder for Athena output queries bucketname: This is the output bucket for the Athena queries You will need to modify the following arrays, the order is important - the first folder in the subfolder array, will be given the permissions of the first element of the S3ObjectPolicies array.</description>
</item>
<item>
<title/>
<link>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/subacctsplit_role/</link>
<pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
<guid>https://wellarchitectedlabs.com/cost/300_labs/300_splitting_sharing_cur_access/code/subacctsplit_role/</guid>
<description>Review the policy below, and use it as a starting point to create your policy for the Lambda fuction. The following fields will need to be changed: Output bucket: The S3 bucket that will contain the output from the Athena queries Account ID: the management/payer account ID Source bucket: the location of the original CUR files in the management/payer { &quot;Version&quot;: &quot;2012-10-17&quot;, &quot;Statement&quot;: [ { &quot;Sid&quot;: &quot;VisualEditor0&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;athena:StartQueryExecution&quot;, &quot;s3:DeleteObjectVersion&quot;, &quot;athena:GetQueryResults&quot;, &quot;s3:ListBucket&quot;, &quot;athena:GetNamedQuery&quot;, &quot;logs:PutLogEvents&quot;, &quot;athena:ListQueryExecutions&quot;, &quot;athena:ListNamedQueries&quot;, &quot;s3:PutObject&quot;, &quot;s3:GetObject&quot;, &quot;logs:CreateLogStream&quot;, &quot;athena:GetQueryExecution&quot;, &quot;s3:DeleteObject&quot; ], &quot;Resource&quot;: [ &quot;arn:aws:s3:::(output bucket)/*&quot;, &quot;arn:aws:logs:us-east-1:(account ID):log-group:/aws/lambda/SubAcctSplit:*&quot;, &quot;arn:aws:athena:*:*:workgroup/*&quot; ] }, { &quot;Sid&quot;: &quot;VisualEditor1&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;s3:ListBucket&quot;, &quot;Resource&quot;: &quot;arn:aws:s3:::*&quot; }, { &quot;Sid&quot;: &quot;VisualEditor2&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;glue:GetDatabase&quot;, &quot;glue:CreateTable&quot;, &quot;glue:GetPartitions&quot;, &quot;glue:GetPartition&quot;, &quot;glue:DeleteTable&quot;, &quot;glue:GetTable&quot; ], &quot;Resource&quot;: &quot;*&quot; }, { &quot;Sid&quot;: &quot;VisualEditor3&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;s3:GetBucketLocation&quot;, &quot;s3:GetObject&quot;, &quot;s3:ListBucket&quot;, &quot;s3:ListBucketMultipartUploads&quot;, &quot;s3:ListMultipartUploadParts&quot;, &quot;s3:AbortMultipartUpload&quot;, &quot;s3:CreateBucket&quot;, &quot;s3:PutObject&quot; ], &quot;Resource&quot;: [ &quot;arn:aws:s3:::aws-athena-query-results-us-east-1-(account ID)/*&quot;, &quot;arn:aws:s3:::aws-athena-query-results-us-east-1-(account ID)&quot; ] }, { &quot;Sid&quot;: &quot;VisualEditor4&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: [ &quot;s3:GetObject&quot;, &quot;s3:ListBucket&quot; ], &quot;Resource&quot;: &quot;arn:aws:s3:::(source bucket)/*&quot; }, { &quot;Sid&quot;: &quot;VisualEditor5&quot;, &quot;Effect&quot;: &quot;Allow&quot;, &quot;Action&quot;: &quot;logs:CreateLogGroup&quot;, &quot;Resource&quot;: &quot;arn:aws:logs:us-east-1:(account ID):*&quot; } ] }</description>
</item>
</channel>
</rss>